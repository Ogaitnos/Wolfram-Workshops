(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    220597,       4412]
NotebookOptionsPosition[    213246,       4275]
NotebookOutlinePosition[    213655,       4291]
CellTagsIndexPosition[    213612,       4288]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Data Analysis and Dataset", "Section",
 CellChangeTimes->{{3.818244990492752*^9, 
  3.818244995481701*^9}},ExpressionUUID->"1f7d7962-db60-4ebc-855b-\
e89dd4d03cb2"],

Cell[CellGroupData[{

Cell[TextData[{
 "One of the first steps you want to do with data is to bring them into the \
notebook (There are ways of doing data analysis out of core and querying \
external data bases, but in this session we will cover only those where the \
data can be brought into the notebook). To do this we use the ",
 StyleBox["Import",
  FontWeight->"Bold"],
 " function,"
}], "Item",
 CellChangeTimes->{{3.818251107794369*^9, 
  3.8182511295239563`*^9}},ExpressionUUID->"5e4f55c8-a22f-41b4-85ac-\
756202c8b768"],

Cell[CellGroupData[{

Cell[BoxData["$ImportFormats"], "Input",
 CellChangeTimes->{{3.8182511334207106`*^9, 3.818251137627387*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c7866749-dfed-4285-8543-fd13ee5ccf51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"3DS\"\>", ",", "\<\"7z\"\>", ",", "\<\"ACO\"\>", 
   ",", "\<\"Affymetrix\"\>", ",", "\<\"AgilentMicroarray\"\>", 
   ",", "\<\"AIFF\"\>", ",", "\<\"ApacheLog\"\>", ",", "\<\"ArcGRID\"\>", 
   ",", "\<\"AU\"\>", ",", "\<\"AVI\"\>", ",", "\<\"Base64\"\>", 
   ",", "\<\"BDF\"\>", ",", "\<\"Binary\"\>", ",", "\<\"Bit\"\>", 
   ",", "\<\"BMP\"\>", ",", "\<\"BSON\"\>", ",", "\<\"Byte\"\>", 
   ",", "\<\"BYU\"\>", ",", "\<\"BZIP2\"\>", ",", "\<\"CDED\"\>", 
   ",", "\<\"CDF\"\>", ",", "\<\"CDX\"\>", ",", "\<\"CDXML\"\>", 
   ",", "\<\"Character16\"\>", ",", "\<\"Character32\"\>", 
   ",", "\<\"Character8\"\>", ",", "\<\"CIF\"\>", ",", "\<\"CML\"\>", 
   ",", "\<\"Complex128\"\>", ",", "\<\"Complex256\"\>", 
   ",", "\<\"Complex64\"\>", ",", "\<\"CSV\"\>", ",", "\<\"CUBE\"\>", 
   ",", "\<\"CUR\"\>", ",", "\<\"DAE\"\>", ",", "\<\"DBF\"\>", 
   ",", "\<\"DICOM\"\>", ",", "\<\"DICOMDIR\"\>", ",", "\<\"DIF\"\>", 
   ",", "\<\"DIMACS\"\>", ",", "\<\"Directory\"\>", ",", "\<\"DOT\"\>", 
   ",", "\<\"DXF\"\>", ",", "\<\"EDF\"\>", ",", "\<\"EML\"\>", 
   ",", "\<\"EPS\"\>", ",", "\<\"ExpressionJSON\"\>", 
   ",", "\<\"ExpressionML\"\>", ",", "\<\"FASTA\"\>", ",", "\<\"FASTQ\"\>", 
   ",", "\<\"FBX\"\>", ",", "\<\"FCHK\"\>", ",", "\<\"FCS\"\>", 
   ",", "\<\"FITS\"\>", ",", "\<\"FLAC\"\>", ",", "\<\"GaussianLog\"\>", 
   ",", "\<\"GenBank\"\>", ",", "\<\"GeoJSON\"\>", ",", "\<\"GeoTIFF\"\>", 
   ",", "\<\"GIF\"\>", ",", "\<\"GPX\"\>", ",", "\<\"Graph6\"\>", 
   ",", "\<\"Graphlet\"\>", ",", "\<\"GraphML\"\>", ",", "\<\"GRIB\"\>", 
   ",", "\<\"GTOPO30\"\>", ",", "\<\"GXL\"\>", ",", "\<\"GZIP\"\>", 
   ",", "\<\"HarwellBoeing\"\>", ",", "\<\"HDF\"\>", ",", "\<\"HDF5\"\>", 
   ",", "\<\"HEIF\"\>", ",", "\<\"HIN\"\>", ",", "\<\"HTML\"\>", 
   ",", "\<\"HTTPRequest\"\>", ",", "\<\"HTTPResponse\"\>", 
   ",", "\<\"ICC\"\>", ",", "\<\"ICNS\"\>", ",", "\<\"ICO\"\>", 
   ",", "\<\"ICS\"\>", ",", "\<\"Ini\"\>", ",", "\<\"Integer128\"\>", 
   ",", "\<\"Integer16\"\>", ",", "\<\"Integer24\"\>", 
   ",", "\<\"Integer32\"\>", ",", "\<\"Integer64\"\>", 
   ",", "\<\"Integer8\"\>", ",", "\<\"ISO\"\>", ",", "\<\"JavaProperties\"\>",
    ",", "\<\"JavaScriptExpression\"\>", ",", "\<\"JCAMP-DX\"\>", 
   ",", "\<\"JPEG\"\>", ",", "\<\"JPEG2000\"\>", ",", "\<\"JSON\"\>", 
   ",", "\<\"JSONLD\"\>", ",", "\<\"JVX\"\>", ",", "\<\"KML\"\>", 
   ",", "\<\"LaTeX\"\>", ",", "\<\"LEDA\"\>", ",", "\<\"List\"\>", 
   ",", "\<\"LWO\"\>", ",", "\<\"MAT\"\>", ",", "\<\"MathML\"\>", 
   ",", "\<\"Matroska\"\>", ",", "\<\"MBOX\"\>", ",", "\<\"MCTT\"\>", 
   ",", "\<\"MDB\"\>", ",", "\<\"MESH\"\>", ",", "\<\"MGF\"\>", 
   ",", "\<\"MIDI\"\>", ",", "\<\"MMCIF\"\>", ",", "\<\"MO\"\>", 
   ",", "\<\"MOL\"\>", ",", "\<\"MOL2\"\>", ",", "\<\"MP3\"\>", 
   ",", "\<\"MP4\"\>", ",", "\<\"MPS\"\>", ",", "\<\"MTP\"\>", 
   ",", "\<\"MTX\"\>", ",", "\<\"MX\"\>", ",", "\<\"MXNet\"\>", 
   ",", "\<\"NASACDF\"\>", ",", "\<\"NB\"\>", ",", "\<\"NDK\"\>", 
   ",", "\<\"NetCDF\"\>", ",", "\<\"NEXUS\"\>", ",", "\<\"NOFF\"\>", 
   ",", "\<\"NQuads\"\>", ",", "\<\"NTriples\"\>", ",", "\<\"OBJ\"\>", 
   ",", "\<\"ODS\"\>", ",", "\<\"OFF\"\>", ",", "\<\"Ogg\"\>", 
   ",", "\<\"ONNX\"\>", ",", "\<\"OpenEXR\"\>", ",", "\<\"OWLFunctional\"\>", 
   ",", "\<\"Pajek\"\>", ",", "\<\"PBM\"\>", ",", "\<\"PCAP\"\>", 
   ",", "\<\"PCX\"\>", ",", "\<\"PDB\"\>", ",", "\<\"PDF\"\>", 
   ",", "\<\"PEM\"\>", ",", "\<\"PGM\"\>", ",", "\<\"PHPIni\"\>", 
   ",", "\<\"PLY\"\>", ",", "\<\"PNG\"\>", ",", "\<\"PNM\"\>", 
   ",", "\<\"PPM\"\>", ",", "\<\"PXR\"\>", ",", "\<\"PythonExpression\"\>", 
   ",", "\<\"QuickTime\"\>", ",", "\<\"RAR\"\>", ",", "\<\"Raw\"\>", 
   ",", "\<\"RawBitmap\"\>", ",", "\<\"RawJSON\"\>", ",", "\<\"RDFXML\"\>", 
   ",", "\<\"Real128\"\>", ",", "\<\"Real32\"\>", ",", "\<\"Real64\"\>", 
   ",", "\<\"RIB\"\>", ",", "\<\"RLE\"\>", ",", "\<\"RSS\"\>", 
   ",", "\<\"RTF\"\>", ",", "\<\"SCT\"\>", ",", "\<\"SDF\"\>", 
   ",", "\<\"SDTS\"\>", ",", "\<\"SDTSDEM\"\>", ",", "\<\"SFF\"\>", 
   ",", "\<\"SHP\"\>", ",", "\<\"SMA\"\>", ",", "\<\"SME\"\>", 
   ",", "\<\"SMILES\"\>", ",", "\<\"SND\"\>", ",", "\<\"SP3\"\>", 
   ",", "\<\"SPARQLQuery\"\>", ",", "\<\"SPARQLResultsJSON\"\>", 
   ",", "\<\"SPARQLResultsXML\"\>", ",", "\<\"SPARQLUpdate\"\>", 
   ",", "\<\"Sparse6\"\>", ",", "\<\"STL\"\>", ",", "\<\"String\"\>", 
   ",", "\<\"SurferGrid\"\>", ",", "\<\"SXC\"\>", ",", "\<\"Table\"\>", 
   ",", "\<\"TAR\"\>", ",", "\<\"TerminatedString\"\>", ",", "\<\"TeX\"\>", 
   ",", "\<\"Text\"\>", ",", "\<\"TGA\"\>", ",", "\<\"TGF\"\>", 
   ",", "\<\"TIFF\"\>", ",", "\<\"TIGER\"\>", ",", "\<\"TLE\"\>", 
   ",", "\<\"TriG\"\>", ",", "\<\"TSV\"\>", ",", "\<\"Turtle\"\>", 
   ",", "\<\"UBJSON\"\>", ",", "\<\"UnsignedInteger128\"\>", 
   ",", "\<\"UnsignedInteger16\"\>", ",", "\<\"UnsignedInteger24\"\>", 
   ",", "\<\"UnsignedInteger32\"\>", ",", "\<\"UnsignedInteger64\"\>", 
   ",", "\<\"UnsignedInteger8\"\>", ",", "\<\"USGSDEM\"\>", 
   ",", "\<\"UUE\"\>", ",", "\<\"VCF\"\>", ",", "\<\"VCS\"\>", 
   ",", "\<\"VideoFormat\"\>", ",", "\<\"VTK\"\>", ",", "\<\"WARC\"\>", 
   ",", "\<\"WAV\"\>", ",", "\<\"Wave64\"\>", ",", "\<\"WDX\"\>", 
   ",", "\<\"WebP\"\>", ",", "\<\"WL\"\>", ",", "\<\"WLNet\"\>", 
   ",", "\<\"WMLF\"\>", ",", "\<\"WXF\"\>", ",", "\<\"X3D\"\>", 
   ",", "\<\"XBM\"\>", ",", "\<\"XHTML\"\>", ",", "\<\"XHTMLMathML\"\>", 
   ",", "\<\"XLS\"\>", ",", "\<\"XLSX\"\>", ",", "\<\"XML\"\>", 
   ",", "\<\"XPORT\"\>", ",", "\<\"XYZ\"\>", ",", "\<\"ZIP\"\>", 
   ",", "\<\"ZSTD\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.818251138349631*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"eb504032-c7cd-4e47-8510-77dab6132a89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "%"}]], "Input",
 CellChangeTimes->{{3.8182511495551033`*^9, 3.8182511516661825`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6b60f572-633d-4e3f-a2c7-027820d3ba78"],

Cell[BoxData["230"], "Output",
 CellChangeTimes->{3.8182511518267612`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"1f7b77fd-189e-46c6-be94-f69887595643"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\<ExampleData/financialtimeseries.csv\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.818256207418878*^9, 3.818256231443243*^9}, {
   3.8182563053013763`*^9, 3.8182563222375336`*^9}, 3.8182563537301455`*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"06606cc6-a16e-41ba-a9e3-0f9b7b4bde92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finTSData", "=", 
  RowBox[{
  "Import", "[", "\"\<ExampleData/financialtimeseries.csv\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8182512200719085`*^9, 3.8182512308198605`*^9}, {
  3.8182518102394643`*^9, 3.8182518525754533`*^9}, {3.81825275889012*^9, 
  3.8182527681349893`*^9}, {3.818254358123385*^9, 3.818254358297937*^9}, {
  3.8182544136987653`*^9, 3.818254435776945*^9}, {3.8182558842712092`*^9, 
  3.8182559457313704`*^9}, {3.8182564731190777`*^9, 
  3.8182564765678463`*^9}},ExpressionUUID->"c4289483-3766-4e3d-a6b0-\
82a99c5be3f1"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Jan 03 2006\"\>", ",", "11.82`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"Jan 04 2006\"\>", ",", "12.04`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "247", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"Dec 28 2006\"\>", ",", "14.01`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"Dec 29 2006\"\>", ",", "13.91`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.818255946164218*^9},
 CellLabel->
  "Out[82]//Short=",ExpressionUUID->"a56ab385-0575-47b4-b006-cb354186b00a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\[OpenCurlyDoubleQuote]RowCount\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]MaxColumnCount\[CloseCurlyDoubleQuote] can be used to \
determine dimensions on CSV and TSV files\
\>", "Item",
 CellChangeTimes->{{3.818255008270752*^9, 3.818255008724599*^9}, {
  3.8182550469828997`*^9, 
  3.8182550503572855`*^9}},ExpressionUUID->"b74ff2ce-f678-41c5-ab37-\
e4f459b92e43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"\"\<ExampleData/classification.tsv\>\"", ",", "\"\<RowCount\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8182550155638866`*^9, 3.818255043268785*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"e56288db-c48c-414d-9760-89f173510124"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.818255043524103*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"57f2ee6a-0902-4310-ab3a-967707db3a51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<ExampleData/classification.tsv\>\"", ",", "\"\<MaxColumnCount\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8182550155638866`*^9, 3.818255043268785*^9}, {
  3.8182557635186863`*^9, 3.818255769403283*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"6abf871f-05b4-479e-a211-136c196c6068"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8182557697774253`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"d63463a8-d770-4d24-9704-70582416b312"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can see what this data actually looks like", "Item",
 CellChangeTimes->{{3.8182557727875013`*^9, 
  3.8182557799164968`*^9}},ExpressionUUID->"287d3959-4801-42c3-a962-\
8bb99ebc9573"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextGrid", "[", 
  RowBox[{"classificationData", "=", 
   RowBox[{"Import", "[", "\"\<ExampleData/classification.tsv\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8182550155638866`*^9, 3.818255043268785*^9}, {
  3.8182557635186863`*^9, 3.818255796362*^9}, {3.8182752138429813`*^9, 
  3.818275228762526*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"4b3560ed-61a4-4adf-8a03-3cd622f0ee66"],

Cell[BoxData[
 TagBox[GridBox[{
    {Cell["Rank",ExpressionUUID->"52619b3b-7e9d-4761-8446-c465ac01c5e9"], 
     Cell["Fruit Fly",ExpressionUUID->"75cfb4eb-5e44-4832-b633-e8b517b28994"],
      Cell["Human",ExpressionUUID->"ced42402-d679-44aa-951c-e61792db017d"], 
     Cell["Pea",ExpressionUUID->"c635469d-d3f4-49ea-86df-8309a575599d"], Cell[
     "E.coli",ExpressionUUID->"9e5cc670-4cb5-4ecc-8057-383627c6b828"]},
    {Cell["Domain",ExpressionUUID->"c976b849-49ed-4099-a220-addaecd26aa3"], 
     Cell["Eukaryota",ExpressionUUID->"f2029895-83bd-4e1f-86f0-72267e07acce"],
      Cell["Eukaryota",ExpressionUUID->
      "d2d431d1-0fac-43da-b150-b009613a92a9"], Cell[
     "Eukaryota",ExpressionUUID->"c89f13c4-323f-4cf4-8658-a38e73025295"], 
     Cell["Bacteria",ExpressionUUID->"b45b0c59-ce96-4a44-8307-e28bc62de176"]},
    {Cell["Kingdom",ExpressionUUID->"05460229-7f29-4784-8ff4-740543140226"], 
     Cell["Animalia",ExpressionUUID->"9d333a41-40b4-470a-9034-c4932239b6ec"], 
     Cell["Animalia",ExpressionUUID->"4b718937-17dc-4927-a132-de2bf6d666ce"], 
     Cell["Plantae",ExpressionUUID->"39971b8d-4d6c-45d8-9655-82d17cb18b6d"], 
     Cell["Monera",ExpressionUUID->"3d8a1583-af37-420e-8d43-d723d318b9ad"]},
    {Cell["Phylum",ExpressionUUID->"63b86fd9-c918-4e91-bfc2-2b33e104e9e4"], 
     Cell["Arthropoda",ExpressionUUID->
      "3a129804-0a1f-403c-b06b-237cbd1d3899"], Cell[
     "Chordata",ExpressionUUID->"5fc7c8e6-a491-40e1-b473-1f98b930a87d"], Cell[
     "Magnoliophyta",ExpressionUUID->"5699bdf1-7bd1-4fb5-9b25-beae4c66d714"], 
     Cell["Proteobacteria",ExpressionUUID->
      "4ef5c00e-97f0-4a54-93f0-a6c702a57783"]},
    {Cell["Class",ExpressionUUID->"cc01f26b-1680-4978-b816-85fdd8899adb"], 
     Cell["Insecta",ExpressionUUID->"d6b19987-a85e-4608-ae8a-4bdc11c9b977"], 
     Cell["Mammalia",ExpressionUUID->"46a1ecd7-ba71-4b45-928f-850f6bbde3b0"], 
     Cell["Magnoliopsida",ExpressionUUID->
      "13b7fde4-1763-4127-8847-8ce54224467f"], Cell[
     "Proteobacteria",ExpressionUUID->"71efc7d7-934f-4da7-a477-bed5a8a5e5eb"]},
    {Cell["Order",ExpressionUUID->"ff374241-ecbc-416c-a351-3bd7726dcd61"], 
     Cell["Diptera",ExpressionUUID->"f9af8969-5d0a-4b73-8d45-909ed7dcaae7"], 
     Cell["Primates",ExpressionUUID->"b51db583-9033-4f25-8f56-49f65f672d98"], 
     Cell["Fabales",ExpressionUUID->"23695c40-5263-4aaa-bbcb-b63e9b4640ab"], 
     Cell["Enterobacteriales",ExpressionUUID->
      "cdfc7627-3bb9-4464-bd22-07ed2ddbf102"]},
    {Cell["Family",ExpressionUUID->"2d6c932b-6d37-446f-8817-03210c5849db"], 
     Cell["Drosophilidae",ExpressionUUID->
      "ad7e6a5b-cdff-4cd7-a446-b7a253857360"], Cell[
     "Hominidae",ExpressionUUID->"4c96c7c9-4aa3-4148-9723-63861e637cd2"], 
     Cell["Fabaceae",ExpressionUUID->"4d5307e7-6f64-40c1-aa1a-ea0a51cf2ed8"], 
     Cell["Enterobacteriaceae",ExpressionUUID->
      "0d3d15a3-2bd4-4a2f-8664-5ec9d254093f"]},
    {Cell["Genus",ExpressionUUID->"6ff0d1dc-c868-4b80-9139-eddd70707fe5"], 
     Cell["Drosophila",ExpressionUUID->
      "c2e1b25c-6b30-475c-8daa-d6390dcae7e5"], Cell[
     "Homo",ExpressionUUID->"54a7188c-c903-4537-83c8-620aa8c44baf"], Cell[
     "Pisum",ExpressionUUID->"accfa44a-1b1f-441a-8c28-665981d80f4e"], Cell[
     "Escherichia",ExpressionUUID->"6308f8f1-d699-4673-aec8-ad8f217b1112"]},
    {Cell["Species",ExpressionUUID->"d19bc4da-761f-4ce9-a787-1c588194fa25"], 
     Cell["D.melanogaster",ExpressionUUID->
      "3f303fdc-9efa-4149-bf28-9b5f823c1e12"], Cell[
     "H.sapiens",ExpressionUUID->"508e7de6-e518-4ab1-8c13-67229fd3aab4"], 
     Cell["P.sativum",ExpressionUUID->"c83c47c8-05d0-4db7-9358-af3ffd945b91"],
      Cell["E.coli",ExpressionUUID->"ee112ab5-13da-4cfb-b7c3-4df7ce032916"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "TextGrid"]], "Output",
 CellChangeTimes->{{3.818255786036249*^9, 3.818255796754936*^9}, 
   3.8182752355083404`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"5632ab70-e22f-4fa5-9e0f-d857572321f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "classificationData", "]"}]], "Input",
 CellChangeTimes->{{3.8182755990138454`*^9, 3.8182756065580378`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"796e38b3-8e7f-42fa-89d0-cb9ee1a1c8dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.818275607394554*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"e71144b0-1c94-4f26-9d77-27df18fce09a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
For cases in which we are importing an .xls or xlsx document we need to bear \
in mind that these usually come with different sheets\
\>", "Item",
 CellChangeTimes->{{3.8182744910794706`*^9, 3.818274499283514*^9}, {
  3.8182748494321513`*^9, 
  3.8182748686402607`*^9}},ExpressionUUID->"f77eb044-5cd2-47b1-86a0-\
c7605818fb59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", "\"\<ExampleData/cities.xlsx\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8182749757402325`*^9, 3.8182749758937583`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"74c9af7d-e236-47a7-a518-97da30aa926a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"City\"\>", ",", "\<\"Country\"\>", 
       ",", "\<\"Population\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Tokyo\"\>", ",", "\<\"Japan\"\>", ",", "8.3`*^6"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Chicago\"\>", ",", "\<\"United States\"\>", ",", 
       "2.8`*^6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"London\"\>", ",", "\<\"United Kingdom\"\>", ",", 
       "7.4`*^6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Berlin\"\>", ",", "\<\"Germany\"\>", ",", "3.4`*^6"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.818274976981815*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"e8384c6b-949a-4625-ae98-206ba69fd204"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", "\"\<ExampleData/cities.xlsx\>\"", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8182749757402325`*^9, 3.818274994409691*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"5de1392e-e7ae-4417-aaa9-73aef54384fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"City\"\>", ",", "\<\"Country\"\>", 
     ",", "\<\"Population\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tokyo\"\>", ",", "\<\"Japan\"\>", ",", "8.3`*^6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chicago\"\>", ",", "\<\"United States\"\>", ",", "2.8`*^6"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"London\"\>", ",", "\<\"United Kingdom\"\>", ",", "7.4`*^6"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Berlin\"\>", ",", "\<\"Germany\"\>", ",", "3.4`*^6"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.818274994831395*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"14ad86c7-d369-4de8-b89f-dc07987c9692"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"\"\<ExampleData/cities.xlsx\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8182748794982824`*^9, 3.8182749301737814`*^9}, {
  3.818275728777178*^9, 3.818275822951643*^9}, {3.818275976788018*^9, 
  3.818276026496833*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"b7066b95-3023-467d-95f0-0a93f3b2bcbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"City\"\>", ",", "\<\"Country\"\>", 
     ",", "\<\"Population\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tokyo\"\>", ",", "\<\"Japan\"\>", ",", "8.3`*^6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chicago\"\>", ",", "\<\"United States\"\>", ",", "2.8`*^6"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"London\"\>", ",", "\<\"United Kingdom\"\>", ",", "7.4`*^6"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Berlin\"\>", ",", "\<\"Germany\"\>", ",", "3.4`*^6"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8182758040912356`*^9, 3.818275823721535*^9}, {
  3.818275982769558*^9, 3.8182760271500287`*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"726d04bd-5499-47f9-868a-dc75320c6976"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["An example with a slightly more complicated document", "Item",
 CellChangeTimes->{{3.8182762624112053`*^9, 
  3.818276291816803*^9}},ExpressionUUID->"bbd8cf98-1508-47d6-aea7-\
f7a5fe0ebc5c"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\<ExampleData/mrrogers.xlsx\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8182763063314285`*^9, 
  3.818276309972439*^9}},ExpressionUUID->"ed83372a-d3e2-4216-98b9-\
9f38a6d9c874"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", "\"\<ExampleData/mrrogers.xlsx\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8182763133106546`*^9, 3.8182764144459586`*^9}, {
  3.8182765826893625`*^9, 
  3.8182765974017706`*^9}},ExpressionUUID->"2ee3d907-eac4-4a97-becf-\
3fcaf5d49e8a"],

Cell[BoxData[
 TemplateBox[{
  "Import", "noelem", 
   "\"The Import element \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Association\\\\\\\"\
\\\"}]\\)\\\" is not present when importing as \
\\!\\(\\*RowBox[{\\\"\\\\\\\"XLSX\\\\\\\"\\\"}]\\).\"", 2, 128, 20, 
   33469143102381313128, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8182765884299893`*^9},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"10d9bf4d-83bc-4c99-9ead-579271dedc17"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.818276588441955*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"a4ad0313-dbab-40c5-acdc-f764d5d19221"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"\"\<ExampleData/mrrogers.xlsx\>\"", ",", "\"\<Dimensions\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8182763133106546`*^9, 3.8182764324806995`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"0b80df51-1cb8-4afe-a1eb-527d390b64f3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"1980\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"13", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"1981\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"17", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"1982\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"23", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"1983\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"18", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"1984\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"17", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"1985\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"18", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.818276434258433*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"3e2bf428-d956-4b3a-9f92-c932eb3fbf93"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dataset", "Subsection",
 CellChangeTimes->{{3.818291777321059*^9, 
  3.8182917783543644`*^9}},ExpressionUUID->"f703d38c-6e10-4e9a-b30d-\
2792f15e89c5"],

Cell[CellGroupData[{

Cell["Quick Intro", "Subsubsection",
 CellChangeTimes->{{3.818293039013499*^9, 
  3.8182930404322033`*^9}},ExpressionUUID->"cf9f969a-c936-4f69-a077-\
24ab6a247d3a"],

Cell[TextData[{
 "Before carrying forward with other different ways of importing data we will \
cover a particular wrapper that is of great use for dealing with data in \
general which is ",
 StyleBox["Dataset",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.8182917855967107`*^9, 
  3.8182918322615795`*^9}},ExpressionUUID->"40460404-f8a8-4b9d-a84e-\
f01b35852f17"],

Cell[TextData[{
 "You can apply ",
 StyleBox["Dataset",
  FontWeight->"Bold"],
 " to lists of lists, list of associations, associations of associations and \
more in order to get a nice tabular representation of data that is convenient \
to query"
}], "Item",
 CellChangeTimes->{{3.818291840982122*^9, 
  3.8182919196360116`*^9}},ExpressionUUID->"3dd9f20d-2bb0-468b-88de-\
bf264d73efd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating Datasets", "Subsubsection",
 CellChangeTimes->{{3.818293026060418*^9, 
  3.8182930286978087`*^9}},ExpressionUUID->"aa4296d4-26a8-4867-b1f6-\
68d5ad8f9fc7"],

Cell[CellGroupData[{

Cell["When applied to lists you get just a table", "Item",
 CellChangeTimes->{{3.8182919267214904`*^9, 
  3.8182919422720237`*^9}},ExpressionUUID->"0e126ed4-8388-4cd7-83ba-\
79f5a3de8f55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    SubscriptBox["a", 
     RowBox[{"i", ",", "j"}]], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818291944036331*^9, 3.8182919751291103`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"98a4231c-3680-43bb-8da2-e5519db493d7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {{
        Subscript[$CellContext`a, 1, 1], 
        Subscript[$CellContext`a, 1, 2], 
        Subscript[$CellContext`a, 1, 3], 
        Subscript[$CellContext`a, 1, 4], 
        Subscript[$CellContext`a, 1, 5]}, {
        Subscript[$CellContext`a, 2, 1], 
        Subscript[$CellContext`a, 2, 2], 
        Subscript[$CellContext`a, 2, 3], 
        Subscript[$CellContext`a, 2, 4], 
        Subscript[$CellContext`a, 2, 5]}, {
        Subscript[$CellContext`a, 3, 1], 
        Subscript[$CellContext`a, 3, 2], 
        Subscript[$CellContext`a, 3, 3], 
        Subscript[$CellContext`a, 3, 4], 
        Subscript[$CellContext`a, 3, 5]}, {
        Subscript[$CellContext`a, 4, 1], 
        Subscript[$CellContext`a, 4, 2], 
        Subscript[$CellContext`a, 4, 3], 
        Subscript[$CellContext`a, 4, 4], 
        Subscript[$CellContext`a, 4, 5]}}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[4, 5], 4, 5, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 5], 4], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[4, 5], 4, 5, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 5], 4], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 4, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"1", ",", "1"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"1", ",", "2"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"1", ",", "3"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"1", ",", "4"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"1", ",", "5"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"2", ",", "1"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"2", ",", "2"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"2", ",", "3"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"2", ",", "4"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"2", ",", "5"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"3", ",", "1"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"3", ",", "2"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"3", ",", "3"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"3", ",", "4"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"3", ",", "5"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"4", ",", "1"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"4", ",", "2"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"4", ",", "3"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"4", ",", "4"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", 
                  RowBox[{"4", ",", "5"}]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{360., {65., 71.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{360., {65., 71.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.818291975523775*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"ecb7875c-2c56-482f-a944-cca307765064"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["If we have a list of associations we get the following", "Item",
 CellChangeTimes->{{3.818292005232291*^9, 
  3.818292019205249*^9}},ExpressionUUID->"e26a55bf-5e52-4a2b-afd7-\
2f1a53c730e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<a\>\"", "\[Rule]", 
       SubscriptBox["a", "i"]}], ",", 
      RowBox[{"\"\<b\>\"", "\[Rule]", 
       SubscriptBox["b", "i"]}], ",", 
      RowBox[{"\"\<c\>\"", "\[Rule]", 
       SubscriptBox["c", "i"]}]}], "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818292024230479*^9, 3.8182920865242233`*^9}, {
  3.8182921458951473`*^9, 3.818292152454461*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"3795375c-583b-46dc-9394-b04add796700"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "a" -> Subscript[$CellContext`a, 1], "b" -> 
        Subscript[$CellContext`b, 1], "c" -> Subscript[$CellContext`c, 1]], 
       Association[
       "a" -> Subscript[$CellContext`a, 2], "b" -> 
        Subscript[$CellContext`b, 2], "c" -> Subscript[$CellContext`c, 2]], 
       Association[
       "a" -> Subscript[$CellContext`a, 3], "b" -> 
        Subscript[$CellContext`b, 3], "c" -> Subscript[$CellContext`c, 3]], 
       Association[
       "a" -> Subscript[$CellContext`a, 4], "b" -> 
        Subscript[$CellContext`b, 4], "c" -> Subscript[$CellContext`c, 4]], 
       Association[
       "a" -> Subscript[$CellContext`a, 5], "b" -> 
        Subscript[$CellContext`b, 5], "c" -> Subscript[$CellContext`c, 5]]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "a"} -> 1, {All, "b"} -> 1, {All, "c"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "a" -> TypeSystem`PackageScope`UnknownShape[False], "b" -> 
            TypeSystem`PackageScope`UnknownShape[False], "c" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"a", "b", "c"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 5], 
     "Meta" -> Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "a"} -> 1, {All, "b"} -> 1, {All, "c"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "a" -> TypeSystem`PackageScope`UnknownShape[False], "b" -> 
            TypeSystem`PackageScope`UnknownShape[False], "c" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"a", "b", "c"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 5], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 5, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "a"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "b"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "b"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "c"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "c"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{224., {84.5, 90.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{224., {84.5, 90.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8182920734277897`*^9, 3.818292153105159*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"ec0fb35a-d78a-4f7d-9a46-e362352c026a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A list of nested associations", "Item",
 CellChangeTimes->{{3.818292359303895*^9, 
  3.818292364079472*^9}},ExpressionUUID->"4e5c369a-97cf-430c-b5ef-\
b16f84074f53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"letter", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "\[Rule]", 
          SubscriptBox[
           RowBox[{"ToExpression", "[", "letter", "]"}], "i"]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "5"}], "}"}]}], "]"}], "|>"}]}], "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{"letter", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
     "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818292183318944*^9, 3.8182923400713816`*^9}, {
  3.8182924425100803`*^9, 3.8182924453515263`*^9}, {3.8182928559102573`*^9, 
  3.8182928629294586`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"171ace9a-205d-48e4-a304-a4e472bdb5ee"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "a" -> Association[
         "1" -> Subscript[$CellContext`a, 1], "2" -> 
          Subscript[$CellContext`a, 2], "3" -> Subscript[$CellContext`a, 3], 
          "4" -> Subscript[$CellContext`a, 4], "5" -> 
          Subscript[$CellContext`a, 5]]], 
       Association[
       "b" -> Association[
         "1" -> Subscript[$CellContext`b, 1], "2" -> 
          Subscript[$CellContext`b, 2], "3" -> Subscript[$CellContext`b, 3], 
          "4" -> Subscript[$CellContext`b, 4], "5" -> 
          Subscript[$CellContext`b, 5]]], 
       Association[
       "c" -> Association[
         "1" -> Subscript[$CellContext`c, 1], "2" -> 
          Subscript[$CellContext`c, 2], "3" -> Subscript[$CellContext`c, 3], 
          "4" -> Subscript[$CellContext`c, 4], "5" -> 
          Subscript[$CellContext`c, 5]]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[27.], 
              TypeSystem`PackageScope`UnknownShape[False]]], 5, 
            DirectedInfinity[1], {All, All}]]], 1, 
         DirectedInfinity[1], {All}]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["1", "2", "3", "4", "5"]], 
         TypeSystem`AnyType, 5], 1], 3], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[27.], 
              TypeSystem`PackageScope`UnknownShape[False]]], 5, 
            DirectedInfinity[1], {All, All}]]], 1, 
         DirectedInfinity[1], {All}]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["1", "2", "3", "4", "5"]], 
         TypeSystem`AnyType, 5], 1], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["a"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1", 
                  Style[
                  "1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["a"], 
                    Key["1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2", 
                  Style[
                  "2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["a"], 
                    Key["2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3", 
                  Style[
                  "3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["a"], 
                    Key["3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["4", 
                  Style[
                  "4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["a"], 
                    Key["4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["5", 
                  Style[
                  "5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["a"], 
                    Key["5"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["5"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["a"], 
                 Key["5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["b"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1", 
                  Style[
                  "1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["b"], 
                    Key["1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2", 
                  Style[
                  "2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["b"], 
                    Key["2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3", 
                  Style[
                  "3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["b"], 
                    Key["3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["4", 
                  Style[
                  "4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["b"], 
                    Key["4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["5", 
                  Style[
                  "5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["b"], 
                    Key["5"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["5"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["b"], 
                 Key["5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["c"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1", 
                  Style[
                  "1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["c"], 
                    Key["1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2", 
                  Style[
                  "2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["c"], 
                    Key["2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3", 
                  Style[
                  "3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["c"], 
                    Key["3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["4", 
                  Style[
                  "4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["c"], 
                    Key["4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["5", 
                  Style[
                  "5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["c"], 
                    Key["5"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["5"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["c"], 
                 Key["5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{160., {195., 201.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{160., {195., 201.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8182922869679823`*^9, 3.8182923446377788`*^9, 
  3.818292445963879*^9, 3.8182928633334603`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"980781c3-2cdf-42fe-9d2c-e0d4d0a7ecf0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["an association of associations", "Item",
 CellChangeTimes->{{3.8182923683581624`*^9, 
  3.818292374682579*^9}},ExpressionUUID->"7496eb95-52da-4be0-ab40-\
66cee11ba760"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Association", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"letter", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "\[Rule]", 
          SubscriptBox[
           RowBox[{"ToExpression", "[", "letter", "]"}], "i"]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "5"}], "}"}]}], "]"}], "|>"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"letter", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
      "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818292183318944*^9, 3.8182923400713816`*^9}, {
  3.818292381587515*^9, 3.8182924274563155`*^9}, {3.8182928430042906`*^9, 
  3.8182928490189238`*^9}, {3.8182929825693393`*^9, 3.8182929970959063`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"b6193f40-ca1f-47c0-8f9f-ec570cf71dbc"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "a" -> Association[
        "1" -> Subscript[$CellContext`a, 1], "2" -> 
         Subscript[$CellContext`a, 2], "3" -> Subscript[$CellContext`a, 3], 
         "4" -> Subscript[$CellContext`a, 4], "5" -> 
         Subscript[$CellContext`a, 5]], "b" -> 
       Association[
        "1" -> Subscript[$CellContext`b, 1], "2" -> 
         Subscript[$CellContext`b, 2], "3" -> Subscript[$CellContext`b, 3], 
         "4" -> Subscript[$CellContext`b, 4], "5" -> 
         Subscript[$CellContext`b, 5]], "c" -> 
       Association[
        "1" -> Subscript[$CellContext`c, 1], "2" -> 
         Subscript[$CellContext`c, 2], "3" -> Subscript[$CellContext`c, 3], 
         "4" -> Subscript[$CellContext`c, 4], "5" -> 
         Subscript[$CellContext`c, 5]]], "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "1"} -> 
        1, {All, "2"} -> 1, {All, "3"} -> 1, {All, "4"} -> 1, {All, "5"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "1" -> TypeSystem`PackageScope`UnknownShape[False], "2" -> 
             TypeSystem`PackageScope`UnknownShape[False], "3" -> 
             TypeSystem`PackageScope`UnknownShape[False], "4" -> 
             TypeSystem`PackageScope`UnknownShape[False], "5" -> 
             TypeSystem`PackageScope`UnknownShape[False]]], 
           DirectedInfinity[1], 5, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"1", "2", "3", "4", "5"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType, TypeSystem`AnyType}], 3], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "1"} -> 
        1, {All, "2"} -> 1, {All, "3"} -> 1, {All, "4"} -> 1, {All, "5"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "1" -> TypeSystem`PackageScope`UnknownShape[False], "2" -> 
             TypeSystem`PackageScope`UnknownShape[False], "3" -> 
             TypeSystem`PackageScope`UnknownShape[False], "4" -> 
             TypeSystem`PackageScope`UnknownShape[False], "5" -> 
             TypeSystem`PackageScope`UnknownShape[False]]], 
           DirectedInfinity[1], 5, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"1", "2", "3", "4", "5"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType, TypeSystem`AnyType}], 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 3, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1", 
                  Style[
                  "1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "1"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2", 
                  Style[
                  "2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "2"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3", 
                  Style[
                  "3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "3"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["4", 
                  Style[
                  "4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "4"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "4"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["5", 
                  Style[
                  "5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "5"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "5"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["a"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key["1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key["2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key["3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key["4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["a", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key["5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["b"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key["1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key["2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key["3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key["4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["b", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key["5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["c"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "1"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key["1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "2"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key["2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "3"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key["3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "4"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key["4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 SubscriptBox["c", "5"], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key["5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{397., {63., 69.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{397., {63., 69.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.818292406875201*^9, 3.818292428778792*^9}, 
   3.8182928505844502`*^9, {3.818292984863267*^9, 3.8182929976465187`*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"43fd1a74-95b8-4bfc-8ef3-e25a3530cc02"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "One thing I did learn making this presentation is that even though ",
 StyleBox["Association",
  FontWeight->"Bold"],
 " keys and values can be anything, ",
 StyleBox["Dataset",
  FontWeight->"Bold"],
 " \[OpenCurlyDoubleQuote]prefers\[CloseCurlyDoubleQuote] keys to be Strings"
}], "Item",
 CellChangeTimes->{{3.8182929058089547`*^9, 
  3.8182929753649535`*^9}},ExpressionUUID->"9f6cc934-4e68-4429-ac64-\
b66da50fbcd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Querying Datasets", "Subsubsection",
 CellChangeTimes->{{3.818293009722509*^9, 
  3.8182930130512342`*^9}},ExpressionUUID->"3a21b0bf-8a07-4dca-8750-\
a4d2a080d33e"],

Cell["Part[Dataset]", "Item",ExpressionUUID->"8f8fca18-a63c-4b09-b765-60f0ee8e9007"],

Cell["Select", "Item",ExpressionUUID->"fd0d1040-9bc7-4154-b588-752a86c0d487"],

Cell["DeleteCases", "Item",ExpressionUUID->"82805f7e-918d-48b4-ad34-16eeacb7aec2"],

Cell["DeleteMissing", "Item",ExpressionUUID->"fd44d99d-cdf8-4600-95f0-db6a0d247194"],

Cell["Missing", "Item",ExpressionUUID->"2acbaca8-1cdf-4449-b559-471c9da85cb9"],

Cell["Levels", "Item",ExpressionUUID->"58182f15-102f-4483-9ff3-7860851e84f8"],

Cell["Running a function on Dataset", "Item",ExpressionUUID->"ca0ae02e-3373-4a51-83ca-cce728df3e49"],

Cell["Mapping over Columns/Rows", "Item",ExpressionUUID->"f07cfa1b-5789-45d2-9631-01e9e43bfda4"],

Cell["System Dialog Input", "Item",ExpressionUUID->"2e13e1ec-6cb7-48e8-9526-04a2e444ff17"],

Cell["Filesetter", "Item",ExpressionUUID->"0133f598-6e9b-427a-b350-4f64f9a7bd13"],

Cell["Export", "Item",ExpressionUUID->"ee62ab75-7d21-4be3-a8a9-e39076c1715d"],

Cell["Cloud Deploy", "Item",ExpressionUUID->"b0be64ab-ea15-4406-bf63-8991daafe2b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{636., 308.25},
WindowMargins->{{79.5, Automatic}, {Automatic, -588}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 7, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"945bd2c3-86a1-49ba-9797-44e06fe5687f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 3, 67, "Section",ExpressionUUID->"1f7d7962-db60-4ebc-855b-e89dd4d03cb2"],
Cell[CellGroupData[{
Cell[775, 29, 508, 11, 71, "Item",ExpressionUUID->"5e4f55c8-a22f-41b4-85ac-756202c8b768"],
Cell[CellGroupData[{
Cell[1308, 44, 186, 2, 28, "Input",ExpressionUUID->"c7866749-dfed-4285-8543-fd13ee5ccf51"],
Cell[1497, 48, 5683, 85, 371, "Output",ExpressionUUID->"eb504032-c7cd-4e47-8510-77dab6132a89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7217, 138, 202, 3, 28, "Input",ExpressionUUID->"6b60f572-633d-4e3f-a2c7-027820d3ba78"],
Cell[7422, 143, 152, 2, 32, "Output",ExpressionUUID->"1f7b77fd-189e-46c6-be94-f69887595643"]
}, Open  ]],
Cell[7589, 148, 331, 5, 28, "Input",ExpressionUUID->"06606cc6-a16e-41ba-a9e3-0f9b7b4bde92"],
Cell[CellGroupData[{
Cell[7945, 157, 572, 11, 28, "Input",ExpressionUUID->"c4289483-3766-4e3d-a6b0-82a99c5be3f1"],
Cell[8520, 170, 607, 16, 32, "Output",ExpressionUUID->"a56ab385-0575-47b4-b006-cb354186b00a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9176, 192, 385, 8, 31, "Item",ExpressionUUID->"b74ff2ce-f678-41c5-ab37-e4f459b92e43"],
Cell[CellGroupData[{
Cell[9586, 204, 284, 5, 28, "Input",ExpressionUUID->"e56288db-c48c-414d-9760-89f173510124"],
Cell[9873, 211, 149, 2, 32, "Output",ExpressionUUID->"57f2ee6a-0902-4310-ab3a-967707db3a51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10059, 218, 344, 7, 28, "Input",ExpressionUUID->"6abf871f-05b4-479e-a211-136c196c6068"],
Cell[10406, 227, 151, 2, 32, "Output",ExpressionUUID->"d63463a8-d770-4d24-9704-70582416b312"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10606, 235, 191, 3, 31, "Item",ExpressionUUID->"287d3959-4801-42c3-a962-8bb99ebc9573"],
Cell[CellGroupData[{
Cell[10822, 242, 425, 9, 28, "Input",ExpressionUUID->"4b3560ed-61a4-4adf-8a03-3cd622f0ee66"],
Cell[11250, 253, 3975, 63, 204, "Output",ExpressionUUID->"5632ab70-e22f-4fa5-9e0f-d857572321f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15262, 321, 233, 4, 28, "Input",ExpressionUUID->"796e38b3-8e7f-42fa-89d0-cb9ee1a1c8dc"],
Cell[15498, 327, 198, 5, 32, "Output",ExpressionUUID->"e71144b0-1c94-4f26-9d77-27df18fce09a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15745, 338, 337, 7, 31, "Item",ExpressionUUID->"f77eb044-5cd2-47b1-86a0-c7605818fb59"],
Cell[CellGroupData[{
Cell[16107, 349, 242, 4, 28, "Input",ExpressionUUID->"74c9af7d-e236-47a7-a518-97da30aa926a"],
Cell[16352, 355, 858, 24, 57, "Output",ExpressionUUID->"e8384c6b-949a-4625-ae98-206ba69fd204"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17247, 384, 291, 6, 28, "Input",ExpressionUUID->"5de1392e-e7ae-4417-aaa9-73aef54384fd"],
Cell[17541, 392, 733, 20, 57, "Output",ExpressionUUID->"14ad86c7-d369-4de8-b89f-dc07987c9692"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18311, 417, 423, 9, 28, "Input",ExpressionUUID->"b7066b95-3023-467d-95f0-0a93f3b2bcbe"],
Cell[18737, 428, 810, 21, 57, "Output",ExpressionUUID->"726d04bd-5499-47f9-868a-dc75320c6976"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19596, 455, 196, 3, 31, "Item",ExpressionUUID->"bbd8cf98-1508-47d6-aea7-f7a5fe0ebc5c"],
Cell[19795, 460, 226, 5, 28, "Input",ExpressionUUID->"ed83372a-d3e2-4216-98b9-9f38a6d9c874"],
Cell[CellGroupData[{
Cell[20046, 469, 274, 5, 28, "Input",ExpressionUUID->"2ee3d907-eac4-4a97-becf-3fcaf5d49e8a"],
Cell[20323, 476, 474, 11, 25, "Message",ExpressionUUID->"10d9bf4d-83bc-4c99-9ead-579271dedc17"],
Cell[20800, 489, 159, 3, 32, "Output",ExpressionUUID->"a4ad0313-dbab-40c5-acdc-f764d5d19221"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20996, 497, 287, 6, 28, "Input",ExpressionUUID->"0b80df51-1cb8-4afe-a1eb-527d390b64f3"],
Cell[21286, 505, 831, 23, 32, "Output",ExpressionUUID->"3e2bf428-d956-4b3a-9f92-c932eb3fbf93"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22166, 534, 157, 3, 54, "Subsection",ExpressionUUID->"f703d38c-6e10-4e9a-b30d-2792f15e89c5"],
Cell[CellGroupData[{
Cell[22348, 541, 164, 3, 44, "Subsubsection",ExpressionUUID->"cf9f969a-c936-4f69-a077-24ab6a247d3a"],
Cell[22515, 546, 375, 9, 51, "Item",ExpressionUUID->"40460404-f8a8-4b9d-a84e-f01b35852f17"],
Cell[22893, 557, 387, 10, 51, "Item",ExpressionUUID->"3dd9f20d-2bb0-468b-88de-bf264d73efd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23317, 572, 170, 3, 44, "Subsubsection",ExpressionUUID->"aa4296d4-26a8-4867-b1f6-68d5ad8f9fc7"],
Cell[CellGroupData[{
Cell[23512, 579, 188, 3, 31, "Item",ExpressionUUID->"0e126ed4-8388-4cd7-83ba-79f5a3de8f55"],
Cell[CellGroupData[{
Cell[23725, 586, 429, 12, 30, "Input",ExpressionUUID->"98a4231c-3680-43bb-8da2-e5519db493d7"],
Cell[24157, 600, 35287, 684, 155, "Output",ExpressionUUID->"ecb7875c-2c56-482f-a944-cca307765064"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59493, 1290, 196, 3, 31, "Item",ExpressionUUID->"e26a55bf-5e52-4a2b-afd7-2f1a53c730e0"],
Cell[CellGroupData[{
Cell[59714, 1297, 636, 17, 28, "Input",ExpressionUUID->"3795375c-583b-46dc-9394-b04add796700"],
Cell[60353, 1316, 37137, 698, 194, "Output",ExpressionUUID->"ec0fb35a-d78a-4f7d-9a46-e362352c026a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97539, 2020, 171, 3, 31, "Item",ExpressionUUID->"4e5c369a-97cf-430c-b5ef-b16f84074f53"],
Cell[CellGroupData[{
Cell[97735, 2027, 906, 24, 28, "Input",ExpressionUUID->"171ace9a-205d-48e4-a304-a4e472bdb5ee"],
Cell[98644, 2053, 63831, 1221, 415, "Output",ExpressionUUID->"980781c3-2cdf-42fe-9d2c-e0d4d0a7ecf0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162524, 3280, 174, 3, 31, "Item",ExpressionUUID->"7496eb95-52da-4be0-ab40-66cee11ba760"],
Cell[CellGroupData[{
Cell[162723, 3287, 972, 24, 48, "Input",ExpressionUUID->"b6193f40-ca1f-47c0-8f9f-ec570cf71dbc"],
Cell[163698, 3313, 47791, 910, 151, "Output",ExpressionUUID->"43fd1a74-95b8-4bfc-8ef3-e25a3530cc02"]
}, Open  ]]
}, Open  ]],
Cell[211516, 4227, 438, 11, 51, "Item",ExpressionUUID->"9f6cc934-4e68-4429-ac64-b66da50fbcd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211991, 4243, 170, 3, 45, "Subsubsection",ExpressionUUID->"3a21b0bf-8a07-4dca-8750-a4d2a080d33e"],
Cell[212164, 4248, 84, 0, 31, "Item",ExpressionUUID->"8f8fca18-a63c-4b09-b765-60f0ee8e9007"],
Cell[212251, 4250, 77, 0, 31, "Item",ExpressionUUID->"fd0d1040-9bc7-4154-b588-752a86c0d487"],
Cell[212331, 4252, 82, 0, 31, "Item",ExpressionUUID->"82805f7e-918d-48b4-ad34-16eeacb7aec2"],
Cell[212416, 4254, 84, 0, 31, "Item",ExpressionUUID->"fd44d99d-cdf8-4600-95f0-db6a0d247194"],
Cell[212503, 4256, 78, 0, 31, "Item",ExpressionUUID->"2acbaca8-1cdf-4449-b559-471c9da85cb9"],
Cell[212584, 4258, 77, 0, 31, "Item",ExpressionUUID->"58182f15-102f-4483-9ff3-7860851e84f8"],
Cell[212664, 4260, 100, 0, 31, "Item",ExpressionUUID->"ca0ae02e-3373-4a51-83ca-cce728df3e49"],
Cell[212767, 4262, 96, 0, 31, "Item",ExpressionUUID->"f07cfa1b-5789-45d2-9631-01e9e43bfda4"],
Cell[212866, 4264, 90, 0, 31, "Item",ExpressionUUID->"2e13e1ec-6cb7-48e8-9526-04a2e444ff17"],
Cell[212959, 4266, 81, 0, 31, "Item",ExpressionUUID->"0133f598-6e9b-427a-b350-4f64f9a7bd13"],
Cell[213043, 4268, 77, 0, 31, "Item",ExpressionUUID->"ee62ab75-7d21-4be3-a8a9-e39076c1715d"],
Cell[213123, 4270, 83, 0, 31, "Item",ExpressionUUID->"b0be64ab-ea15-4406-bf63-8991daafe2b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

