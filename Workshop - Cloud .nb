(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    441005,       8267]
NotebookOptionsPosition[    429002,       8034]
NotebookOutlinePosition[    429418,       8050]
CellTagsIndexPosition[    429375,       8047]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cloud Functions", "Section",
 CellChangeTimes->{{3.824900711959285*^9, 
  3.8249007167162795`*^9}},ExpressionUUID->"b15dab90-e222-40d9-aed8-\
49efa0db2cc2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQl8G2ed963Ldu5elN6lFFpaWo6GKywpgUKBQlhoC2zDFigttJQlUCC0
28AuFNhu2u26ZTdloYSFt1tKaIEktqWZeZ6ZkWT5TBzHjh07juPbjh3fsi1p
NDPP887z6BrJkixfsV2eX59P6iTSzDPPTPR89T+v+eq37/y6NS8v73uFxi93
3vfoh7773fv++a7zjN98buf3vvHgzq898Imd3//ag1/77vu+ajP+8GVLXp5q
vJ78jJmYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiY
mJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYVoMQHRHpGIcw
njSGrim6ipBG/4yJiYmJiYmJaXXLDDxhjLuRJo8P102MBRDSGfAwMTExMTEx
vSaEKNNEsGcSY25i7OEjVU+faOpWNQ0hlKAhJiYmJiYmJqbVqgjw6FhXsd6M
8Xc62q/hXR+S5Vf6+qYw0jFixMPExMTExMS02kXNOwbY6ONYf2lkdEtNzToX
d4XT9e2G48eDwTBmJh4mJiYmJiam1S2DdlSMNYynMaoMK19qPXmeJNugXADg
zV7vc719/fQFyZE+TExMTExMTEyrSQbqKBgHMO7A+Kme3utkr02QraLHBj3r
OHF7ZS0/Mj5FDEA61mlEDxMTExMTExPTapOKcRDjMYydk5Ofrq3f6JJswGsF
Hivw2gXv1U7phyfaToc1VVc1XUU6C2FmYmJiYmJiWn2izizcjPGjHd1XQl+h
4HPAMhv0UOwpK3TCW71lBwYHppGq6grSNRbCzMTExMTExLTqpFPzzp9Hxz5U
VbPGCRyC1y6W2USvFRqjzAHcV7i4R4/XnwoFwkjTkRpLYWdiYmJiYmJiWjUK
I1yP0Dfb2y6GvA2INui1ST6r5LXQYRXdhTx4ryT/rqfnLEYKYlnqTExMTExM
TKtA0Wwr+j+DXUYw3jc89O7qigLAE08W9FlFX57ozRM9ZEC3HUivL+UeqD1W
OR3wIxLhrDITDxMTExMTE9PKlk7idkj0sa7jIMK+6cAXGho28YIdug3asYNy
q1CWJ7jzBJkOySpI6zj4TigVdXZ3IhSgWV2s2wQTExMTExPTSpZO3FhI0dE0
wqcR+llP9xvd7gIg22GZTfQRCw/vzeOjwGPhZZsgFQLxQsH5qRqvc2RwisY5
MwsPExMTExMT00oWAR6MgggNI3xwfOSTtVUbAXBAtxV6LbDMagzBGzPvkGEV
DOaB+bzrKlD8w5b6diWoLfclMDExMTExMTFlV8TCM43wMYS+1XH6UgnaRLcF
evKAhwKPzwLMwOM2/jwPuPMEMV8Q3u/1/KG/f5xZeJiYmJiYmJhWtkhpZYRH
EH55ePgDVZVrBUggB5ZZSB66bwbwyBR4jCHbgPR6p2vn8cYTSjgSw4NYwwkm
JiYmJiamlSdE/Fl4FGNPMPyl5pYLIcwHERuOx0KGl/yciFiODgtwG8MK3A5e
fKvs3dvTO4SQFu2xzoCHiYmJiYmJaWVJp3WVWxF6srP3LdCTzwMbEPMEY0h0
yGlHBHgsBI3kNU7+zoqqsuGRUAx4GPMwMTExMTExrRwhWkJnGOMDY/5PVdae
V8w7gNsKDYzJRjt5gjsOPBYg23jxeie3p6mlVwljhjpMTExMTExMK0yI9gk9
jtAj7R2X8aCAh3booeHKmVBnJvAQ5tlQ6rrdLR0aODNNKhfqrCoPExMTExMT
08qRhkld5T9OTt569Ng6TigQJZtEainPBjxyCvDkC/yVzgPfb204oSshjDRm
5mFiYmJiYmJaGTKgZBLjSqTf39l+vijaBdEKpTxjzEY7M5jH+BnYueKbvGDv
mZ5ehELxXhVMTExMTExMTMuiSM8sGr3Tg9CzAwM3+MrzeJgL5GQZViBuErgd
R494JyYCy32JTExMTExMTH/roh1CNYQnERanpu+sb9ywYNrJgx6L6C0QPTeL
7qfbO3t0ZD4dExMTExMTE9O5l4axH+NmhH7c0321LNtIEvoCaAcYwGMMySZK
5wnw9orKkrNDoeW+RiYmJiYmJqa/cYUxPoPR/vHxjx05vM7FW7NloOcCPFIe
hHlQsIhCPhQuF7h/bm4+FVLU5b5MJiYmJiYmpr9ZRVLRaxF6+PTpS3lQIEjW
BfqziEtLyhNhnigYwyrw7/V4XuzrH0SErJhHiymdWvZt3xzVc/XZXugXd0df
t2VvQ9YXgtgL793fnvXcSl/9gd/v2XXvjtu3Rt+x7a4dD/2oaL+n3Z9jH9y6
otjsdx4YzO0tCQ0f+NbmuagoaYEGD+zM+mrjWnY8vLvoFVdLnzKXWSk1T22J
H2THH7MvYUyJdZh92TOda5YHIKfj9bVw+4t+9NCOu7ZFj7n1dmMR9h6sz7YG
C7qJyRpr971StPvhHXffFntYP7Fjx/f3vJh9AguaTH3iDQeH0/x9lufktrt3
3PvQ7mf2u5r6FNb4mem1pmiHK4SRjpHx7+8MQr8ZHn53VfU6AeZDtw3IlgUC
D5DzRIo9UDR+fZ2Lf7Ch8XAgGKTuM8Y8TDOk+J6Mffw+eKAvy+vK9+S4C9f/
MraHPlOT8UWDNfse3pb6+W/W1h1PHGyZHXtWMPCYte3hfTXpNsM0Umr2bDW9
M0d6MQPP5u37Ts7rXAsBHm245oWdt5uPlqIsN3RRgMffcuBnO7ZkPr9xEx56
oWZ48Z+oBQBP8vrs/n0O02NiWh2K0I6OsKYjVUX6JMa+6eAXGxo38oJdJHWV
Ddohg4+NhRp8pAIXuEmQfnG6+4yGwqwKIVM69f3lodhn7h5f5m/BLb/dnvhw
fsSVefdOUMTO0vSv6ju4KyvrJLTlniJfdk5YJcBDtHVnNqCMSanak7xr79jf
kcOlJAHP5u0vtORy/WaIJZo38HS7nrgrpzXYcv++luksk58n8PgP792RhbXM
um3X/rastp7lAp4cp8fEtGpEgAcjFetqCOntCP97T+81kgE2okWkZQbNtLMI
wCNbBWldKXdnRbVnZCzAgIcprRr2xnbYLHtr+/57zZ/LmdFIq4l9/qe3M/Qd
3Gna0LfsePxFV1OfP3Y0Zayv/mDRQ7eZTnXXnmzMs1jAM4+93rSRFdXN+FtN
8Q+213Mv7r7HdLl37a2fZTeL+5h2HzgYpZGcvFrJwGOsfcvstgK/+Hjybjsv
4FGa9t1ngo0t9+x+kWvpG4tdp6YMd/hefDxhe9nx25bUNVgY8Ch1RXebLmLb
w0UHqtqHY1il+IfbPcl3YevObFCxlMCT8pwofn9fk2v/k8mWsa079tYx5mF6
rQjpWNenEOICoe31jYUuLk90W8QyCyT90C2Cm4xFAh4LEB0C/xaOf+pke1dY
Z+ZSpjRKBOds3g382V+z7baIbWZLmi0+oo79O2IHE2ccLGlv2nrfvoYMp9OG
fU+ZNrGv7G/P9OyuWOCJS/PX//a++Ha7i8twyRHFfUzfOjAcvy+5eLVi67Dr
0V1bst+guMZcu+hb7vvKfQtYBNfOxGa9bdcrGb2Qw4f3Gly07VFX38wXLOQm
9h0wTeDuJ7gMRjTN3/JHE2lv3eObaWia52TmDzwJpfjjtu50LTCWiYlphQgR
tSH0eF//lR6vFQCLFAGesjzgzRM8xogyz8JjmAG0QGGdy/URX+UrZ4fHWRgP
UxolrDdbfpl+y4v5PrbveyUa45zJ7JDwkszcppX6ou2Jj/QD3dlnpdQ/l2Ce
+zJZOVY+8BjS2vd/JfbSbN7AhD/rvlf6TNPLwasVW4edf9wfQaYtT9VkNxP4
uQjv7HJxsTWc8yIMux6J79J37ymfJUpJaWtJQzt4ITfR7JS8u+hwVphMti5u
eTKDkXJZgIdIaTGB8ZbHZ35dYHotC71Gd2cd4wmEXx0f23a0dj2Edkm2yR6r
RIFHMAHPwmmHAI9ogaAAilcL8LstJ5tCivaaXFOmhanmmVm241gAzx7fmC8K
NN86kPWVaSKWhw/GP/i3ZArvSZKZE7buFsfSvWZVAI/BlH/cEX9t5jPF/VlR
womv2OxerTjwHGyPHmTrnqzE43c9St/wqKulNHYdc1wEc7jR3b+czVmXw+Tn
ehOVugRB5zYBxfdkYsrpQ7uXDXhwMkBu39eUy9mZVrnojqzTrCL9NcQ8COsa
1lSkG7RTrur3d3SdF4neAVJkUERxR4CH/rAowEM6bVmhpwC431FW+UL/wJCO
1Ggj9dfM0qYVeu0i8+JruDTxkZxuz4uZgAjk9B14cHMUftJsMImwkBlIY8p/
z+KiSpZ5S6VGjxlaJcBjgr3MwBP3Z23fF405jvsHZ/VqxdaB2OjqiiJerT1V
mREgNvndwJ+Y29wWIYZMm2eFq9k0z5toikHK4qJKUff+mAMvgxFsOYEnh+kx
rWYhhHRdRyRRG8W3KJ22l1Jp7vZrZcciTSQ0TJKzenRUNDB0Q3mNhZQZNIZI
x9IAj+C2AI8FlBljnQt+rqbGMz46hXX9tZmkjmh4lDEiD5XKwrRz1ck4jDyU
JpNo2BX5xN7+W7IPx7LO00aJ1O+NBlTMiFhOnCLDvpBWmgmT0tqUXkPAE6c7
U45V3Ns4m1erzuSWii9aJq8Nxn2vRPZVQq0Jo9ycFsF0+bkWC5p18nO6iabY
sy1zmLmZ04rqFyGgaFGBJ4ni0k2PaTWLAI/xH2EbUhyPDIRV2mEqgkHLPcHF
EiLmHawFEPYGgl84cXITCVH2UiaRYiMOPItFO5G4ZQN4vMawCeKbBdeejpPd
elgj2fGvmbUlok3hjUdJ03QUpkPVXzO0vPRSfPH85D3lqZtkPCwn8lfxuoJp
trnEZ3uq/ceU/D43MjGlw6eJgl4twFP/XMxSldFWE/dnJZFk/PJngYr4OlDI
aXlhe8YVI+qL+AojNoT65+azCInykjkmzucy+TndxMPxd+UQoW2SaebpEgmX
GXhmmx7TKhdhHowmEDod1vpVdYpsVdHafK+ZPRkRltOnsN6G0M96O9/gleyS
Jw96FxFsMgNPxMhjDPcap/MjPrlk6MwkQq/Brw7UXBhCaEjXu8LhfsX4+TXz
BC214o6qNBtrzKQT+/yP+1lmmlzie1BqDUNTecO4vyY3mWrFpKvwvCqAZ9oX
r++X0RYR92elfK+PW8aye7Xi6xC5KU3Rd6VPCovewajPa37Ak3jX1r0LLdA8
r5toCovKxHUZlEgkTFcqarmBx/i3GP9ukDFrkmk1y/j33a8of+rqfK6lGYyO
9xrYg5CiE1PPa0PGdSgYDWFUPDG+/WjNeshZJXce8JjIxGznWXTgiQyPQxCv
cB3a3XikLThFPlOpCeS1scYRC+EYQk3h8CtDA3uP1dWcHZ7WdebTylGJ8sip
6SExr0oCVOJ+q4xmnBnZXia0yJqmlEamz//F2J4yzGrpgMffsj+HSNS4P2sG
EcWdelkNKSnAE79rj7pmbplRVIiR1byAZwE3NMvk53IT509ciVJR6dISlx14
TNNbqK+QaWUoHpOM6a6rYjyBUdmU/0s17i2i65vNTS+Oj9UZX9J1PZi8I6/a
OFQUwOiorn+3q/MqCawVgUMkKDKDdpaWeaxAKuRKPuDm/tTfY7BBJGNrJa/n
jLmh+P8QtQJqlHOmMe7WNI+iPDUy+vn6o7eX/HnviYYBJaRRM6FOg8E0FtCT
VQlDeooFJhbAYwoIiZtrUlwJCTPOjG+mcUaaO1qY9os0G8o5qrSc7uDZNzLF
7+9ucf1+t7kC8N3PZcokSu/Piignr1Yq8MSjdGbOPEpQ8UiheQFPzi3YctF8
buKw65HNKZecsxKIkmbyyw482afHtMpEQnPCJDVb9+saiSvVSXyygvUBpL84
PnSLD17k/PNbJNfn6mqLBs4eCSkjmqZEonpoMLNmysBZLfxjzHwAof8dGf1A
dc0mTlgnSgWigR9pgUdcIuwh5COQOoSXlP71m8fr6kLB8MpeOxRP00Mo1n+M
IEyEXjRiNMMjCJ9SNVcg9HhH14eqqq8W+WsOvvIdn/vE5GQYR6KYURgb2KyP
a1oAsaiezErY+Xeav7HHPUpmholndSVvwfFNcGbswQI+w01feB/6y4yI6pUB
PLkofc29iBL+rHTpTk05eLVmAE883yc1uy16tMQ9mhfwLOqmPC/gSdy7OQNP
woGbpt0bAx6mxRNJn9H0CV2vm5rwDPROION3BGY0uiudxuiJ0aGrRG4N5NaW
Fl9VUrrdW/Hvp7s8U6FeVR1FaAqjUAR7IrHNqwR4ghh7g8Evnmi5mJfWArkQ
yA7gSQae+A/iEtEOBR7JBkCB68DNsOTZns5+414s98pkEWnCQWLaiahN0HhQ
NF3XDDYOYDSC9MZw+PfjgW+c7NgieS4rKT5PcF0mOP/eI3tHhgMkgJkgkvFc
TWOtSwvI3R1nQkFm5MkoE1eYP5Zjrq5kf0raMJ5E1szMjPUFfIabAqpXrIVn
Fs3WCDXhz0qbiazl4NWaCTzxdKSv7DcTTzSe2cROf3vAY+qTwiw8TEspA3h0
TfcjXZwcf6y22js5odCOmgb4aMjYyHBdKPiN5sbLgNMucHYe5julC4vB38kV
32tufWl4tEFRBnXSdjNkAM/qyFonqdI9SH+yr/tNHnmtIOYD2U68S5EsLfcM
4Fkq2okOIOYBbi1X/PGaan50PLTcq5NJiNpwVEI6Ou24qtOEPjyOcZuueZTQ
L0bO3H2s7iroKSjlC5zOta5DFzj/+sHSQy93d06oYYy0SK0DUgcAo1/3tD11
7EjP9NQqeF6WTQkfgelzO7Y1pIRJaPVFM8N44j250nRdX4AH5Ny4tBYWw5NZ
9xV52mfr+R73Z6VJkYsonuSV0auVBnjitZRNmBRjJ7PZZ3W6tEzp28ylxbRS
pdMaMCGEPH7/3V73rtqaDk0l3+ENDEK68a/deGL46anPHKnayLscQLIJPjvv
XesSLy1xbhbAA7VHf3Omv0YJ9enaJLXzrOQtLBJqMo11ODl2Z0PVRuDMF2U7
9FDaKUsHPEs/gJwHoVUQrhDgE22dXaqurcglRNSOFybYY8xQVbDqx6hb04Ci
/LS/e/uR8jeKh9YJJXYg24Ds4Pn1rpI3FR/6t+NNncGQajwXxJJIIGkK4wOh
qc/6pN0N9WeCweW+rBWtNEWS40ab1IouiTCeeOZU3M+Vrj/FAr6Pm3Jq0iSt
rAzgSdnI/GB3LEx5SyaGSSjuz8pFmbxa6YAnfvsiBZQiL6MTu2+/qa/HQoOW
58wbmSc/v6DlbMWr08lkM0yszPwns9jAY6ovlMaHy7SqRIBHJ8V2qqen7qgq
u0U89F997eM62XYN4FGp6WZIR384O7zZI60FQh6USH8EINmBlA/geoF7A+Q+
ebRqz0AvCIU6VHUCReNR9fQhPcu2m+s0yCRg7CO6/sOejqtl3m6QhuiNtc1a
HuCxkBhmyWAeB8d/2Fd2YHBwcuUFQsXrMhmAYmDtsK6fDIdfDQQe6ep+7+Hq
10nCGujKF3mHKOaL7gJRzgf85SXFX6usbfRPqzTeJxKpbLy9UdO+1Nz4Flfp
v7aeOhsOrwqb4HIpkQAeN9HEjDYzP8njlfTin8nxDShtLu28c2oWu2pK0kUs
VZaWuSnGXbM0LjdXk85BGbxaaYEnzqWxQPSopSgZUeaXlp5oR7JMaemmWo47
55YnZqqBuRgInQCeosPp/n6uwGOa3uy0zLSypdMyuMZ38Ppg4M6GI5fAgx+u
dB8cGvbHw3IMHNJxu6b+pK/7WsmABFeeKFgk6JDkfMntkD12ANcK/JUCd6vP
+4NTrYcm/N2K4kcoEDUIUEU3cX0Z21MYM5nCuBfh/xsbvbW22pizBcgkFT3i
zALmAoNL78lKDJqxBQ3ygZe6nN9rOtESVPSIKWrFgI+OtTDWJzDu19FhJfyb
s2cfPH7sFo94PuAdgmATgFUAdhKALRUAeS0AFwDXJ71ebtw/hWMVnHTi8WzX
0M86um6QpDcVFz/V3jGiqivmElekEgngRTX0H1IszTwdacQNL1HjzyydLk3d
K+ZWpy5Rsi9tM4uVCTzJbZ6yVpZO+LNyVHqvVnrgidMUTYePOSJTivPMD3jm
fUOzTX5ONzHuQp0jGJhIKd3MExbF3Or+ZQh+S2iOwDPL9JhWjxAFHlU3vmkr
J5TQP7Y0rhec5/P8P5QfrgqFlYiLiqasB3VcrYQePN18geiyA84KBZso2kTZ
2KnzSNsp0coL+aXOCw8ceq+L/17tsf0jY0cVZVDTp2O1msMkPUclGWDLBzxj
GLtDypdbWs8DwEamHWkbMRNCljZWOQ3wGMOgBSd/C5R/19U7phIHkIbPdRA4
SiiWhhWtUaB3aKoQCj0zMHznkYZrS4XzikvzeYMYYbwTh8V4BgTRoN/1nPMW
t/ibgbNnND0cKdxNmBoPIfTLs2O3QM8Fpa4bS4p/3dczrrHWqdkVTx6PfNLG
/VZR/klSPIwn+gU//j033YtxUpOg9F2x0ioRLJS+pMyKBR4aZBLbkLN0ekr4
s5LcTGnmGt8H03q1MgBPfAFJEnrUn5Vapm9+wGO+ocvTWsLkCpxL2ynTTd+e
zvhm8ijlVPcv8TUhXVsWPFfg6UvYBudYopNppYlEokaAB4VOhcMPdnSsEyQb
9F0p+r7d2NKuquForCrWNTSOdDA9/bHaI+tdTjsQ7FC0QdkKqUcmlsRtEaCD
4zaVlFwnCHcfqdvbN1gZDPVo2hAt7DOF1TCx+ixDag4trYy7EPrP/v7rynxW
0W2BXlPbiBSTzrm28FiNIbitvHtdKdhRdbh8dGwS4SDCyjmswEwJB0VyrxBJ
3SOUS9PM1UNTk491dGyprrmAkK2YZ+CZ6CGsm7po0MFzV5WW7G5tbVeUAPEh
qgiFjaNNYFwyOX1rTc16IK4X4Ds55ytjQ5OUppkyKxEISr8yx/gntRRhyovp
53z8Yz9jGTrzJ3lRjq21TcEwGYoGr1zgIbaCOBLcPTNWhCrhz5q1PWjidOm+
+GcCnnha1taiomfoqWY02Jon8Jhv6PI0DzUbx3J+48l9d8cfwxfS3pREPHYu
LbpikeGZW1/NCXiaEv6sDNNjWjWKAI+ma2Fd69D07/UPnAfdNqlireh+uyD8
uq1zREfRooTGi3Td+Bx9fnz8Jkley/P50O2AXhvwWqLY4I7BgwFCYiEUL+DB
DS5wp69yT0cHHwq2qKrxHT+EafG5c/7FXqfBJ3AqcHddwwYXZxe9Nug1zXkm
8Jwb2klYeKzEyON18PKNLtfTrc1tYYUYx84lEkTq7BAXp2pgyjBC9WH1T5OB
H7S2b/WUXcpxBTxvFYCFpJWJNJQrZdFEiwAuKnXuqD7snZqapM07VIJsagCj
w6r2QH3DxZJkF+V1UH4fBKUT49PMoTWb4uX6STBnjGEyRU7GbQ6EjmJNJdJE
gcZkppf7crEJTNcX3TXblrqSgQcr9c9tzzq9xJadZd1iSiRTp7GoZAYe8x6a
toX6fIEn6YZmIrqcNO+baKKXLZk7pSak9R1IVL3OaFJLeFFnBznTI5RpArkD
jzn0azaLH9PKVwx49LCOuxH68cjYhVC2kJrD3Eau5ONud+nIWDjSOV0jJVcC
CDcp4d2nO6/lxTWC7Ihu0+488wDuPOi2QLfdICLgLhTgxYLw3orynW2nX/VP
G2+f1NG59tTQDKPTCP2wp+9yUbYBaIPGzD2ZgedcDrep2YQxK3mts+S2MvHP
QwNjGJ1L/x+ixSSDGI/o+lEl9OvxkS+0tL7JW7EJyGuA2yF6HVB2kFgdwSoI
eQDkEX9WYtEsgrjOJXwMeA6dGR7TEY1VNmhZVTE6gfB3OnquIM+DZDwYhby0
zV0G/ZMBhjuzKt4M63FxOBrDnDmSIRZdueWX9fGmEtm8AEmf53cX1WXdSzR/
zXOJ3SxNU4mIVjTwYDwm7o67XWYayhJOmZzaXybS6Gaag7IAj7nsTLodfN7A
M7cbamjYt+fhovqZ3r3530TF92QcYLbsPDiLq7TvLzsThPbLzFZGEyJmJ3Pl
cDxSKw1JRpUj8GjDvqfiD/zm7RmLcjOtJkXqyBk7XT/CT45OXAwliyhaIZ/P
lV5ZcvCB6orG4BSxM+gqjfbBowj7gqH7j7dc4HTZeT4WvyFHBgUebzwM2AK9
drEsH7gLeOEijn+PVPbQseY/DI42KsqoQVmpmVxLUa2ZHMrgq3GMD0wFP9TQ
7OChhfizPHkrBXhSmccBwOWu4u+famnRwosIPGhm3lw0NJoQbZgGOLVpGgiF
nj1z5gtHq28Q+Y08cJDSiG4bqcrotQmynYc2AVgM5gHACqJhTpFbv9YFbuak
/2nv7wtrYfpckZI9Oh7C+JfTobf6qtbwUoFBTaK3oFS4w1ddMTUdZBaeWRVv
JLF93/7o9pouVDiieLjmg/v3R3N2ZguzNHl5Nm/dUVSeAWO0PtdPEh/+Wx45
kLFG8QoHHkIpCRdKChIk/FmZvCEpigbhpFvnbMATbzOR3kczf+AhhzYXI7r7
CS4jcvhP7t91G53DPXtTmWchN9HUmHXz5m27XmlP/7Rq/vrf3peIDr8rHXcl
ZK5IefeeTE9p94Gd8VNnycXL5Tnxt+x/dNvmXKfHtPo0ivHzE/4rJY9NlOwQ
2oHg4JxXg9IfnWho19SQsTWRij2kN8A4wqVjEx/xuc/ni60Cb3y1t/BydESY
J+7kimyUBvnQ5GubIK3lpDdLvi8ca/yvwaGKYKhT1YyjxartxQKGFieTK8pO
EWdWjaY91N27UfaRNuWil+ahpwTwLC/zJIYVynZOeIfP97vBwWGEFr4cEdSJ
VNFRY5lyaqx7mkEdBnw2hcP7A8Fv9vZuPlJ7oSwXQGiDxv0iYUVWPnJP3RRs
SHAy9V6JZLbUJGUHUiEQry/h/7WuuTMQ0iPnowW7RxA+FA5vazi+Dsg2wVMg
la11ezeWcvdUH26Yng6xdlqzKx7AsG0b3Z6ytoaMh/Fs2RL95M8QsWxSH3gi
gTKbt9z+yD5XU58/3qZrrK/+YNFDt23O9cN/xQNP0o78lf3tifUxhaDk4o7B
SWG6qV6trMATCzBO37p0QcBjPASHi0w3dPO2r+zZX9U+nLij/uEO34uP7zDB
xhNiChYt6CZipWnffVtnTCD2zBjnb/e8uPseUyrc1p3po4vN6jPBzOYtO362
v6ZjWIncO00hXdJeeMgEKHfvbch8AzM/J4rf39fkevFH95kOtXnzbbtcrPrO
a05+jP9vcup6b4Wxf9khSbexAriWc72bd73Q0z1IyvVEE4eMrewMQr8aHd7s
EQt53sCYBPDwUZNF+t2cbp02EpoLryoVPl5W/cO27kMT061KeErXFeLB0Wj6
soYWoT5L1KRh7Ow9JD/o7DvKq2ycZBdomUGYUnVHPIdpWbMMC3DboLyRB19t
OF49NTW94FwtFO1djkJYN4aKdAWhSYq4fZp+JBT6f0Nnv3ai+Sa3b41TyOPF
PMljkTx5MMNNjA/iu/TYobwWwksF4cHDx45OTSvRiC8DjzXjhpZr2o4TJy4w
HidqKXJAaY0Izy8ueaC27lQgeE4jlFarEg1A02+syYp7sqLKrXH2cHnRjtxK
7W25f1999kSZxF6Zi1L203MCPEmJxlsSLj8TveSUDUTfk7g7KV6t7MBDSNLv
H/Mr6XB0gcBjyN+QhBzZbug9e2tmXuuCbiK9urao+Wh23fWEK7fYmBSQy6xt
u0qzAspceq5tuafIt9AyjkwrUcbGenAq8K6KWitnfLuXbUCyAjEfiJe6uL/3
erixsTCKWQc0HNJxQ1h5rKPtchHa6Zd9+t1fihl5Mu/mAvGP5APPGsG93iVd
Ugr+Ti77bmPLK4PDx0LKAOnGThpSEkOSqRP3vBSdbhDj8mDo3pbmC3hg42Qb
P7OusrxyzDvEwgPcBkWsAeI7oPhsV1c3qZK0cOAh3WCDWAtS2pnAuFnThZDy
XP/APTW1b3cJF5XyBbxMUdBnEX0WyZcHvRnBNQo8ZKr5AryIc37Y6y0emZgg
VsAIFSMF6R269sOenmtlsYAHDujNl8vtpCYhuPBQ6Xcam0+HFCVepokps5IZ
ZrbYkpPmgNhcIm9jGqzZ98jt2QrQzNZ/KqrVADykocNd8TWKZqiZ6g3Owaxh
KsOY7NWaDXiyaOHAQ2fWcuBnO7Le0Nt3vlAznPaGLhh4ohN4MtlUkqptD2Wa
QAYpbQeeuCdrlaTbHnqxYTZYzRF4brtvTy4PPNPqlAEGcDp4a82xvFJgI+lX
blJRGcoFQLxS4O+rPXI8oNCyPDrSSQDzJMZVwcCO5qaNQrQYSy7Akxdx2Yju
fGPvE2Wb6LZK0gYg3AjFLxxr+K/Bs9XB4BlVDRlnoVVg0PxtPYR2VIy6EXqq
v++NHreNBxbBYwFeOsosYLYNfTmGhQCPbACPA8qbXNwd1dUGai4wm4l6Cgnw
TGF9WNdOhcPOYOCx/qEP1jZeKoiFLsHByzYYiSDyWoHPDitsYoXVYMKs62MR
RJsANzqd7xVcv+rqGVZJ/wiy5LTqTi9Gvx4demdF+RoBWqHHJpbny8ZhPVZB
ev3B0p+c7uoOq5G2syyMZxaZ6rnNrNmSKlPVtc1zLwyr9LW4Xtmz694dt8fs
A9vu2vHQj4r2z95/KqZVATy0inVyhprJnzUnRDGdNMn4tuzAE9FYe83BF/d8
f8eOT8Su7ra7dzy8e+/B+r4sj8aiAE9iAnt3P7zj7pjBZ8snduz4/p4Xs08g
izSlr8m1/5ndD90T5/Mtt9+zY9eTLx6o60trMUtVFuDZevuOe3ft+eV+V1Nu
h2JatVKoJeSOYycsxYINlNmAJw+KeaJkgeIanrue437W1NylaWGkh7EeJm22
kPGYvzQ59f6qWkepYEkKXc66p0PZKrntEgEe4yu/RZZtslQAwSbjLJJ41+Ga
pzs7K/yTA5oWoFVh9PlEMVMyw/oYxqWT/u31dYUCZwESCeBZ2cCTR4HHRlL+
3fk8uNzF/fhUe3tYU+d1T1EsLipg/CtH6Hg4vH/k7Hdbmz9UWX6ZKK8ViKnN
StbEuNd0ABLdZCXAU2kBPsKH2YAH5vPctcUHH2841hIMqORkGtYVXdfHMS4O
T3/ySPkmAMgRxLI86LUSZyJJ67v8IPcfXWd6NT1Si5sBDxMTExPTuZSxpR4L
KTuaWvOLBQcosxMLDyADQguAhTx4l9v3/MDZIR0piAYvE+cI7kT4+cGxt/JS
PgdsQLQCaXbgAbJVdEf2dLKtE2uGZJGgRSKZzjYeXMSDbeWVP+zqLZkOtCrq
KIpui9HwEJOvK5JmlLZhKSIhK7hB13/Q3X6F5LIAIQ/IJuCJ9JJYfrxJvz4k
jMdgA8nm5G/1lr86cHYiq50rsgjxgWOcE6IB2326XhlSnp/wf+lU61u98nqB
o0Uj3TYg26kHjUTjRJgn2mijbIbLLzLMod1SAcddfOivXxHFo2NjIRxpmEUe
iyDGR1XtyydPvF7i7QBGjklsR4LHoGiH6L2+BOzrHxk0HqRzXkqaiYmJiYnJ
2Hpaw+pDpzryi3lq4XGTxgFkyJF06Q2c+JGyCjg2EYyU5CX1e7RpjI8Hle+e
aL3YxTlItjKkhZdn3dPddFuXrQIZlkjYMKloR/ZTY6M3+Op1Lv49sOyb9adf
Gpo+EQiOqWqQ7uBRJwjd2jUSk5y+jqFBRyMI/WF0eOvh8jV8KS0aIyfVC1pu
sMnOPKTPF/lZvLSU+3bd8cbJaS2rpYuuhx4ZeiTNHOE2VZMDwWfODN5V1/BG
aNxBkM/TG0QhZ4Y5zj1jJM+Klha0EA+mZBXEC0uKt7mcf+7uHVe1SMSVTqtD
9+ro6a7+6yR3PgD0Kkj/DgtJ8oqmdL2jhP/r0Pg4xWZGO0xMTExM51jGntWp
ad/v6Sss4W0wBjyx7OM86CbRF07XN6qqmhRaH4Z+nVcRKXHjng7cdez4+Rxn
A0IuwJPDkCy8mF8Kz/8ruLnE/WVfzf90dtUEA/2q6qeZ2pEqeSESekSCnGde
jvFXtYHA/Y31m1zFNgjyFmdWyzDWuoR3cdxv29pGw+G0EU0o2s2cVA1QSWQy
GsLohKr+dTL4+Omej/mqrirl1hRzNs5YUo8xYh3E5op8kW5ZwCpA4wcDnN7u
4p5r7+gJh0nUDp2XgnA/xi9PTG7zlm3kjKdINMg2GZ+Mg4D3uAAcn5hGtFYP
ExMTExPTuZVOfB/opwND55UINugjxXOSgSfP+HrOc28WXD9tO9WuaQomLUEj
zZfGMH5lwv/hiqq1JEtdXKy93tidrbzX7pLXlTiv5px3VFf+tKPdOeFvU8Jj
iLhOpml0Spo+ihj3I7S3t+cGyNs4p5X0QVh+dJnfsAlwU8mBL1W4j44OqZFe
rimYQCr8EUvXNEkz16pDwX2Tk1/v6HxnZfUFgljAgXzS05P06rLw5rLY87oj
xqGMY/LiZU64q/ZYy9RUmJxZRZRCRzEuVpRP1x29kOfyBWAHEjmpCa4sguTg
4TZBKpvwTzMLDxMTExPTcgiRuFb87PD4JU7gIBaeBPBYIh4Q4oECG7nSD5TJ
/3v2zDhGYRRpp44UHXfo6NmzIzfIZYXcogEPKXZHmMdtQJRDENZx3FUu/jav
7/GWlgOjo82h0ABNFpuZ6WP8SWMwtLPx+EXOQzYYqQm8/Ogyv2EVxLWc8wOu
Q690nvbrJO075a4Zt8CPcY+OfIHQc2d6v1h/5G0e90VAKoSSXZIdouQgRQbc
s8ZWzXovIrUHC3nx4lLw6fJaaXxyGmkkhp0k7eFJhI9p2kMtrVdBdwEpyCwR
fyXvpjalKPBYebnQCe6Q3JV+/yRCYep9O4fPOBMTExMTE7HwDGH8m/GJq3lo
h17SaioaVCPHuh4YP0AH4C8Ark8frnQHpv10t1Up8Ewh3Kiou9p6ruBJgIdl
UcvaWGhgD4mIhpJBPhfxzlskeH/9sd8MDVUFA92aOpFcoFkj7jn16a7TN4iu
fOCyALCiKu3kdsnRACcHL15Q6rwTQLG/P16EMFZLkNjWTqmaMxD82eDoJ+sa
rhS5dUJJPjCQ1WODXtLTXHJbSWfzefiwZgIPSdq6oFT4MOd5qXdkWEOariLN
AB4U1nE7Qk8PnLneV51PQpQ9sasgZiWThUde4+Tv8pbXTk5NYl0xUIkBDxMT
ExPTuZWxgQ5j/IcJ/1sk2QqpD0uUo56gSCIP2bMM6oAOXrhCAP9U13BMIaVU
jG03jLCx5U0gLExN31lXvwFQdwaU86C8SL4kKVrYkJQGIm0vCl3O80tK3soL
nz9c/e/dXXBqui+sBqI8QMKYpzCunpr6xvH6ywRnPul3GWGwVcA8FlKUWLKT
+F63Q3BvcgrvB9K+052DSlilCWsaXfNxhFuU8F8nJx/t7L618sjlgns9b+Ao
sAKBhhZH7XLUFxm/fenXNsdlMYg3nxdvKuGeaenoCoVJRWzaedaY1QhCL0+O
fbiqcl2kmVoCrtzJR5DWu7ivVte0TE8HMbENMQsPExMTE9M5lk7NBQcnJzf7
yogzK8Iqqbhi7IzQGAUueIPT/dMTnb2qFqQ1fAzmCSHch/FLU1PvO1q7RgAO
0W0Ro8E/i8I8ph4QooWHFg7aS/m1B0ouO1DyUcn7X22dp5RwCCMNacZQEEEC
MOn/XP3RC4HLThxbq4N2rILkMNBCdBcAeT0vvoMX97Se7lDCpAKSrodoqLaB
pjCgfLup9RYBXnDogKO0xMoBK2XCuduypDwwe1sNg3YKBHiZk9t5pL5palql
T4xBOwEdDWEsBaY+W1N5Mc/beDEGV+nzvDYUH/resWN9wSCJsiZNa1lzCSYm
JiamcypE22mB6albqyutJMGcujBSi9VEkEOy8e71Lvl9ou/F3sFBnTa4jKVN
tSH087PDb5Y8a4Bkgx4LzG5emO/gjSFZOMnKyRbOvaZEeDcn/vepzjMaUpGu
6lqYZpAZYPDyyNCHq33rIW+DqwN4bEDKh3I+dK8XxGs58QfHThyfnA6SiCmk
0FBtg0s9qvqlltaLgGjhnHmC0yJECz/O66S5AI/bJrgvKeU/5/V5BkeDlFMM
WlF1ZEymSlX/qbnpcsA7SC3r+HHSAg8879Chn5w4MaQoJPZLZ2V4mJiYmJjO
tRBNeioPBj5RV2dxOom5AHhssGzm3kdAiPfaOPeFTvA5j08cn6CNcI0tkDg4
xjHyhZQHW9suEaAt7lhZCjzgJcI8vDuP9zp498Wl4JPeI38dmhrXESkETesi
GnhwGqGnz/S/1estjGacLZaXbYkGCVWyQ6kAilfw4J6qI+LI+CRtDBGpce3H
qFHTHu3quabM5xBlCxTziA9LzF5CZxbgmdW8w3vWOd3beM9LPWfOhsM6tc1o
ZJ1xJ0L/1tX5VsCt4VxWAWY/oIFDryt2PtPWPho2WMk4AAMeJiYmJqZzLUTb
adUGQ3cfb7I4S0lFHeMLO5+ycxk7qTePL8vjfcavdl56g8v1zaOHG1VFpUnG
mo5DCJ3F2Dk59dnaunW8EC1zt8ScYKW50pcI3i/WtXgmFT/C1B6ih5A+iVBd
UNnVevpqSCscrnjgIT2qINwEwMe9vj/1nhkhKVCahsMaCitYbdO1Z86evbmy
yiaAPJJuH7HPyLHqOvOrsTMLDuVz4nWl0n82tncFlBAOqyik6aqxwuMYvzzt
3+KTNnDFDggiJZiorSl91LrxOF1SzP1PJ6lVGPE8pq2SzcTExMTEtHRCNBT2
hBL+6sk2u6vUIQo2AGZsWxR4YsNKyuK5bgKup7vaz5BG5ySSR6XBPL0I/350
7J0+TwHHxdtskSMsDWwYwOMA4jooXi+5d504VaeQAGYFETeQAWCjCMOpqX9o
OL6BJxRHIWEFYU+kCrFF8FhpRWKahy68FUrPtHd3kS5aOqLGkDBGIwZg+Mdu
O1K5QeBJzhqIhIVLSwQ8tPuYaAXgEif3wOGGuolAUDdusU6Ts/RphI+E1S82
NVzIH8rnDEKGEcNOFuCxCfIbXMLv+wb8BsWR/rDMwsPExMTEtAzSMTZ22O+1
9xQ4nVaRtEq3pKGCJNeJ8Z09n4fvLq96aWTkDEJBkqVOsqQ0HXeq4Se7298i
uEibLV6kPrLIBr34Ti6DpmxAdgB5nSDfIFX8S1t3K21FoeEogA1h/Or42EcO
V613ldgBoBlkS+ZrmxtUuK3AawNlduhzwLJ86N7Iw+tLnY81NJ4IkI6cpGO8
TlbVwDYxpHz+RON5IrDw1HkEaEA4cC/An5VpGDdLskGYD4ULhdK7PGXg7Ph0
mEaE05YiKkJNmv69jt6rvGUOjrPx0ArMp07v0irg4c28cGBoaNJgHdqObbkf
eSYmJiamv0UhUqpX/9fewbWcYBFzQgJSFZD3vI6TdlRUuP2TEyRjy/jqbvyn
BxGqCwUfOdnyekGy85KN9knPy+2wcx1Waj0gedzQs4Z3v8dTta+7f1DTIinz
CiIFmTsx/u+zA+8u82zgeQckqffpcO7cAw8JlHJAn130OUTPOii+2eX6p8OH
qycmgrQZp64TZpvC+LAa/lZzy+UQ0lCZpYCcVOBxQLiRK/07j/jywOCIRvGE
YIpu0M4ZXfvPgbM3ymWFPHQY91dw20zldzKNdS5hC89Jo6NT1PjGKi0zMTEx
MS2LjN3nrI6eGhg5j4c5Ao+F99gE7zpevpHjHjtW3xYmdhWatEXcHn6MxKmp
jx+t3+Ai3Q0skdo+i5aobpoGAR63cQo7aQLuPt8FP1NWXjw0NE4bPJHoZYSM
ydTr2o97um+S5bVAtIG09qtzPoDHCsvsojG8BVC6hOfuKffBoSE/sU1Rrw8i
weQtOvq3np6bZCmfc1miQTtL2ghVsgJxLc9dX3ro522tnWFFi9Q61Eku3gjG
fxkf+VBl2QaBsxGfl2wl2EaLVWadzAan8AlPWc3k5DS5KQScmImHiYmJienc
y9jTxnX8wtmJSyPWmJxMMW4L8DqgdxMvvlv07j3d06dpGu0LqSEtjNQzGL8w
On6Lp6KQAxYoZSjvswjAYxdImT6HwTzAk8+Ll7ic9x6rLVdCAeKHIfRl7LAT
GNUEAt85efIqSXKQxu7LTTsUePLEMotEgOcCDn5Ydv+hu2dcVTGN6TWQIIBx
F8J7R/3vqqot5KA1Kf186dq+i3ZBuMpZ/M3qyjq/Pxx5OGgfr0mMvYqy4/jR
86HTInB5UDTuqYGyVuixgFnms76Ev7u8qnFqKkBy6Iyr05mFh4mJiYnp3MvY
faYQfnnUf43opfE2uQGP4HFAzzogv54Dd8jevwycDdCmosZmreoktLUhrD3W
0XOVAK08sMTaVSw68Ngo7TiAhw65gHddK/GPt7WcDIdC1Mum6lpIV0eQzk1N
ff54/UVQsAIxEU29bMDjtoheq+hdK3jeIXj+vbXjtEISsrAe1BDJhBrA+NWp
wB0NzRtBmZ0O62yeo4UPqwA3uZyf8Xqcg4MTerSruXFXDQ47qes/aGu7RgZ2
yFkgzCP9PgjwkDHb07K+2PmlmsNt09Nhg3Z0g+h0lqXFxMTExHTuhWjz8RL/
5M2ecjskG/GsURkR5rEBTyGUC3lwsct5T031kUAoSH1JYZ22nMC4IhB4oLHx
As7piBaNWXzgsZJpkJnQ4TZgpgAI7/B5nunq7NQ0lURTa6qmqAbzYPzK8OBH
qzzrBZdDiPi2Zu2/sFTDIpAuEut46TqX+Fht4/GJqTDpjKFoKKhgdRIjORze
cfLkRbLH4Bwr8FpJqMxSzDPSLo00VTfQcb2L3+xy/r+OzqGwqlHHk07raZ/B
+BfjozeWG4jLWUVI26u542NWc9N5h4q/eay2NxhA1Oqms7T0vxnVP7fzwOBy
T4JpxWv44M6iuuU4V13RzoPD5+jETCtGCkaeyam/K68u4A148OUGPMRMQQI5
BNHB89cK3I8aG1vD4UmMQzpWdBxE+CzGr06Mf7im4jwhXp5uKeAhnuLttkIS
z3OeAD9aVbn/7OCYRvoyqHpY01UVoW5dKxrofWeFbyMQ80kIijF/z9KAxCy0
YxPgOk64ppS/v/Jw+ehYENHyjSgcRsok1ptVdXdn1xu9ZQ6S6L10ETvU0AS9
BivagbsQSNfx/OONjScDgRApoE0MOyqt8FwSDN12tG49EO1kkFjxOZ3l4kOH
Hm+qHwjR/Dk9zNLS02sOn731Rc/VL+1kFul0swBPXdHmbx1YaftN/XNF81/c
wQM7N8e00i5t8EDR/B4welFLCiSZgCd3EBo+WJQjWmcEHuNp3Mz4/G9CKtaP
TAc+ebhhjVO2Cz6rMDfviUWAa10l7xG4X3R2d+goFIkZ1vE0wh0YPz868t5y
bwFpQCAvWfBJbCbQYxO9DiC9jnPeU1npHh33Uy8bKXZH27vX6/o/9/W/xetb
S+JV3HbebeXPKfBQPCPN31/vLLmzzFd8lgQqY1KfRjXALIi0dk39796+9/gq
Cnkx5nebR6usOQCPQTsFAryY5+8/Vl81NT1Nk/o1UuEZGT9XK8pXG5svhh47
J9tcko2TLPzcznJFcfFTp08Oh0PEYmRgFGstkVZ/e8BjoMWBnPepc6Z5A4+x
kxpckHgv4YQFsNOia97As/RaEcDD9DcjYwc6EVK+eLxtfanbIZRbSYHBOW1q
op3nzncWf9Tr+/OY30/L8mjUsRVEuFVRftbRcY3scXCyhfda+MWtCWwebiv0
2sQymyA7eOENvPBIfeOxQEihGWS0AgyexLg8EPpGU/OVPCgUpHzebTuXtMPL
Nl6283C9q/RWwfm706cGDMxBCJPIFi2I0QBCvx8a+lBF5QZOsEYJJ94+dQmC
oKiZqwCIBh9+3OsuHh4dJ9Wqo8NYq5Oa9lh7+9USdBA+lO2c28a55wo8byou
/XVv95im0oAgjQFPeuX+2WvspOdyP1rA6bICD91V57ALnxsNH/jWvCjFWKU0
Jp3h4ZWDcyv2AVsM4MndecqA529ciAJPq6I+cLJ7g9NtA+UWMFfgoV0eOP4q
l/D1uvraQGgKkZ7amk5KrgQxrg4G720+eQEn0u1yaYHHDn12wWsX3Otc4J08
+I+Wlt5wmDAPDUoxNt0RjEvHxz5TW3u+APMFca4OmoUM41x2Xl7rFN7kdP6k
qaGD1BgkJW4MBggjUlEZTE/9w7GjF/NcPg9NVYuXysJDQokEeJ6r9P2i8Hx3
V4+qqvTGKQgFEO7C+NdDZ9/l86zhXTYB2njJuH1Wfs7x3jeVuv4wOECioDGx
ZTHgSa+kz97hA88Zu6ex+cb8I7ENiJoR4kp8yJv+PHm/Job6JEXOEvlGXP+c
+eD1Rcmvmc/pTAcxDpttG6orovtO5EpTlGYmRCaHkXkfzDSZ6NWZVi/pxTP5
xOyQMp/a9OeZ9kfjXLNuzYn5JM8z6V7EZ5s4qfnFMx4M81XMAJX4+ptObT5g
jnd8BgRmXJCIaSjD7ctwRpwj8EQemMTzHH+06pMe8cQK5HCupH909UVJj4Rp
kXNYNxy7j5n/aZjuQtKJsiwX0+IrUmqlQ9W+3XVmAyeSoGU4n4QgC28wj/Bm
SXzsZEuDqgbI1kmiU43jT5CKx+MfqqhcU+payvQoNynoB8psJKfJYB55g8u1
1Q1/39M1QDZxUkxGowFLZzDad3bo/eWVG3nBBswZ30vjOTIBhkEyV5ZyD1Qf
rhobVxDN+SbJZLof4epw+OHm41dCrhBCEj2+VHNIEItFEAs55w3Ff3miqeFU
MKDQHHRjNkGEjH94fw4GP3b0yAZBsHDGgBZOshi8yuUKPDSknPz6bk4oHhn1
k17rmFAnA560SgGeb5k/0slvE5/SafY10+e82dRgDpJJNkEYH847zcck+0ji
8zkJVHI/HdkHTW/MFhSR2ENTnRHJBzG2j+iypM4wOvlMk0m8MfLeyGviP8xY
kJkTy7AySfiU8V1pXpBCUKn0GLsX9JXf2rnZdCGmM6Y8GMl/mxl4IheStJ/O
4Y4nX122BYns3WYwSHke0p8xR+BJ4pnkALBUtE5eYTOO5gY8Sf/ikmg265FT
0TH5xiU9AJFzZT4a01KJbrtndP1HA4Pn8VyeSDKO57mZ0iSpt3s9Rb19A5qu
6vQLPc30aUf6s4P9N4l8Pi8kbBepXUoXh3loZpOHVukBr3OV3l1VWTw2MUyb
TYQRCmM1gLUWDT3Z1fM2SVrDAzupckOKDFshGUtQqIfOCrrzBfg6jv9cRXXJ
0MgQJvPRaUsO44dmTX+ip+cmN6n7ly+6bdCzFOHKViDbIOnHYQWkP3s+ABeX
/OWrPrFqfGQKI9rLnJjCxjGuDIf/sbn5IkirCvAiHTJtUp/LiSQamC3bgfGr
uA1K7omJaRwBngjkMc1QKvCkbrtJn5YpMaXJ21z8Iz1lFzB/1M/iLJjn6VI/
rjNaeMwHSfZqZfjMNxYk3aFyvvaUv82slJWfed60M0kxDsyQGbRm/EnqrFJf
nLIRp5CVaT5zAp4ZM8x4x5NOmn1BUtch24Kbzpgj8CTPP2kpUm73jLufmFhO
wJO6Aom/yvXIKQec+QDMdjSmpRI18Ywi9Ozo8OXAaRWBdd41c2jbrAIe3lpW
cWh41I9xWKfNk3QUQKgpGNh9sulqgc/nINnN5xgKMo9hE6RCAVwOhHsbjkuB
IG2nrpHgZaSGMDoRCDze0nItFNfwgk2AVijaRckmLgnwWKE3H7hfz3Gf9Hr+
3HNmXEVqLNLJoJ1uHT07NPrO6iPreegA5MV5xKu4yMBDyhZBOV9y54uyA5C+
q6/jXJ+SeL6nPaCSqkW6hsK0n8UJHf1zR/cVstfCgXlYvQzasQqinQCVlM+D
T7k9h/1+hRYxXO5nfQVrvsCTZrOIvXjuwJMw48/9dGk+qzMBT/JBzF6tDB/4
GaJKslx7hpjhZJtDuqklrXy68ybZjrJPO/7XadbBmEncxpV8FbPwRupFJd4+
H+CZ/Y4nnXSWBckFeNKccbGBZ+btMFsUFwI8OR85+cUZ/iFkOxrTUokCzzjC
+yYmrpdluyjOH3go81h4cJGz9P6aqiOKMk0NSIimSvlpZZ4vN524mAPGbmgl
LcJlWjwnXtFlkUmDGDGguE5wvUlw7mpqagyFgoS/VB2FVaxOY903PX1fU9Nl
gpDPC8aUHKJx+cQMsugzsQDPRhf4gCD+uqN7gMYpE3uHRoBnEOFXx/0fO1y7
XqC0AyjtLAnwSDYoGbQTAZ41AtwMxF93dg2FwzSWmJQaDGHcS6pkT7zLXba2
lLdycB5WOAI8QLIb54JSgQvsqKhpmJpSGe1k1wKAZ/MMJdxASf6mxDHTfDib
4yLmc7rcgWdmdETcqjNn4Ml47YmL2jxjo9yc5BxJndsswJOOHGbZp9KtQ+aN
8hwBT653fFbgMb03O/BkPOPiA8/MxyItXubs0kpcYI5HTj5gRuDJfDSmpRLd
fCcR/qN/8m3ecisUF7zjiwWc62bI//z06XZVo6GqmHIGaV/+ysTEx6trNvKC
gxMdvOygJe+WCHgM+rKJcoEIN/LOd0vgubZT3WGVhlIb229IR8ow0v80NvaJ
mppNLt4OZAeJefZYl6Crez4H31zK/bi+8dR0UKNuLGr4Issuh5SvNJ24FIo2
gzOhN08si45oj6pFnIxkAcAGIaEdTngDD/75eHPzdIDwl6YZvBNGaBTjUiX8
mbrGi1zQ4QRWbn7ZYaIFiHYoOqC4toT/ek1d63RAW+7HfKVrES08JmUOlE16
V6ojaT6nyxl4Zm6aCYP/gi086ZQcTWE66awxPLkCzyzRF0sKPIlTzwV4cr/j
iwU8Wc649BaeXI6Z/K70gdk5Hzn5xTlbeJiWXtTVMI3xwcnpd5UfJl0DFrrJ
ksJ6GwThfeWVvx44O0Z3dqRR5kGoX9N+M3Dmgz7fVUDexEmFLtHOS5Yl6ukJ
SHt0B5TzIdzEO7f5vL/vP3OWtFM34IsATwjrnRg/f+bMu9zeNQaAwTI7XPwm
DgbaXVbKf72i+sjIqErxUtdRGOmTGB1V1W+f7rxS8jqIm0+OAo/kWyTgkczD
whtL7VrHuy4WhLcJwkM11TXjEwo1wKnEtkNMcLWq+uDpnivkSgeptyPm8fMC
HuOGEpcWtAOwvtj13aONnYEQC9yZRYsXwxNXFh5IdSotwunSBLfkHEiTmEBm
o1C6b765JlCnf3t2Don9NpcYnkwh0DHNKYZnbsCTcI3NnENm4JnLHV+cGJ5s
Z1z6GJ5cjmmefEYUyfXIKQfJEEDFSpEvgwjwkG6Vrqnp91fV0pIvCwIeEisC
pEIgXwzlzxyuFSYmx0kZHIzoicIId+r6qxOTj7d23FF1+EYoX0roCOTzgo2H
Nhr+QftQkOQpC+8mYwF52ZZIpC4QHYJAAoara7iR0RGkK1hVsRqmbTHrQ8pj
raeuhXCNsU0vtoXHxksXlgrbPRUH+ocm9EhaFvFkTSPcqmnP9Pe/o7yqkJds
tFI0gRyDeWAZ+XXWadCIqVhjVokO6lIk7kLRJohWAK1AsArGwvKFnHAhJ1xn
UJ8EHjhy5PmOjsOTkxOaAaOIAg8h3laE9vQP3lhWvYb32HmPhZco8MwHtKxA
omFC4LxS148aW3tDCoo9a0zplft+ZN7jIr9/LiXz+kAGGzs2vSazhYemw8zj
dGnyd9IEzKRnjyS/zLyztOKTmZkvRrYe4kFITrdJS0GphogcsrSiU51ReDC+
jLNkac0FeMxJzcmHTWKP1HyuFByayx2fS5ZWjhae5DMuHHhSA6tSHgBcfyDt
ueYOPLkeOfUgOWVpmY/GtGQitWACGHmDwTsa6i1QmHeWVgJ4BDkfuAuh+zLR
89X6ExVB0ldAjxqTyA9h4wnAuFYJv9g/+Fjjic9UVL5TlC4XxAs4uJ4T8gXe
JpDKezbeYwwrsRjA+RffI7YjmjfEi5fz4KFjdeVTU37SN0FXaYW9KYwrp6e+
0dRwJeDtAlzEfHArL693wVuh+3cd3YPEa0RrHmmkJGOPjn4zfPbWqop1PLDS
ZqymoJ3cDDvGbRLdpkF+a5HcdkkuEMVCCayF3Aah+EL+0Buga6vX/cCR2r2t
Ld6zZ3vDpOoxitx4IkQCpxF63j/5npq6NWTBPZaFFaC2EP+glA/BJSXOX7R1
jYTV5X7IV7zmADyJ2JW05VN2HqwfTtr1TMqSURJ/zYx6gDmfLqnsj3H8NPVv
M6SrJG/HSZVJhgfNnGA6+GDu156CYdHXZswgS16rXOrwzJzhTH9Zju7F2S08
GeoRJU9gJ60JU5Rs9zC/K/c7Ppc6PLPH8KQ7Y4YKBrkDj+ngaarlGH94YDDd
uZK6ZiRPfkYBq/QXYjpyVuChvzfX4Rkcnvm0J82TaalkfMvXAgjVKsoXW1vs
AmdbWGfzCPA4yHd8qVCQ3iK4f9J4sicUTorioOgT6Vvai0kJmv89O/zt5lOf
rKx5hyRdCvh1vNNObD4yHaJVgNTys1ACKXAJN7hc/9rU2KIoCrU7GcyjUPpy
+Sc+d+zoeQKwLlIpHgsvr+HEG6HnydbT7aHo6RA174whfGh6+lO1Rza5nNZo
W9W5AwYBOTEPiFZImojR1mAk5TwfiGsAfz7krxG5D7hdOw6X/fj0yT+PjzVp
2nR08VGMd4h0RAoluSYnP3m0bhOYcyHljM8ArVFwbanrpa4zkyrzaC2DZhrM
02UYMa0isSyec6I0rtJUOyfTqhUBniDSG8Phh9o7CkmO9oI3uwjwQOLXON/J
3wFksfdM6pd8FCnyjBTas8n4FG5GWAiEnuvuuf9Y3Vaf5xoZXgDAOg4UEpsP
TexK7tNtIcV2SDMsBy8X8FI+L9uFWfZrgy7WO51bJPFX3V39mh6ktiZjAgGM
+jD+/cjItprD6wWaNS8spCI0ccDZefgGQfpmY3PNdCBAyUqjtENqDCrKN06e
vEwUbYJAuWVesTrAIEBgAdAOjdWWCwRpLS+ez4lvANItHs+naw7/oLn55YHe
WiXYg/EoJk4rLcmlFAUe474YL3jiZMt1EBbwi2bgsgKpAMAbXcKf+4amNObL
OvdK1xGJ1dJf3WLAcy6UrjMXW/nXjAjwhJDWqmq7uvvXcNC64O/41KUlF0Bj
yxM3uOB7Bc/Lp7tCqacl9g7iVEFaGBH2CNIShQYPtGk67/c/1dl+75HDH5Dd
1wN4CS+spRE+ZuCxCu58Tr6Qc7/VXfHessqb3b7LoXctL2edv2RAwlqO+3hV
9V+GRgcQoidFYUwysjsQLuofeHtZpYM3UKpsvswj5QFoA/xFgmvH4cNwdMxP
UYdEbiOkINyoqo+3d7zR7bXOM0ImehYrgUA+H4K1AG7g4aUCeBuEf+/xPn6s
/qX+/pqg0o9wiCKlRsOSNWrZSb4DRMZrmjF+6Gj9lZxYyEkLv/sxHpMKoPwO
6C0ZGp9mBp5lUHJ9ZpwafcG0CsW23XOi1Ay+lFgpplUt4mYJ6Wqbjn48MLKe
Exfu1LAK1OYA5UJBXO+C74a+/zvdEzSdkoTxIFKWUEeYZEWTAsgknlnTIzns
pOuogdj1YfXVodGfnmzbcfjILR7PpVBeR5OeaGyznM9LF5eCj5VVPzsw/Jep
6V/0n/nH4yeuk30Ol5jZZkIacdoEcDkPHqg77pkKjsdAiwTzIHxU1b/T0XuZ
VG7j40aeOTIPqdgsbOBKPljm/r+BgWEU8WQRsjOoo1fXfzEwsLmispCHMyY2
y5EtsWbrNB4JFrq4ja7Sy3juZkH8qKfyG0cbnu/sLPOP92phP46AHFYJ7RCk
1IxBUuWIRStEe4rFfVrGyxox/npd4xWcu5DLjotzWge5ALjf762R/VPBjM8e
05IqOYaH5cCuejHgOVdKjuFhHR9eQyL9jRRd7Ub4uZGJiwTSR2DBwOO2A7fD
GIJY4AJvF9z/29oRiJ8PowkdNQVDtdOBbk03kEOhHh+dhrggLZLDHgUhY3ce
1vGxYPjFwbPfP9F6R+WRm6HnMl7cxInnF/PvPFD6L5XVDYNnJqfG+sOBP4yN
3F59ZG0JsJCwWzrS4AoBhjVAus7j29V6uiGoTEYYgAYwj5MOnoEvHD9+ASeQ
NCXBM9dupxYBrnOV3uIqfebkqW7FIA1qxCKtVPUhhPaPj32otraQxCOlEE78
t+agZVNSOU34cnCwwMWvc3Kvc3I3OJ0fBcI3qqv/p7XdMzzVEyaxxxSvFJ3k
oBGSCVHCoT/rfuq2O65qVVPTPeFwGKGIkU3B6BjG99U1XsoZDDnn3qCZaCcP
ymt4eHtZ1ZHJqfByPt5MTExMTExRGXtyWNfPYvzb8YkrRdkiLBR4SGgN6ePp
tgqSlRPewosvnGwLRMN2CNR0hJT/7Oj+0rGGJ3v7D477GwKhXhVNUuxRI+0l
SadPgxFUVddUmkY0inEbwmJQ+WXPwLfqT3zCV7OFlz7y8p/u/+9fFP3mWSi9
eqzr2P7BjjsqKtYVC1a+jA5v2mwjGmXkLuTlt4tlz7S2d4TDwQhrIYJeAxi/
NDL04erKdaTOsNcyF8cWaQ/KCde5Sh87erTePxkk7KaRmou6blydJzj9pYb6
CwVgyVi+OEo7FiHSPJTYoyx02HhxjQtc5OSu5bgPSNK9VdV7mptLBgdOKMoY
pRo9UtKaOK8Ukv2P9DCNCZ8ylk7Hp8Oqb2ryhbGx73T1f/VIg3NwaEqPYKUW
QqgW4y/WNVxECigtOGAbyBYoWyW3VZLXu7i7KipPTE0xjxYTExMT00pQBHhG
MPqjf/LNXp91wcBD22V6SQdPIFl5cJ0Af3Xy1HQUeMhGeyKkPNxy6vxS15Wc
8D5v1ZfrT/1H9yAYGz8ZDA6q2rRBCSTGV8WagnRjhJGBPTQAxjjIGGlFij2h
8O/7zjxVXvkvv/nVrh995+c/f+SgtP+VnhPby73ri3kbX2bjfWmBh3bxpoWd
gWedU/ig6P5dd++gwVV6tA2GAQDtGP3i7NlbKo44BG/ukTzGkR28eBknfL32
SOXEOGnHiVUNKyrSpjE6Fg5/9+SJNwDBTpxZMw8YQx2ehGHTPuMkN83BC4Uc
v4njrxDgZkn+fEXFz062HBwZaVTVUeqZiib7R601xJKkEUpUg7o+jHCbqlUH
gn8YGX+so+OztdVvk+XXucQbneKLvQP+aMVnLYRRDcafP3rsfHLGRQAeK5Tt
EhmbSp33Hz3WGQiyIjxMTExMTCtBxk6k6jrJlZ6cfnvlEftCaYdu34R2YsDD
g+dbTk7GgEfFqEkJP9TWsRbKDpFs7vkcvEIQbvO5/+lE496+fnHCfzqk+DUt
bGCIwWKk3WeYOoV0GvpLB41RGQ2rLd3dgug89JffVRwWXH0n/7G6/MJDLgfn
tRPgKUtBC0o7xLxDqgtCt10QLygp3V5eUTw6PkHhga4GYZ5mVf9hd/813gr7
7PV/ol4nKy9e6AKfragpHRomdX6QMWFj8qpBOyc17ed9vTf4jFnxeemz/olV
xyAxGy/becnOAzvPrXe5ruS5WyT42XLfow0NL/X01E9PT9BOXJFVoEnliJb2
wTQairQiHUe4R9VqAoE/jo3/qKf3c41NN5WVbRA4B+9cS4sr3iDIfzgzNBl5
g64bF1uto7uOHD2PhwsHHhJfRPpKkF5aFxS7vn28uTekxB8zJiYmJiamZRRx
hOi6H2NhKvDemuP2RejfFAce2caDN/PgFyea/SbgaQyrD7Z3rRHd+aLHJrod
UFoHhfMF5+tdpTcAeEfl4R+0nP7DmbOVk/7OsDJK6iLGQ3+pH4bkd6MI/JD5
62o4MDY+MdDoH3q6teWD0H0N7zmfc+e7ZFq0MGkTt1LHjQ1EKzDnc65LXaUP
NtQfCQTjsbWIBjCXhZSvtZ68TDIwAGa+UokWw4EWANbz/Ac8nhd6+/uiSego
0qCqB+F9w8Nba2rWGC8j+JSGoCK5/DZeLODARpdwGce/FQgf88iPHDv6Qk93
2fRUNy0OSRYQRYKbSByyShPcDGIJIDyBcK+OjinKQf/Ef/T23ddwfIvXe6Ug
nCcIBSK0iNC42LVQWisIb4XifuLSikCSriBUqemfqTmyiSfFHiOh0QsCHiFS
kUB6fQn/w5Mdg0o49pgxMTExMTEtp0g9HF0P6NgbCH2ortXGLaKFx0AO8VpB
fLa5ZSIBPDoFnu4C6HFAtw267VAuhFKBSPqVG/xjB+5NnHQjlD9dU7O7ve3l
4aHqqanusOpHsdp9NM9apWVt9EjTCvKLgQR6q6K8cmbwh00n76w68na57DJe
XOcCdhewctDKiVZixCBbvxWIFtJ5gWR227nSNwPuidaWU4qixvZlElmNkDA1
9vmGo5sMUOHN7S0i1pgYGADJwIk10HWzJDx1qrVTIRs8dTAR7BnC+C+B0Pbj
TedBifYLS2mTEY3ScXBgrYu70OW6nuc/Ksvfqjn8q9ZTvuHh/nBYia0bxaiw
hsIqUsO0dNIUjbI2+KpRCZf4J58eGPryqbb3VFdeAgTjaIWCUAjFfNoC3iKS
moSFQFoH4Nsl+dXBoWkT8PhU/VM1RzYQ4CE5egsEHuNuFkikzvbVpcLTXWeG
Y1UHGfAwMTExMS2vyG5qbHy6XhtSPnOiNZbWvTDmiQIP6YR1FZCfamoZj53K
AJ4mVftmV9866M2n3dIjPiYLiLSFMoaBE94CQd7Ig8s57j2y+MWjR/+ts+uv
o6PHg4E+HY0iHKDum8hQUczUQyrqEAboxNgXVn9zdvg7Tc0f81XcJMA3cMIV
nPB6XtjEC4WUefIgGVbSphxscJW+X5b/p6vn/7N3HoBtVVcfj7ezCbOU1dJC
KW2BUkah0JZSaMsokG0ncSZkOt7bTuLYie14JU7sOIn33kvjbU1b8t57b1ve
W9Z673v3SXacECCQ0tKv+nNjHMuRnt7Q/b1zz/mfAbVGqdsnpIJSD1Ga2LHx
PxSXrYWB1fMq+l8BaBEyboeEKYKYgYGtRZCfo7BNXU3F3JwCcIQuCjNFUmKF
8lBr1494YuOlROWl0nJAX0YIagpBGyEIpCJj2B6p9EJLM3dsrE2pnF1aYmOW
rtRqUkVzDr1Jckq9QGpmSHKIpBrVanRu/ur4pE1n97ul5T/BeethxBhwC65t
p2UE3Bpp0AKdtgwx4AZphhIv80X5o2MLJLkMPDyl6r3SsjWgycW9R3j4WuBZ
ixO/5EDRgyNTGnL5NNNLL7300kuv/6y0ya7NSsW+9lYzCLnnCA+AFq09IE0I
P8b43jUNE5S2qQEAnia1xq5ftgEXm+qaR4BM3eW6JG0AhKlUAshkiNFogT2E
or8Vi3bV1Z0bHMqcnCpfkPeoNfRzzjE1StrOpLqYBdOiU83UKNF0JJmbS+jr
9W9s9KirO1pT856k5CeYcDX9iqBNp2gVIaS30AjG1nGgd4ukqbKREabnlfYZ
aHrp0lAXB4ZfFYrXQPAqFAMZOKC3pmADxPoplPo7NOVVKOMNVq51kaRobByY
K+r6j4P2oBUKpVNX/9OicmNUbAB6VAHUoVGEfjtrYeQBGH4KgV/F0Z2SwvN1
tZz+/vaFhQVtbEhbM8aAnAZkL4GlK/ohmuUGSapBqeLPzkdNTNr09v+5suYx
odicYKjmm1DEEKd3NfqKQMilN1X3QiBpGV5UvF1cao4sN+/47l3aDXXAw9+A
oa9wORmykVkGeEg98Oill1566fUDkHZWbVerbQYH19/uiXdvwIMLHsX4p6vr
x6mbwNOiJh36RzYQYpObwMNfAp6bK0erMIZJmEiRESYwhfH1HOhxCH5DWHig
tuFi3wB/fKJrZm5BqdKZ+DB17SRAFW0FPOAWFWMtOME07aqlqNjJmZ2V9b/A
xfdjQlPtduI0wPBNudhDBSwLSRExMT5Paruag0EzT7Nac6aj8xkcM0ZhsAKF
iMwh3tOs9N1E5KWK6LDihCulSPHo8DylLQzXaEhSTlJdajKod/BFgWQNRD9/
oTEiNEV45gi2EUGeRNHXefxtJcVujY0pw8MVCsUIwDZtIrIahKnATtJoG28p
GRvGKZLqVGsk8/Kk8Unn9t5/ltX8mie8nwsbc5FVCA+0Wf+majKQJoQTRjD3
dZEQHgfAQy4BDyRXvC0tM0eAneM9Aw9I4DEleBtQ9A84UTAxNUcuHw299NJL
L730+k9Ku6Sl0oD02jNjkw9g90w7t0R4aOARnK65BXjaNJTr0Nh6nhh4JiM8
I6YfxJdWUhivY2YqN0BFhqjYBBObYyJzjL8awTZxoee5XCsYjeSJK6rrZAP9
C3PTlEbrtKdm/Jpvn2A1TD+pdrWGMzl3rr1nZ0XtKyLpo4RoAyJYw+WbQbzV
HO7P2HkOVRU1c3Pym0VbIFJUMj9/uLHuRzhsjOCGiGgdl3gtJ9G3IEBSFNhQ
m9Aja1gEWUWk1lFZSZLDJJU6MfOX4qr1XP5qWLgGEmziEk8h+G95/A+Limxr
amP7+qVyeS9Fzep6W9C7Ra2m6IOg0iYokYwBEU0L/WpNxcJi7tS0/6Bsd13j
q3zRwxzEnAPT7GQGCsnpvSRaBRphiJjkomVD5i8fFJ4Rjpuh3LcKhdjEuGKp
xosGHu784luFpTTFGeqq+O8ZeHBiPQT/TSzhzc7NL9GOHnj00ksvvfT6z4qe
kZgKaoqepoPGp38EGONfCTyPoHz3yppR7UsBHx5NJ0l5ygDwGGBM5IFZ0vqq
uARYi0FALbkpJlqNi80IsQlPZMIT3IeiL6enWQQGenp7JUSF11VKFufH5mfH
52Yn1KoFShvnoW6ZbnW5vxRF01eNSp0xPuXV2rldWvUqLnkcEmzkIPexWS/C
XL+mxg6lYtkfmH6iaYriTo1vLpc+yIWNIT5NL6/HRR/yPHjNb2+jJEUxJwM+
iYBSQLeMKZJC5PJttY0PcAXrOcLHuYLfIsKPBVLnytq47l7J1EyfmsYMSruk
ROMfTTsKSq0E9shqFfgJJafIMVLdrFjkTs9c6BveVd/yO0npIzh/DYKZgLxr
YCVkBhJyeHcAHoT/VYnHBhhuDrPfl4hEkxPKJT4DwDMrf0tUasblMbZFgi8D
z91n9eiAB8PXsbmfScpK5uYXls2C/lPnt1566aWXXnox0uj6S4KSonBgtvwv
AJ5l2qHHwyjPpbxqRPdqYM2mi6TOyMY38gpBDAckt4gMENGqO7n8MbY5oA26
CSY0pQcuMMEFxkzl0UYaeDJSt/mfPW77xRkPa25B0thwW1dbdVOtVDbYtjA/
rlEvMFnMS8Y92sHMvmqmseYsRQ1RVIVcmTAw6lDd9LG4+BUe/3kO62McSezt
lKmU2n+hbUE1TGkShvr+LBRs4MAPseHfRl7bYn/0arBXX2s5TQ3AThlEZjQK
kqpTLLq3NL+M4r+GeO8R0qPSmistPfj4bKdKM8s8my6oBiCHJh/Q3EHBdC+d
p6hRkmpXKsWzczHjY9Yd7X8qLnsSEazlEsawdj+AoXXsMUF5xqg260a4ctcx
zCNYQpfbKBQ353I+kkqLp6aYTG9APHKa5eYW3hIXm0I85ijcE/AYoKAg3Rwj
NrA4liVVtfMLSkof4dFLL7300us/L1KXrALST6YoKmFm5hdC0d30srzrUA//
IZRwrKgaXpry6Bm/h6J8R8fv40tAaAIpXIUUMYPmn8LbsIee5c0QwTpUuB4T
mTGmdoY4YYAThhhvI4y+nJa0xc/rmP1Bb69jKCdhfqZrcqy9s62svoZoaRCO
yZpHZR1jI4MK+Rxj8Ex9eWhrlWjYGFJpimfm4vv6XWuq9whxl1KReGxQziQw
q5eWt0bUqrDezt8J8cfys38XFeUYG1dTX0eplNRStIR+jSGVMqW/+wup+Isi
6aXGdnxoomtBtaC5+YJMkEnNtLtSySlynsm7HiHJZqVSNDsbMzrm0N75t/Kq
nwkK1+jykLX5OUJtpMuQKYpftVTqdTPfaWmPgWTvO/cRAwnhZhzon8VlZdMz
aua9qxnzatbcwpuSEhOYhs/brRq/NeiiPFOMtwYXPMTiWlfVdy0s6vtK6KWX
Xnrp9UPQUswDiJ5582dnX5MW/8tohwGeBxHCrqxigCS1k76Konopym90fBNf
CggHoI5UN1AJwzzLwQqeGYw/gmIvisW/l0qfFQo2EbgJimlLrTfACAAe/1PH
HA56eXyekXapq0MyNtq0MN/b2y0pLkqvKsvPz7qaEne5rBDr72qbnpxQK5U3
oz3ULXEH7X5YALnNpGRuKrurWTzQPalUrAQe+ptmjfpUT/sbSJ4lDqH9AwvL
yc2MlBTVNjdd0NtR0N/XsCCf0T2yhFa6lGawqKeiyAWKHKWodpVKOjeTNDLs
2tH2SVnp8xi+ic015sCrIGLV7Y3Lb6sZ54Ey+Tug6VcBDx8ADxv6RFpWPj2j
WYI9+qDnTs+/Li41gUUMc94b8CB8M4y/lhA+xoI8Glr7FxUafWxHL7300kuv
H4BWrjXIKUo8P/+P8kojBjZWFonfC/A8gOAnS0p71epl4OmnqMDR8Qf4Wrwp
YjhHujTov4qARTNKrEGQxyHWP0RQwEBj8kzf+f7mD6tLH8IwEyalZyOMvZyW
vMX/9DHHQ86Oe86c+jws1CkjNbihhtPWDJdKk8uK029EeDlY7/J2O3H1oh/G
yRnqbZPPTyzMTaiUS0k+5O17Q7uARdPILOhIpes4pcuBJgERFU1P+taUxnc2
yzRMmwfNUnUW8w9ngEmOZslcmHlY6w2tIZejSVM08mlI6YI8dXzSu6fHorLk
ZR78CMQy53CMIPSru9Xzbl9awnhfcXQEX9Hk/Rbg0UKenKRyp+ZeE5aYQsKl
Ja17ivCYgAgP/2d5rJC2rmGlSqUHHr300ksvvX4gWkroXSSpFoXStaPrPlyw
ChSn48B5Bny9B+bB+Pcj+PGS0m4w9QGpmcyZS6NjP+Jpe5GLltJutUtaYvqH
pgj+CAy9zoOtxJyLFewKWdnIdEOXoufKcNsLPMKcyzdBxPetAB5Hu90Otjvt
Tm457b4XYYe3NrLKihPLS1Jjrp9ysdvjan/A6eS+C75OUlF+R7OkWJzf2iSd
l48sqOcWNEr1UvDl5koXeTPHmdleNbmCjmbVqp7Z6dGFec3N3BTdP78ZzdA+
C/AEUjPNIECK1Bz9xjVklXwxf2rab1C2ra7pNyLJ/TBuBHFXofAqDPuKNltf
t2+/5eHg3QI8TNG+gqSyJ6d+Jyg04WAGt8eUvsMAy47rYPRdLswakk1qNHrg
0UsvvfTS63vS188v5G1/WZFcomT8auD5hXcqasy4sAGYgv8VwANjR6TSToWu
iaQGvAqZOjb8qhDfgKFMw8rlRFkQlzBGeA9z4Q/5eGR3S+FYu6QZl5Sn19dn
tckkcf01v+eha9gEDTybIPzl1KQtfqeOORxysrdytt/lZLvjrNd+jBPe1lhQ
DoAnJea6l7PdbleH/S52+0ICHKXizBJJ1sVA+/jY8/W9pdKxFvFwW/+8TKme
AUtMYAcwSz3k8i5RMxEptY5lVlR73bY3b0sOWvoRMNVRkapJUtOsUkOz85eG
Rw43t74jKX0a463jooYQwXgNAfNDgy8HcFDBreMrgeeu7ZF5ZgXcz4orKqdn
l4GHptzUsbEXeAIjNrwK/vI2fGvgWY3iP+fA52oaO+SL89p9eodz8CZa6k16
9NJLL730+rZaUYf05SmEXMpPpnTWt7pkZV39ttajT8G4E4fLxl8gBKthzJBp
O3WPq1qbYOwLiaR9Ub78sgpKVTHec7yI/TzBMccIbWsqpq8B8L5bA+O/YbFO
CfD6/o75uUGNonthqm64r6hvtDpP1vL3Qv4GLmaKFd4PE6/QwHPe65j95052
+5zt9jjb7PTxPIBxItoaWeXFSeXFNPCccrbf7WK/18V+T3CAbZE4uViSHBJw
NDrKg9+O+9XAtngS1ARNT1Vq5htJeTepGgf1Ujc9fLTAo7kJOrdXuut+vPLR
pcc0oA5MNTg63w+N9Ll09fy5qvYJgXANipnCOLCYBnnIugKrpT2w7KIjYCqt
hMzK1MpxK+0ww4AxbzS8u+CMWQG0vbSmdmaOXKpAmyep6OHhX/MFxjBuoPO7
/o6oswrjGaHEYxzoQJG0fGJmllkvUyydYCsYR82YE6iZNG/6f0wxv85ceqk1
mr62Sy+99NJLr6/WLUhz6wNMHRFTIETqZh/Q3VID1lkmSM08sH/R2t+BNlW1
CqV7e+/TmNAE4xvjoA3TPQEPhB0qooFHsbSF9Gsv9shafImMl6Fcc9C4XGiM
CYxB+3KBCSbYiOAvZWV8EXkxMuYSH0lqqOb2d0unJ5qnFweE0327K6UPQag5
VvgAjL+WmrT1nOdxADz7ne2snG0s7gg84CH73YH+JwpF8SXShNALh2KjXbA2
xKuMZY3E4E1Z0zL2Ym/udFv+QBeve6RZNje1qFYtMaBqydLnljn4DnMxs3uV
JDVLUqPyxYHR/qH+0qkebnVzvqso6xmowBT08OJpC+2ZVhq3RG9WkoYxQqyH
8YcQbBOCrUYII4Qx28GEDOFo+63zV+mq/pluDjBgnrtoDCEwY6G7Khsb5+TU
EvDMkFTk8PDzfKExTDDtPL7rgabfGk6sQ9C/EfzcYdmEWrNI044G7BA1kx42
z6yZAv9oYLKoJNUqpmWGWgksFtVqBnyYZCfGvVHbEp4Z+jovvfTSSy+9bpNm
KSSxci7WFkLTbEPPPgsaMMGNk2S/Utkkn5PMjOeNDacN9VfMzTKrDzTzkPQt
+QRFCRYUu+va78MFpvcMPPdxsf3iopaF5QiPFnhavbGMX7NzTTGBIS42wWm4
EhphIhNMdB9KvJSZsvO8xwnbvS72Ft4ee6+GOkC5V6obCGK46XCF+AkOex3C
exhCXk9N2AaA5wsnuwPOdnudbCzPAuC52tbELpMmlkmTY66fXgKeXUEBJyRF
sQ116RkJrjkZZwRNrEslOdEVOUNzUkohkg/m1BeHJ0CBF7Ab6dXCvolBtXqW
KdtavBnkIW9Pcl7e7fROm6aobpW6dG4hZ3QisrY2JPXatYsnkKijHPa5Y3DM
Y1ABWLS6i17khgjxMJf1Dp59qDhnd1HWm0TOwwjXGOEBQGKAxxDFgdc0it6P
wetQxBTBjRm36m8CHrBiaMbCrKpbmucXl6OBUyQVMTT8nBZ4vsL+8a4GzjPH
0F8TvGvdfQNK1SJJKmlcYYBngtIIpqazR8exyenq2bmuRblMqZxWa+Y05AJo
w6FRkBq1hvkDEEfDdHbTaIeKcQbQx3n00ksvvfRaKS3tqJamB22EYpHJzOnV
kI0KlXRunjU5dWNYdqaz7VBj+QdlxG+F3JdRtkttbduikmnMQCpAhwbQHCFt
av4PZZVrMdwQdMz87qtaGzmoFV/UMDtH3YxBqevG+w8JOY9x841weq4UMUEe
eojNUNFDMPpaeqKVv4ej0wF3B0sXu61ONpu9nHclJAUS7UU+1bz3+ZyXBMRv
MOjPabE7zy8Dzz4APB4M8DSyvgw8oYHWJZLYsSG0vzWroTKhrCkvkRcdXxBa
W5syOYZOTxB4VaIDO/jzvKA4aVafrE6l6KPIEY1qfGFuZG52TAXcm1W3JaRo
E59kGk2lXJ4zMend3betuuEPosK3UuP/4XRo745XA46/FRXleIgd+2Muy/DO
HTRuGTQUrYGQ3+fGnYcvisovFdVdDS2JeQPLWAshDNKARu0bIPgFOMdClLFP
nPIeL+1JtMAUwVYsO34D8Oypam6aly8DzyRJXRoYfJYnMLon4OEZ4MTjCGxb
U9+2IFeBLmCAViiNZppSI7OjW0tLXiJEbxWVba+otW1qDezuTRkdwaanqhYW
OtWqMQo00VCCyI42Q5xZ5qK/qBn80QOPXnrppZdeS9Lm1y4yIYl5kpqhqBGK
7FCrauQLvOnpxPEJ/6Exm/aeHdX1bxeVPI/zHkOgjVDeGijXFGGvQ+Hf8QTX
u/tk2jZOTI+DRabt1LmhEXDv/y3ylu8wY27gorv5ovrZWWoJeOQUhY6P/UlI
rOGyTVB8NUqsBQ3EsY0w9iSC/UXIO8jNtAvycHXe7+O6L+D0F+e9Dvq6702K
865uQwT94uzhqoiBWq96oS038Yi/2wn7g1rgcbbZ5eN5EGWWtLTAE3v9tAvI
4aGBx/JikHWZJG5KRkwPwH2tOTVNuVGZAfau28KCDtSU3hifEOBtBWf4URcl
8a1jJRTZRZKdKlX77ExTQz1PwMtpqJNMjPer1fKVKT1yUt0in00YHjxS3/hH
UdETMLaWg2zkIj9PT3nD1+XTIx/ZO31yNu7UXm7sr6DsTRB3NYQZIXfeSzrg
QXibONA7UcGnAg8UROyqLHBIJ4I/4CY8zGFtgNA1EEGPn+Xl7GNHZ5dck9Rd
i62M+bsgfT3KBRVe2NcDD0gNWl2AWlU3gwjP0sEYJ6mgvv6fEXwjZknruwEP
zWnrYOzTwiJ0YnJOw3RABUtUKhpYqlXzR+uKH0VRM0hgwhWsZuMb2eiPOchL
Av77pdL9DXXevV1xo8PsifGymZl2hXJYTc5qSAWwrqapiVTS4KMHHr300kuv
/yci75h38+VfuvUbXYNwrW/MPEWNUVQnSdYplIUzs1kTE2GyYbfezn1NDX8p
KXuuUPKoQLwWIUwQelLjGRFCEx7fFOeZEwKwlkSI7uMJPpJKoJlpEMVg7q7V
TNlSxaLiZHPbAwi+StdC/bbJ9LYyouWe3bfMm+u56A6BsHp2Znn76a3Nnpx6
sajYDIYfw5C3RfiHxcI/8aG3kbxDEixjsFnYWXr1ho+P+/60KN9ifqqQG5UV
ewbJ9utrz5sY5c/MVkzK6wcW6gV1HL9L7ja2VkwOz15n21uBpziFAZ49OuAJ
tC6XxE4MomPdrN7mrIam3HgaeFy2RVw+0dqUuagsH1OUl/dyhbWpHT3o9HSF
fLFuarpscEiEotd9fI74nbclsKyZ6ZEVQR6yXzkb0VP3RxGykcMxhlAm75pv
QkMLi/tUUvxvwnzeu+x2LDfQW3zVSXRjC5H4PJyzBsa+BngMEd5DHOQPIX57
Dn3oZvFSzJlPrmac3sm68Q6c+S6W+zso92l23uvJ0UcvuqRdsarO+ELE992H
xdwPswxuAs+dgQocdxRbV8A+UN3QMi/XvQENNUJSAX19T/N4dx3hue1Ag2Qk
cy76W5wf3907rlQtRWk0SlI9SKoDhrufE6GmCGEEiw2AkzMzMKEBRqxCEEMI
fgCFnxOgr4qFm8sq7Fo7LgwMZY6MiiYn6+bnO5WqYaacX7XCI2D5UiFvvWru
6irSSy+99NLrP6aVtc/L5T4rk0V0BT+aJX+YJWc89RRFDlNUm1pTJl/kzszG
TU75ykaPt3Vtrqh+UyJ9Buc9AmPrINQUxo1QvhHGN0J4xijfHMPXY+hGFF2H
4mswkSlWaIQXmuD8J3DsWF1Ns0IBymrAPTrYpkmKgmbn3pWWmHG4oJEByJJd
iTQCbYXRUlm0cMVUeHOKXMdFtggE5SuAZ5aiMqemflMsfRBhb5FiqYO1ovmu
7IHKhBahWFY7TQ3JhipT43wunj9RX85WLfaQyo7Z4aKBlnxZF2uoizXQzRkb
wqfHimoqssNCXextdjNVWnudbC3Peh7EOBEdzdyaiozqiuzYqLOuDlauDntd
7C0vBVlXSGPHB2BZZ25PU0ZTY05Slr+D287AwCMcVmBtVcLIALe5Nikx1unG
NXscvdLRwZGNCAYGeTge6e293852W2J8yMhQJ2OTrHsrTQvjDo2Sp3gcYwyj
Z3ADYAHNN0CEJrBgDUT8iFXwanaMG/ciURZa23g5tyZqDz/5YZj79cBzPwd9
KeLyB7b7d1n9xeWMhVuajx3n8hVpfGZ14qWShJ1o/DuxoZ/YWlpbvBBy8rXY
eLudnNj7IY7BV3DOCuAhjFFoIyv3SH1du1yu4weSGiIp356ep3DC8K6qtJZ7
lYoNUGCjZICJzGDekwVcl4bmjsVFJXAe0i5okTKKSpmefLNEshZF6fdleLPi
THvCMK6JIFOdMEFRExhdy0UehODHIfQVQvAPiXR/XZ17V1/4yHjB5FTJ3ELr
orJPQ44w0Us5ODlBrdeyIeTSVcTElhirR1KPP3rppZdePxgxlVMgoZgp3lVq
mOIUpj5Fo/2e+QW1itQtVM2DfGOqQ62pWpRj05NpE2OhshG7nv7NjU2vVVQ9
Iyl9kC82oydNGEwuhrBoRS9IZjIFFd/wL6CMv+IpfyNSX8Eyf4IUbIRRMxgz
QnFTBH2WIEK7OofUam09l3aMqNRX+wdexOlf467CeYxpzM0+lcYIsQ5BNqLw
GhQxRnAmsVaoqydaCgGt4SIf84XF07O6d80AT9b05EvF4p9xMtwF2fWt+Miw
dGGumlQ3U1QXRXbJ+otSYs74nzmcnxZWKckZ7BbOjkkmB/GxfmRmVLQ4WzY3
IZkaFheiUee8vnC23QMSeOysHG0tvb0OoJzwwR7eQK+gs52XEHeepp1l4KkE
wMOVdeZ0N6a1NGSlZQc4uu9y99jtf/7gjSvHxUhwZWFkZOgRF7uPz/taCYVX
xyZEk9PS6pqMiHA7N5edyfGBI4NtpEoB9gujBvn00aaSB3ncVQSxCicMCIKe
vk0RwhwiTGH+Rgh7ITX2eJB1avD2itQDEvy0M3r9SYj1tVjCXw3jj6SnP3Ml
5De+zm9FeH+YdtEl6TQ3y6Gb59JSdsGPCPtbQuBfXT/fbfUnu+N/9YrxepeT
th5CDe4cfLsNeOD72Hm2TQ1di4tabKbHAEWd7ux8AsPuBDxfXh0TAnNIrMgA
KzRECw1BkrnwMQ5mJZJIp2cWQRIOfcJqSJV6hiSRxcWPaurW4vy7Xg/VNcsw
ZNwL6XNyDc7/kbDopaKSj6rqjzV2+PQMRI+MsKemiubmWhSLAxr1JFNUqCTB
G1GAwVQakks5QGBTdNfRf+wi10svvfTSCyxKMWwD7rMVGkqhIjUKDalgyltU
JElPH3MkOUFqekhN7eKidHYGmZiMGR7x6uk70NTwXmnhK4X8nxK8jRzIFOIa
orAhjDLuLoJVCOiXvUrn4rI8YQnou+xHOXl7kBsJ1XE5jXGXq2NtJHEfCtJe
xHIehDhmCLYRQf4iwHNGhuSMOTCzeQDFmhQK946WJ1A2sCLERVrgoSdQMwT+
MZL3R37mPyW5bwnzn8Q45gi2XC6tmzExwWou+gFPWDSljfCAMNU8RebPTL5e
KvpZWrRFqNeFgKOJsa5C7HJbQ97wYOHcVFVvKxIf6eFmt9Pl5E5vV6vMeO/e
lvzxfnikF+rv4gwNEPPTpTOjRWL0hq/HoVuAx/MAyg4fHRRPT1T090mTEy+4
Oe6jBwCeQOsKCQCe4c7srvqUlvrM3PyQi5edcrIvlUhSa8vTWuvSa4pjIkKO
Ott+7Ou9hyAipqaLVar6hYWasrLU4MBjibH+I0OtoMn5MvDMT5yoK3yUYBsS
NO3wTXDiIYzzIpH/B37+i0TBz+H8lxKufmpvcXLHC/5HXou6YXOME/MYl/31
874h6JdK3AchjxQUPJGf/XJG7PbTX7gffivG9U+sxGNerID3c8I/uO5v6XN8
17ljm5MvPsvNM4WJLwXW7gA8RjhxH5vj1NLWo1BqgUfFuF6f6mingcforoBH
WyAvNsDENO0YY/wNCPIBX5Q7NDKuVjMpxgA3VBpNC0Xadnb9CBcYfovuJLyl
wV+FC1YRglU8Ic3YBjBiyoU3criPcTkv8PB3pdIdVVUuLY2hfV2ZIyOiicma
OXmXQj2qAYYAi0uXD3PPoFJpVEzZu2apk5teeumll17/bjEJCaRaZ8SmVlCq
BYqcYUrCh0mqW62qWFxEZ2dTJsaDhgdtWlt2VJX/tUjyG4z/KIKvh7imHJY5
CpvjhBEMm+CYMY4bQ7gJxDeEQeLrUlEVwx5LU5UxQjyTl+6S7C2GPforfQba
LtS1BEONEb4lca9z09bBmDmOPYxwrUok9TPjTPMn0P5KzSwi8OZmtlZI18KQ
AaZjpzUw9AyUaimMTWhKwPpybjTnbxNkP1yQZwDRm0SYIugaFFuNYsYYvoYL
/50QiCamlvMs5JQGnpl4pxR/PilixzkH2xOf2Jx4383hn8HnDqTGeVaXJLfU
5MZddfO0t/S02+1ptzPmsn13Q9bUIDrUUUBwAtPiXRurUkf6iBJhQvA5awZ4
9tLA46QFHk54fxdeW5Ur5Cdev3qGph1dhCfwBAM80FBHdmddUntdhrQoQSJJ
7+8rnpyoU8ibVIraxpr0y8FHnO0/9TmzNynxjFSS1NGOTU5UdnXiUdfcEmP9
dMCjixiQbTODAQ28d4pYjwvxdbjgYRh+D88MqEhNb0q7WJ2+S5D2RmrE+94n
dh3625HjHzheP/0xJ/UBCLrLPBkjRLAOQp/NSv3gjN2hPe8673olOHCfQ/b5
A0iEjzgqEA07nn/pLVb8/RDHUBd7+XrgAR1XN7Ig15aOPgZ4VMySFn2ynWpv
f/zbAI8BRg+hISZcDWO/gqErra39YCVUo1YrSY1SrVGPUdSN6ckXxUVmOnPF
u6GdFcBDn7Q0VxOiVTjfAOcbYTwa1Yx5hBmBrcOx1RB3LZf1KFTwLMz9AyH4
RFRypKbVp70/VjaGTE6XzMw1KZSDJDUNUspV9Fgg1YtMI/s7ewp8rfTmh3rp
pZde9yhyydZYuVQ23kdSNQqlaG4+b2IyfFh2qrvLqqXxL5WVL0qLHhPgGzCu
KT0QxBzlGRMCehYwxHgmhNCU/oogphhmQv8cEpjCImNECGqf7wQ8JgjvucwU
KzfLCJe3OgoOaOocqHo7eb0bv+j8toKotRBmhIuMUP7TCHK+unREpQC9oBjg
UdHTolodNzz0skhkDqMmoCQHeZaTcZiILKi7Oj5wTTWW2NGb41+Y+kJe2mo2
tInN+RVS8F4h+kcx9HMe+0dc1j8wHn90fLkqXUVpyuYnj9YQH6RdOXje1tVh
u8/pXadctrrafOzttp2d6ddSnZV4zZ0GHi/7PTTwRF2y7ahLnxpEBtvzuNm+
sZG2DZWpUyOSzmYs7pq3o7UlU3i+x8nW4qwXMB5sb+SkJvh6nzp4xuNzHfDY
WQDgAUta0GBHVkdtcld9VncL1Nslam6Aaytzu1o5sn68XBoXEvDF2VNW0dc8
LoXYeXnspb8K+bF11dmR4U408MgGW0gaTnXEo5qS91ZPSBOHpfvqC5/H4Bez
020yr2DQub7C862VEcFFcW/lx/wmNuyVQM/XAzx/nxL9NIik4V9BOLoE4OWf
0OxhDmOPFeS9Eh74d9fD2+0tjoa7Hk7z92efE5f6V9aHRldH/YNI3ASxGZvl
u4jwYIJNLNi9tbNPqdJl/2ooGUl5ddDAg98JePhfBh5DVGRMwxgqoE+VH7Ph
o6XljTMzNOiAyA7IU1bMkaRILv+womI9TGjXVRnX6LtpfrEU3sGEq4giA6Jw
FS40pM9J+ivGN+IJTAi+Oc4zQNFVBGqIo+Y8wWqEb87B78OEj6K85/niv0jK
PiurOtHWGTA4lDo6IpycrJ5faNNohihyFqx23TQh15OMXnrppdddS9v7+s63
jV8uGGEqqpjWSpSuX3Y/RbWoqYoFBTY1kzQ2HjgkO9revbW24c+S4udw3iMQ
vIbLNYFQE5y+vUWNcdgER00x3BTlG+IAYwyAX58A3PwiuDHKM8GFRrDQGBEZ
AeAR3PSgw5aziwU0qPw0O/0zz31hXn8bIuw1NU7qcutx8UkIOrOjIH41xDfA
JIaoeC2EvI2w0of7ZpbeJM08CyTVolR6dnb9HEEfgKDnOFn78FhO1dXuzquz
sgRSDk9MC7kdxL4i7k9Zea+yMl0l+QV9kuxOnmcl6100+xMU4Y2MLpfakJRy
RDVFjNRESTL8rrhER7rz8egb4U4uNv/09bDgZJ1rqU5PuObibrfN3XaHh+22
G5es22pTJga4Q50FtaUJbfX5qoUGUtU6PFCcHOPrYmfp7rjH2c7SyWaHzmm5
gZ0Q7eViv93NcY87AB4rF3uLS0E08MSNDcADHdntdSmdDTk9Lcj0ePXCbPNA
t6i+Iq2pOk0qvBHk9/nFIGscjoqLOuNgs9XZcXtmul9pcXLEZYfUpKDR4TYN
KNlnZkuNfHGuRSYjmiYk0Z1CCzxlS3LYMd+j/vYfZpz5VJjkGIxEvspNfZid
/3B+/iN5eQ9w4dV3aphlAHKV+UYw3wTmmyICY10GuIChC95aBH00P++Z5Lhf
RV95I/XGP+JCbIMOJ16xEOedSBMGbEOuP8TNM9LaEt4hGrNipQwhTDH+QwWQ
V2tnv1KlWcqGp4HHs73tCQA831yWTv8CTTumqNAE461H0L/zxQWy8VlgEwgW
j1QapZJU1atVju3tj/No9hYwtCP8Nh0rtKCuTQPTmksLDehBMw8hNCZExriI
pv1VBGhjYSqQmGJCE4S/mhCaEXwzFFvLRdeyuA/A6BMI+rKA92ExDaINXgMD
10dGCiYnS2fnmxdV9J3FOFMnqFhp0Xm7kfYt17Jeeuml1/+sGM7RqCn6NllN
D8YQ/2ZPh5X1s8zsDpIKaHgYIqkOhbp6YVEwNZM8NhYwNGzTObitru0tafkv
RUU/wvnmKMFY5hKGGDPlgZUpbb8kkMwJioC00+UywzCpMtofMt2XwPKBrg3T
nZpOGqG8Rwry3g1xc/bczA3f2ZaxZxg+XMuyieOEfMjJMYPFIBmV/jUYeQBi
by+VCmdnlDrmAck8CxRVPL9wrLL6DU7mPiQqv+aGrCV0sDagte7qYG/e9Liw
f6r0eqv4HXbmlszomILLLeWxsobkwuo0OyzFAmbxZMNL3Keib7hVi73ToyXN
9bms7ACpKLm/tyQjJcD+5Cc+XpYFWT5NVSlxkfbudp+ectrm474z7qptW33y
2ABnoLOgsSqjoxkZGa6Yn63v7eKzc0LTEs+lxPleDrbz8dx/zusgxoroauay
cwKDzn9xxn2fh+M+N3sQ4aExprw4fmQQ6e3Iaa1PqytPLRbGN1ZzhgdK5yer
x/qJntY8qeBaiN8XPqcORIS5Bpw77mS73d1lZ06Wf1lJclryuUJh+sLcIKlh
rHjoN6KeHe8vFXJCCDSEqIjJkF7NIELirx0Psfnrhb2vpF+w8mOHvQilmcGI
riUWmL5vJwoadUxhfBPEfRIqeAYueArhbkIQU5RYCTAGzLEzQ4gfQ+jvoq//
09ryuOXrF5zeD0lx/5Rz40GIBh7iTsBz2wsR5ijvxwWQd2vXgFJF6fpbkYMk
6dLS8hiKG4JEoG8CHqaThQnKXwsjv+XhUZ3dIwptdEep0SgXNep+DXlBJvtl
kcSExhVUpD0Vv1O7iqUQpXboEsNo8mF6rWqZHxcZokIjjGlDhmnr7kHCs/Z7
AwSn7wVMEPw+nPdTvuCVouLN5bXHGtp9egdjR8Y445Olc3OtCoVMrZ4BmT+A
wjVL9zDL/KOhbm0Eppdeeun1PyZm2taoQSNs0AtbBTI1SSVTLaJdAGLKxkFN
96BG06JUls/NFUxMRgyOerX0Hq5t/qSk8rci0eM4sR7CjDmoIYQZoUvtG76y
BeSKfM6vHN94e867jwv9IfHqRye3Ht/xm+vWL4tj9mbmnbHhxP6KAxkhEjBD
obgRipojyM9QxKmmuntRDrCNKXVRUuQ4SQmmJn2K8kNYfpXF/mMVPtWQY2Sg
Rdzlo4UF/l1trNRG7FNO5ifXQmwcLC+7b8ZvHBdBgQFw9HE4VzDQx8TDNEwl
zaRypqGrNgPK8km87pxwwys/69KVi44OtpvPntpVkO3bXJMSf83O221rYpQr
yg4txC8PdOZODiPtDRkpMe4h5w9nJJ6rKknraoE6W5GF2brZqZrOFiwvLTDI
9zDGujI2IBzuxUuLEiJCHT0crNzsrZxtdgIfnuIE2SDS3ZHT1pxVKLgR7H/k
/KkDabFnmyoyxgew8UGsviIlKtzJw8nS3nqro+12R9ttHq4WeTkXaqozC4Xx
XR1FwBWYBh6SSb9Szwy0FyVdcciIPNkkDukuDR6vDZ0oDxBd33vN+vc5obv8
2UEvQAmmCHfF3H37QTFCePdB3NfhlGOFCV7FCQfEKa8ROZtQ2FAX/FleDBIY
IfwHIPyXiYnvulnvOfCBnfN2m6Tzb7ETN0BsJjH4G4CHfhJThP/jfMi3rXsQ
pPDogKePJO2amh5GcYO7AB4mF50wQdCnUdi9FdSha8AZr2a8KlVTJFkwOf2O
tGINpgst3nUb9zue7V9+aeYhZCkLGtEO3gpAutOgfwEmDLjo6gLupnzox2z0
V4T4j+KS3ZXVrs0t4V1dmbJR4eR004JiQKmZZLqpKhjIZ855JhCkdbzSl7nr
pZde/3vSZaJoVGowNEoNKSe1XThBGKdNA8rG0ZmZhNGRoIFeu7Z2i5qatyXF
z+LiR9nYA2x4IxczR3FjQmDEExrxBMY8oSkhNMaF99Comv8Nn/lLwLMWRn+d
mfKOj/P2Qx85W//tcpzbUdbV33Ky1kOEAVLI5IGAVk0mGLEeQV/HkISO9kk1
iGZoq15orptWLpQ0C8KC90affb846ZAwyfqc/Qfuh9+NPGvZWJGcVQ/t5KZt
iQg6cnSHi9XbUW4fleWfSUeuBCKppX0dzL5j0pc0E8rpunJe+DnXT72dtzif
3Oxit8PN0cLFcbv3KUtW9rnW2rSkKMerocc6mzmkqlk5XyGfEs+O8drrMqIv
29kf+fCMs0Vuql9NaVq5NKW7UzAxVjU3VVcsjA/1P4qxwyaGBLOTkp5OJCHq
lKu9pYvdLiebHaGBJ8qK44f64b7ugqEBtKYi/WLAcSfrT897WongK3OjItVC
xcxESVlRUvhFe2f7bU522xxtt3q5WbLzg2qrMrIzAvl48vRkDxPhUYM4lXqm
v7UwNdyZG+1UW+CNhu8qum7ZyzpZemNH1um3xMkHE4RBH+PRD6MFzJLTnQ+K
KYw/xco+yA7PLQyqqQll11w7Ik58CikwZFapmOwXXbzOEOGvgYkf5xf8+vqV
N/3c/hrm/VZ27JPcfDMYXdFF6+t42BgVPFYA+7X3DKvU2kNBjy6KOtrYdD+K
r4LvmFx0G3XQW4VvYrN3SKWi2dk5hvtBEbgaFBiWK5SHqusfZiKNDJ/wmPDj
N4L63QHPLQ9960YnhijPBMHMAK3xjWCeKRfbUAA9xuL+kg29yRN9KCk70dDu
39kf2z+UPzYunVtoVaoHSHDPQl/XcuZeRnOTeUh9FpBeeun1PyKty5mC1CyQ
mimS6iepeoVSODObOTF+aXjYpa9vb1PDXyrKnxPyH8ORDTBkyoUMEdQQA2Ec
U1xgzhOb8cTGBD1EJoTQhBCYgq8igy+td9wJWr7qlpm36i7qf+np9VEW+/mk
uFdCzv3pgsf76dE/hwrW0Hf3mNYRjv4dgp7RTFB8DQI/zsrZj0FFgwManZeb
mhmLs2PNWOJpvyO/zw7eiSc4BrpbnLL+5IbvvnpJDNHA8hSl2ySH2jvtcjv0
57hTnzTme0kgfzYvprWvkdLNEWoQ4ZmubZLGpF+3j79s7+Vg4WZv6epg6eq4
w9trFzvnfFtdRmqs2/WwkxXSpL5u3sx4ycJk0cwov6spNy7C2eXEp+c99uan
+kM5wf6nrSJCTsL5l9ob2ALkaqj/5xg7RNYHD/Zwmmoz4q67nXazOuN+wMV+
Z2jg8RJJ3PAAMjHGX5RXtTSyLweddLXdEui9vxCLGO/Hx4aE8zPVY8OSrNTz
zvabney2ONpuOeVuyS0IKS9JuhRsHRd9bmS4lbnpZ4BHM9PbLEy77EjEe5am
eV4+8ebFA78UXfy4NPKf5bEfj5Q4NrdcvFQV9yYvbw2MG34FjayBseczk/eH
Olzz31oUvbsI9vREI34O5TCmzcwyJeAHJp8ZAS3RzRBiIwQ/xCp4mMXaBCPm
AFB5S2fF15OAwAQVPlGABHX2ydTALFo7e7dR1L76ho30yXMX7dKAFwEEvYUg
yT1940qVWk0p1dSiBqR4dWnIU71DP+dLjHV2zcTS+EEAjwFY7cINEBzk8zMX
Go1/5ih/NcY3x/gmMLYBJn4E488h+BsiyZaaRuv2Pv+hkXSZTDAxUT072wNC
e4B8VMCTU80E+L7UWU0vvfTS6/+dtC0jh5Qq/sRk6uhY0MCQdWv7x1XVv5cW
/YwgHkKRtRDbGOYaY5gZTphhgB+McZ4hzqQZ4AITnsiYEIL+DoTQFNAOAzyg
FEVnWfx1A1Rg3fEjnbgb4DFEeKsR/H4EfZTNeTQ3/yEuakbPpDdzS3hMhAdd
h3CeQnLe5sYfy41IFeXOzo0xWSta4FGQi+MTHRJp7oV24eUqJDjw1G4Pm0/C
fawaJVE9/WiZTMBvykpP9wjx+DDu9IcdbK8uvl9LWWx/TxWpS22i/5tWzzZO
9yDj7Zz6wvjz7lae9pbuDpZu9tvPejLAU5+ZGut+ynmL/xmruEjnUlH0aD82
NSIY6EKSojydT272P30Ayb2EF4R5O+9wPflJWMDRSkmSGIu8GEADT/BgN6er
Nbe9KRfjXslND4Hyr8ZEeiXGnqkqS+ntYPX3QnMzFY21BZcuWLuc3HzBe18h
drW1LgvnhFZI4rtaOGmJ3jrgsdl8yt2CBp6KkuTLoTaJcX6jI23Mwdfujeme
JiLjip0wyaMh/wwrcCvb7x+18btqE7a25VgsNngu9FwSN0Xv4ac8wmWZgIWY
W8DVECGMEHwDF30+JfEjl4NHd7wccPB38ddO2HFu/JRbYKhbz9KmZgmWD712
hcsIzNd8E2BTfPPc+HoSoJ/EFBE+mY9e7BoYVZNLx4JqoSir2voNKJMwtjLj
CyHMgVM3vAbimsDAKpl+1BTGfspm+TXUd8vlSo0uj02uoUYoKnl8+rXC8jWo
iEE73q3A8+3g5JuQ5rv3sV05aHo0AQ7kAkNcaICDr4YM+ayGsLUwsQEWPI6L
XuXxPpAUHaquPNvdfmN0FBmfrJ+emdMomStBex7opZdeev0/F32TXze3cLy8
6lW+6HGMWIdgBii+CsOB3S6GrQIDB6a7KM8YeMYShkzTARDkx0CZlQFIuRQY
4UJjTAAGqLe62aPhG8e93PkaMPlCTGKnyAATr8LFIAv0Zn4sYQZzf8JO+xSJ
CpNewcU+FYXBYz2FlGYG9FEHYQ2GeRTjClnNeEN+PS/iovduT5uPQk9blONh
Q+25c9MC9aJwajCTE3ck2vO9HshLVuTfXxXb31G6VLxG08KsZqF9oodoKU0W
skL8PXeddtjuab/d3W6Lj6clO/tcR2NOZuIZL6ftXk47vN0tslPODvcgc5Ol
I0PFqXFnvZwtU2J9Wms5RWi0j+suD5vN4YEnqqXJYjQy1O8Qygod6oZ72tij
A8KhHtGErFK50CEbKOlsw/u7iTJJXGaKNwFFcHMvB5w94nJyS+DZAxLiWnVJ
UkTosdQ4z/qKjNR4b1f7rU62Wx0Y4IFYoVWlaWEhNnHRvrLhFmai05onTfQ2
wZkR1oJExwFRoEzkO1vqN1dypjX/UGW6Ra/QZrr2bGvFhWDB5T/CiZtgthFI
SseNQTItvZPRB2D2E3D+05zcF1Li3z1jv/3Ah0cP/8Pl2qlPOamPQLAOeJZS
0HXAs4JejFDQX94Iuy0lmHenkwQ8iSEiMIMFPy1Aw3oGRzXkciFhKw08NbUb
QH/Ym9EY+iTZwOU+z835G5b6VyzxF0jWOgSlN+kRNry/qKhqclyhAZ7K2lSm
WZIqXFTsrKy5D6G3SsRsuXYl6zsDz5fHzWLDe34S3dA2r1+REU1flTxDUPNI
APdO5rowAAbU0GqE8yDCelYk/FQgjmpqmVQuAjvplc1g9NJLL73+n4pk5v5B
NXm6teMZjLcaGKPxmLYLfGaAmlngkI8Qhoi2tOrWFA5t+iVTWq6b1Jjv/yX3
rXcxlicggXZjVr40PR0/zM37gH3jsvhSa1OgqtlTWXdmsSWemqmnyGldFB8U
bi0qZ3oHaliiTL8Qj+0ex9/3d92cEeWYfN0OzfNprbg22poAxx2/7vZeB3J6
tPrScFvmSH+trukReIY5tbyzsTwzMvj4teAj/p47zjhu9rLf7GH/ma/HzoJM
n86mvNyUc15OFh6OO0+7WWQme/d3cPq78Ppqdvx1zyDfI8Wi1NHBMhESc9bN
ysNuW0SQdW1JKg08Iec/Rwsu9rVDteVpVSVpRfyE+mruzFSTStFBajoXZqsL
eTd8vazc7HeccrHycNztYrMt8OxBCe9GZXHClZCjKXGedeUZKbHernbbnWy3
2Vt/5uVmAbMvtTSwM1MD83MiRkfamZ1AMew3PjEoKkMCGxC/bp5fQ65jN+Y+
UeI7WOTVjDvVwyf7hY6j5adLai65FMf9As2+H2Y/jRc8RxT8BM5/lp3+IZF6
siTtZFGyBRT/XvyVtwPP/tnP648J159hF6yBsBUnzIrwzk3gAZbaRgB4hAZL
x3G5eai2au8mxDK0owWen7PRiIHh8aUqJPoPDTy7qqrXo+gqDF2FYgyigNPg
GVbGISQ6vvxqWk24TXHKszh7Lcr7i6Aod0g2o1IyCWxgqVNFUs0qjVtX309p
bod5hky2zFKrrH8h8PwLh2C5McqXg6XgdgDhAaNyBoGMML4xuKIxE4y7Eeb+
E8WggUG5BpQpMMT3n/wU0ksvvfT6N0jDWOfRzFNFkic7uh8XCMxwniGwh2UK
ZhnsYT5OeXeTF/HvHphu6EIBGF93h8tMrGsg5IX8pFMFFypLL8zXn6IaHKh6
Z7LBX92dpZpqpjmH0iW70lPd7IKsvpQbGeq+w+2Ld30d/hkTeszL9iOPE+8n
XDzYXRbJT3VKDd41WBkuH8lcmBbOTHWsAJ5Z9WJnc1VOZpyXGL6Yl+RxPeSw
n+dOT/tPznnuyEs73dGYm5fm7+lkSZOJl6tFVsrZ9oYcnB167ZLthbOHfD32
RYe7F2SEJkedPe2yx91ue3jwydrStGXgaW/Iy0g84+e9/4zbntAAG7ggsrY8
d6hPODEiERNR508fcLbd7mJn6Wpn6WKzPdDnkJQfVSGJCwv6IiXOq7Y8Iyn6
lLPtNkeb7XYnPvN0teCywsZHymSDFYN9VfJ5GZPAQzGFWlOUqoWcEim6ckoz
nC/bvpF+/oNW1H2+/QY1ma0cSlxsuahpvjDafiWqIvodJOktONWxJCW4OvF0
UbQTK+gqeqG4NqKmJSqtOtGSl/XLAtaTeeyH2cgaiGcE3xLKuLmaeQsFCQ0Z
x+Obrepp/kGJNQi8HoFWw4gxgO1bgMcU5j/Dxa4NySaWT2UaV0hqZ0XlOgRZ
CTzmMPZGVrxn0mlu7pFaoV1S6Y33kKyXeIKw3oEh0A+dph0lSNcnqUGSChma
eEFcZg6W3vg6vEeWl9h+uMDzjYNpFcczwXjGKLYJ4rzN42cNDk2B6i1gKK1R
q/UtuvTSS6//92KqVNVqSjVNkcUazf7Wlsf5QhNEYIBpTUKYTkDfvSb3+x1M
TjK6FoU3oPBqGGVs7rQmb8DVZBMX+mNKxOlAK+iqRUv2/iHekZkye0XNqcmy
gC5p/OxoF3WzQldNqadkHcXxIbYeR/5+3nFzfJjtWcdtp09+HB90sLfsRqv0
anPZDdW8gCKL1OoqlXJoKeWBAR55R08Lt6owVjFZND3Ca6xKTbzh5GH/T//T
FtnJnh0NOQUZAR4OO2jwoIEnI9m7rT4nN9XH03GLu/1WV5stjic+dbPbdspl
d6DPkchLTmnx3o1V2UX8G2GBR5CCkNb63Nhrzk42n7rYbXOx3eHuaHnB9zA7
N7ijmU3AEedO7Xe12+lmv8vVbhcNPEG+X5QIo8uLYi8FfpGWcKq2PD3+hqcT
/RI22+xObHZ13J4U591YB42NNCgWZaAPGNh+LfYtUKpuzXTRXHd2aZ5HrM9H
UPTBvrJL8uFsagGjptnKrhhl46XRurBEcfi2gsjDOSEQ/3xfld9AzQVRlnVa
wMf45c3NedZ8vv9eNOFhCDYBDsYiQ51Z3zLJCFbdvtZJPyo2QAoNUbEh6F0u
1HYwN0QFD0G5r+OpHwhT3+BlPo6yTRl6uRnhQfjPcLDrtwJPI0VtB8CDgnVY
sLAF+GQtjL8Zd22fq6W39UspZ/8Yle69Nz/FvaGxYXER1CvRrAP+0MBH5c/M
vV1SuwY4OIluRk50J9t3TDD+AQEPTJjA2CY29x2eILqrd5bU1isqmaEHHr30
0ut/QkzbBZWS0tCf+XwNadXcdj8bM0L4yxGe//Sn+ld9hhPrYPZzSMZHwvTt
4vQ/oWnPwTlPwKxNMGwGypZF93PhN2Iv7jn8J7ddv7h05DdJnm8Q4R/0Y0f7
CHs0+vMyPFajmCCZKhVmZUshnxsu46dfcLM657gtNtTujP02rxMfx1w42C6J
bC2PHuhhzUyLFuWFc7NlC/P9S1kPzJLWYld/OyIhItob0idG+TOTEjEvIirc
NjfNW4he7G7Jh/NCA7w/9/Hc7+21Jz3pTGt9dkHm+dMu272ctp912+3rudfL
2eKCz2ECiupqE7Q3w7IBQVtjPswKKS6MaanPibvh6uaw1d2BBhsLN/udHk7b
6Z/UVaazcoJOue6iKcjVfpeb3W4Xmx3B5w6XiGLLimLDgr7ISDpNA09itKez
3RZmSWuLg82WU+57wkIcstLCmhskSsX0EvBQwFRSObA4JprsyuitudYkDW2W
hA7UxyyMQaSyiJznKbpTFXVXByRBSUjwwczQA0HHL3t/VBKzc1LgWJe8N/LE
i36WT8e4vRuX4m7BTXwEhkwRnhFYEtJVozMkI1zqGcGwBCjU4q2B8YcR7EkM
fxRFN4KOsTyaVI0Rwf1c1vvc66ElVzgNEVG1cTuLsh4CQZtbgOdZLnZjSDZ5
8zSmailqc0XlWlQb4dEBzxqYeDE66gNbK6udL7kffvPc1VNnMS5/cnKKMd0B
Uz3ocktVqVTHGpoeogEMFq36Fj2z/muAxwwh1rGh11jca119owzekCB9R60d
euDRSy+9/gektR4EpTokY1PPV2g+KpSu5UJGOL6KIFbhxL19Jn9fwxjBfsZO
+wK/UVAXU9J8PacqIkh61VkUtR1NeBZmr0N4m7jwmwmh9h6fRLi8G37i1eAD
z0XZ/bqjYPd0iU1NtlVRluPiSDGlmdZQapVu4ldOj/dAaeEBrlbRgbanbbd5
HP/4uv/BUjgoLuyLmKvHCTS4vSVzaEA4Md7BLAZp40MLpGqgqxmKvHQ8PORA
SWHYzISgt5Mz0I3NTZVPjohGB4j6ioxiUQIPvZ6R4o1wglsbMguyfM+4bb8Y
cJSdHYpzryZFn05L8G2uR+RzbaSqVbVYLZ8pmRwVDfaiTXVZ8VGu7o7bPBwt
3B12uTlYejjvTIh2bahJF/Eir1y08XTe7Wq3y93eysVmZ/C5IyWiuNLC2LDg
w5kpp1obsoR4ePjFk54uwH7QwQZkLzvabnVx2JWTETk1ObC0pMVMfkqZcqpE
Poqo5viUUirryinkBgi5FzoaUmeHuYre7NnKiEFRgFB0OYgT5hp0LMjpPfzK
lnGx00ShU0XCrrzz76dc2ByRfuYzKOURCDJHeCZMcg6TCbOch3Mz1EMDjxmM
PcvN3l2Y5V6eaS1Jex9Pfwxhm6PE/Vz2HzhxYcKA9lqvxUbX3qagCyXxT+MQ
M3ED2jFCBOYw/zkuFr0EPNpCrXKK+mdFxRpEu56Fa00OzWD+kwkpr/h4/d1u
117P/acSwrktTTKFQqGzFwc2m8BUeUj2vLDQFBasQkT3lk78QwQe+v5lAxd5
toB1vqJmmEnzJgHogcbry/p+P2Yq2eyh7/cVaFWw2INL30YcAoqo/L5fc5DN
qrjXZ4hc3ux/qYbY7O/97f+g9M0HfcUZ8l+kez7H/k1nwiDbE+x/L9YPeR+T
uv4SurUN0Jo5a3zizyLBgwjHiIANCdQA+yEyDz1dvpid4JjkK2B79RWdktX5
D7QGtrWEckovb8dSHoGhhyH2p1mh+Tl2PQKXptxDJTGfNaRtUdfYkXVO8nJX
mdR3pj2DWuwmqUX1cgazWj7QVpl21Ts60P6s/Q734x9FBhwqRkIv+u5ytn7v
UuCBYvHVgV7+xFiHriMDAB45qRpsb4BD/Y9cvLC/pjJ2YlTQVJfR0cIZHy1Z
mK1YmC5ZnKukNE0qRc3oINrVmtXRnJGf6X3+zC5uXsjMeIVa0d7bKcrPDkmO
8y7kRfe0sGdG+bNj+NQIOjKI0E8Vf8PV1W6Li+12V3tLN3sLd8ft8VEubc3Z
skGsrDgh2P+os80ON/s9zid3Bp8/VlaYWCqOuRz8eXaaZ39X7tgwLBFd8/f5
3O7ENpp57E9+5mT3mZvT9uyM0MmJdnrjmfgWSOPRKGSahTpKWamSF8t62cXE
5fCAA75um5Fsn4k+jnIEmmmMmaq8PNocX1+fVCK+0iwOmqq/qGkPplp8yUbv
uXKPrkIvVmHobizuKXbO/RzOg1zugxB3HQSZwogRgq8gH7BuRXPLfRzob/lR
0YXhNXWXq+vDrxRdfRNK3gSzn8lPPsq+VFjsO1fvqq62a5d6nSeuPo1xtMdd
267LHOb9mosnDMmml8wz6SNYTFEflJevBsCDMym7QkMEtKC9j4U9lZ75q+jw
v0aHhQmJrpnpRZJUqcFQasgxikobn3q7pHItBn7/vye883XDQNuigslwM0R5
ayD0uYIC29Ky5lm5mmRuckjNd2i5/o2qiDz0JUWAD+tvBTxDbK/Im5/wgyyv
FVPY1+HBzemsMuL7+dTVTakrZtX/NuCh9632iPzb9Q2wce+T8lcc9JWv+z0B
zz0+7SCL/bVH5HsEHvriOhT5dU/+Ld7arZftf4tIYLNMJg0O/r1QdB/GMcMg
Qwz/d2UvfItaXXMY+21K/GdO+88cfy/R6x94+LaGzF3D+JFOvoct9+pPuQU/
4eRZJftgqQcGhCdmKhyUVbbq6pOaWvtJwfHaxN3Y1T1F2Z7jfUUUNc840YAQ
Af3uFQtT7bWi7Bj/sw4Wbsc+jAg4WIxfvhr8Rej5/SL0ymAPPDlSPD3Rpavw
AlPHAqkYaKuDw0PsCrL85PMlfT1o7DXHixc+5+YF9nWhqsVaimykyDrVonRm
HBkdyO9qTS/IPuvnvScj6WxNeVZPl7izXZyR6ufquNXHa1d2stdAe/bkQN5Y
f+5IP6u5Pj0xxs3Hc+8Fn6OnXfe5gIydbfE3nNtbs2emhW0tORFh1o42m11s
LR2td4T4naiQJpeIoy8FHsxJd+/vTh+XFZRKrwWeP2J3Yof9yR1OILzzqbvL
5rzswOmpJoqaZTKWAfDQb6qnnScb4I0PYni+X5D3rlP2nwZ7W5XyIuUTYnJB
ohlhj1Ze7RJd6CoMGquPUo/kUOOZqs5wddM5qsWbajurbA/oaLl8qThyCxL9
Pjd2O5FgwU/6C5b8HJT2CJSzHuaaIWCplMnqERvBwkdYnH9Eng0MshTd2DqE
Wot4p63YYc9Caa+mRRy/fDL3+q7m3L3DyBEJ4uEAX3sc5S4denAqmkG8l7h4
2vDIjK6VLSiwp4/l+2VlZgjCWDDxmf6zYmaITBH+oyyOpbhIMjImVzOJO2pQ
njRDUiL54taK6vVM7hCTQcT/4eXqfOthiAmMCCFwjcB5NAH+hM2yl0pqZ2bB
Kh5oJ6fRfM9l6BWRt86q3y7Cs5IB6E/7iIjlD9IhdsRXk8xK4PkeYjs07Xgt
vwsa7Zjp9b8NeP5z+jcAzx0Puh547mXffivg+Zpr8wcrrRVhP0nGyMZelxbe
h3IN0X8D8AiWElaFS6mt30A+5gjxq/Tkvzh+sd/yj/ZbX/DY+VzQ/p/neb5e
nGF7nHXtGS77mfycjwKsTx9+MdbzNejS++XJW/qQQxMi28p4y8vWr3rue9Xz
6F/ZmZdGh9tBoYrOvI6GGLVCPlkj5fi7H3A//nGE/yEpfiXphiM3y39mpFCj
qJbPVM1Mdi31lqe/yin1cGcjeiPMEc4LmpAJu1qhiODj9kf/HuR7oKwwYX6m
klTXa5RVcxP4aH/eSH/uYHduZXFsTKTzaVcLH0+ryDCH5DjvS8EnXR22erls
S4527G1OG+vLGu3LkvXntzdnIZyLCDuytCj7+mV3p5Pb3B23J0S79nSy5AvS
oUGEnX8h0O+wu8MuR+vtof7WVcWpUmFUiP+B7DSP3s604YHs4sKIoP9j7zzA
2rqyxB/bKZNM3ZmdndnZ2d2ZfzKZlsmkO5NmJ7HjuNENuIExYDqSAHUJhOhF
gCii9w6iqXdErwJEE72b3nuT9NcTCAQIl7TJ7MfJiz8hPd1373lX9/7eOefe
42MNBd8K8HZMScAlxiLCQ+343MiVpS65bFGZ/1TREGl3Z11Gsiclx6urMYOS
4YYBXYPbXvGAGSWFgYVU/76m1Pk+ciMDn+53I4d4V1IRvDFJkU8XbvTEbEoI
8t5AeZ+/rNd/uTtA0hnKboksaowQtkaUS0g5zVE+tdH3SxPP87N/z6G8xOad
3gcexvt+SBOzD0iQd7ryLAeqPWIqw24UJ3+eHKgL0gfdfi3M8S1unEkc1es6
LfFnLKY68DzP5L/FEuROTC4q5+4dC0+5XP55rQJ4OErgEZ7ZB56Sl5jccxxu
9sjY3JZ0WyrbAphne0Mm65LJUb0D/8MRnGYJgHD3XfPOvzzwnOIWP8svBbCH
w/8ti2FaW123uLgO5JKTK7NnfCvmHXXRBDy7Fm8LNQsD8IBpocEMPkol7aKF
chTVRDJ7pe27MHZPA4wYSsEo/gQmix27k/K0I3UA5oIDb6qMVIfNIPtVOvi2
2mSkoUoHvqU+IzSobEUYBc4dmVNUn+6pZU9RFmrs95iaHzhBg0kKUNdeNaKO
tgK7dwuwh8+RHzn5iNXoQBP2q6G8KUfK3KuGqp7HdYxjVX3gpms4bed9oMka
mnOkyY9tJqDbHXNfUMyhpu19hSrS1Io9I+HutdSMoruFH/nWgaI0VfuAF++Y
rqK6fNRBle59dKC37NTtyF3br7xKD4rfdYNSn5iYoAMfaeoYR3q1XEP3+65F
pswwqHjy75XJAicn3yotfY79rQMP4KRgC37O4f6ay/43DvNFNluZs+lRzPMc
m//bgoLXg30uIa1uO+hZmJ93vPlXD6u3UjJRBoz03zFYf8jPveoPwdp/REKe
j4C+HwF5I9vtH+KMuy1ka0akaWaoRQDawAd1Nzc1ZHK0T7674zAQ1CKTb02O
9aRFe6Md9MO8LSq5ESnRzvHh4HJOeFdz1uRD4cJc7z7wyNfl0sl+CSfCz47o
bUnJ9OIUBAd7WcMddT1Qd5MiEQJ6eHcLeW6CPztGn35YuDDFWJ4VrM5XN9eT
AzysYI56MJAeDKyPcDFEON/AKIAnATrQkTk1RJ5UAk9/d2GzKHuwt3RytDE3
zd/FQQ/tYhQfCeuWFK6v1m5tiqYmBCxaiAfGDOpgSPR3bKrOqiqOD/KxyM90
HerJHhsmA8Dja+2Fsy7mJgNr0scqWprzerpZ66t9cqnKwiOXtrVUBvs7koJs
m6sSGbmerk46CLvrcFsF9lzGOF5OC7PpropqFxCygk3oieCxrhzparl8VSgf
z9vuilpq8l8R+0m7guTdAdsS782egLV279VGzHozdrYZN9TqW98WEd+Yol+c
80sWUwk8ChQp+QWd/VZ4wA2QQaTr9dYc27lK18amEHxZzPXkgKuI+3dMP3aw
OucT42xCjfp/9JznWRx14HmOyX+bXZw3MbUIxJ/tJgYvk8nP19Qpz9xZ0gUs
E1MAzw9YxX/g8Hw7O/rX14CsuNuyLWAdunRKLoudm3+7rOoHTN5pIBGJQGVg
/BcAnsesmuQWn+EJn1X8pljcm1VVvMWFlZ2seUrzDgA833LQzhHgIe3PJirX
g2JkVpvQD+LEHtjsmIZUBiLVs7BiON2bm4Chdefk47hI9VrNRLPn/gCmP6yq
cOz+3HHYP3KcHWaPHzRXSTPwKLSxNzkqKoA5WLLapzvuvIOKUvkgHltztROU
bVfNRHvAE7U/0Yii9uY4tVYom7x/Kw+bUDTp84i69jSgfnf2Gqi67oFJ+VEd
43hVP5GFJ8riyKU1NPlQAcd0m/0erskMAlRsn1gwOyfv3YUDxapbeDS1Xb0o
oAkqdNfY3zR3FdpxKlIDHqw64kapUfF+hdUqv0eqaj1ZxfOaNHakVwPv7HHO
t2KSfSJR2jpk6zLFXCjvkMk8B4Z/KxA+w2Cf+tZmAUXJL7I4f6QX6Atzbauz
DMsy3uKRf8xmnj5+55+dQI4XmdxfFBX9Liv1zVjix/5ILZTpTXez+/nhf2LT
f8ESvEEhO5ODBVS3vpqg7mJ8SbxppuvHdSl3lhv917tilnrS61n+3nB9pKMe
i5q8sb4kVxkKgCTo66utojICzj4Ib17BiYgh2kPtv8QjDWLD7Vqbsudnu5U7
Fu4EPSmAZ2qkWxhLACNsr2NB+u4uN12djBGOBnBHfSRI39XFID7MoaMxdW6U
vjjFlG5Uy7cb5dut3RJ6kI8tTHGOkxHCyRCuOJTAkxrnPCDJnB7O2wGeLkku
mxZCIRN4jJioUBgMZIByNvLFW2Sn46vL44YGaDNTxRUlMb54S5ijYag/SFwD
AE+wj2VBlttQT87oUG5VOYngZx3o41jCTxkcEM7O1C8tNizON26sDaoDT3tr
JTEQHBsKaq1JYeR4ujnpIO21MCA9LFgXZXc52vdeRzlpoZss5hKKEqHcPK+W
msSpvsL1AfKcKLwuzbY02qQ9z3FSgFyvRMkasCsloGWe3SLPsSPtpjjJsI/m
UFUR6MxL+B296Dmm4DQLiD1+icVT3LvPCBgQVC/C6VOm/3VBoYs7K/iTnKi3
SH4fujt+hne8lBb+CiP/BTbzFOdAIJkCeM5ySyiT0ys7i+yU03fJtuyTmvrn
WFzlVpnFzwLb9Qh+wOL9D4Nt0yhuXl5ZV9COMkmo4liQyYrXVrXFjT/m8M8A
qTG4Z9i8r733wtfcP/lJCzmyl5EG4HmWI/gZjXWpvIY5NQ0sQt817ygOgHn+
GRae/Q+Vo+WhyUVEOzBj7v65Z7Qh7RgKotT/PFTgMcCj2R2gGrHVrf0HihWR
Djx1Pg54jqmSRuA5qJzDJR9W3XEnPLbmhxwZuzo5aOE59OmhVijv2jGmrUNy
SF1HW3GMc2TvTu3X9tEd41hVP7VL6/gmHy+adasZeNQ63q4OD9VQdWk14NHY
9kN9WFkHzUp4ZFfRGGNzwMKjVnlVOce5iXfrrK4uzS4t1W/zaH849Cv4uq7h
ryg74ctbiklfLl+Qy9ukUpve3v+gMxQPzqdV6R2/WeA5zeb9ilZoQI5Ir4yu
l8TwxdFu5Yl/4BacASxLwO67p4FlJoIzwG7PgtMc5Ra4ysRMp9klwIIdNv/n
DNZvCwv+nJ3616z4V2l5P+Pw/oPF1qJmUFqKNqfostmizZ648TLP4pg7gliT
xjxIG9N1uC6ys4JEcDVEOl6JDHEeGWiSAVmyd4N5FBpYmp/hUdKiCZByTnhC
BMjF/jICoh3ofV9Umz4307kPPLIN+fbU8nSzkBaJdzFEOmgjHXSRjvoK4EGA
DJBgAwRYK9jbtLEqdqiL3FyfMNBHmZupWFtpaG0i+3tYuDjoArQDuQGDGCCc
brgijNLiYQOS7OmRwpmxotlJZm9XXloSGg0zxKHuuiLuICCGCCcjOEQBSPp4
rHF2OkrSkinkRvjhLeEA8DiKazKqiqMJ3ib5maih3qzRwdzq8nCCryXCxdjX
0yqaBOWxw/v7mLPT9ZvrI8D2OztBy3JZWwsAPHHh4NbaZFq2u6uTNspBATy6
WJAuxu5anJ95R1nkygBFzA+N8DBxg2gFut4qJuMnGxPHKolVKbaFvjoU72ui
uLuTDPByscssy3aG5dCT9SDN5aMA0z/Hwz7MSQPBqMFnKcl/Yhb+nln0S0bR
T5jUXzHy3s0kGSLvgG+/5Wf+ZmyUtR0l/M+M/F8z6f+Vl/2brPRfUwpfAjJB
HA6bf57B+4hXxpqaWdvNiQAQj0Aq/aRWATy859nc37DZr3Nof2OR/8TINSoV
MKdnlqQyYENl5Xy/JZWJt7dc+rp/J1SAAWDeOaP49xsAnuLvDngeaeQ5xSn5
KZ1zniNIH5+ekyn5RkmFO4bJb92+80TAsx8ArMl5sTPk7k2jO+PhcVObyhbx
BMBz2OB/YJxXn1ufEniOqZIm4DlU1KP/PFoTVZmPrflXAJ6Gw/dE3bWh0buk
ydWiqsZBb8tBKtDgk1LVVkPHOHCVY1S99/6ekwirzsxP0+RDJWho5lcCniPo
uEfFe8Cj8UehCXg0K+ERXUVxAvbrAM++BtRdV8cDz0GNHe3Vav4yzf3nOxWZ
aqnvulxeL5VaNIl/y2C+yOa+ACTo+YY3IXyOzXm5MNM6DE6OtW2jgCb4yCK+
//vcrDMc7ilO6XOc4p8wmb9lFP4Po/A/GEU/ZVB/xGS8yOI+x1IgUNlpDhCh
8bxy2c4POYIfcQQ/VuATk/EOJdMuxT89y7NVEDTTljhXE9RDwzAjzYOcLnhZ
fRgA+jwrxLyK5p0RY5+T7Mwq8uluY0nXp2TSrR3mAVhGuj35sLeMnVLJi0wg
gVwcLisYI8DHqroqbWZasrugGzCHbcg3xqXLnV0NhX6Y2zD7K3BHLQRIDwHS
R4ANkMDqqmsE77uiqtja8ihigDmJaMOk+HW1kWvLE33xZi6OOnCIAUx5KLDH
FWacEY8a6sifH2OuzvM316sW58trqxIjwyCuyNsA5wD7KiuAx1hxMhSsHRFi
3ViTVMwO98XdhzkYhPrZiWvSWkUpGYkQNtV9uDdzdJBcXRYe6GPmAtKGQfSd
HLUiwx3bWsjzs42bG5NKsN31zbU1K4GHBBHXJBVmumKdr6NA1zEgHVdHXVc7
rQT/B5JS0rQku4TsEYAyRttrYeyvFsQ4jdXHrUiSNiTxS02RowKP4SLnMRpk
hue8Uo1arcMNMGDJmGtwo9d8HrxFTbdN4HrhuATfylhsecx9QfRFTtybjLiz
2QRDL5NA3HVqqBE5D2XPiPk9i35GlRZKibsaArpeoHM/4ZbwJmc29hFdzpVt
f1RXpwCeXzNpxsKC0Oq04MpYt4rMwsHOyc0NZcIsqXxbqvhvUiYLnp78a0X5
C1zeKa5AlTPlSWyYX9/O+a2veVdo7EVG8XsUdlzXwNwO3Ehl6smyvoM9d57e
wqOphAOxB2p/fkULDzCbYPes7k8HPI+L4fnnWnieAHhUi92exsJzqKlq7pLd
Cx3V5xFRuWAOurTUXB6Ps/AckW/VwqOpgMd1m2/PwqOhqF1DzVNaeHbdVY90
aT2VhWdXNAOPBo09zsLzvRGZfE0mL11dN20U/4rNVjxuP6+083xTg7OCnZ5n
c14pzLzlbgcxeT8M9H5N9O08muf7nMwzXM5pbvHPWYz3WJm2JUnO5Un3BAnX
OMlf8LM/FDJeYbN+ylJ8t+RFtuA/mMxX2ZS3BPS/8pmvsqjnmBku3LjAGKjz
g8+CnC5XpbtMlgYMMN2FiSBP63Oo22cxpv8IR+q0CEKGWlMXJ+kKtFicEC5P
N0s35uTA0798x+K/vbU6P9nRJsqNjwA52V+GQ/R9PCxLhInT0+0A8OwEOm9v
StdGp3pL2LkBHogbMIfLMMfrcCXwIJXAg0PeyEiCD/dSJOLMqFB7pIuWt7tx
MTu4ujTWF2/q4qitKBYGHArgMcBCjTLi0MOdRctT/LVF4fJS2fpq3fxsRQk/
xsv9PgzYbFnBPEZwsLHiBRSkQwq2FdckFzNDvbGmMAc9oq9tc23qwiR/uJfc
K0kZG8gdG8qvLAWAxxmkBYXoOYO1o0lgSWve/GzT5sb0bpi2EnhaFcATAIoj
gRur49lFXgSv2ziYDhasjQPputlfTyZYd5RHjrdmCHI9ApA30XZarvbXimKd
JxoT1rpSpupDHlb6z9UFzRXjh4sgfUUO46Wo1Vb/+abgwhQwwvlylLduVxl+
oC2kXRzQLfbtaPGpaSPkioL8yoNRHJ/wAqcGvvOCCNMjJhAqEv7OKXqOLdjf
sQfIsVVyiBN+QOd8xistntoFHqkyBy5DuvmP2uoXmezXC7NxNFJ9qX9XQ3jH
SMnUhjJeF/DoAKuz5mTb9NnJK6Lqn/B4T++o/UaA59tgnv1iX2Tw/sIWBrZ2
DispTxXi9J3KEwDPwQl0TCQ6hBMNNFKUGi0oSqDSjgYtPD6GZ2+yUIsz0RDe
oCzgEcBzIDJBvheBoB7Do6FKahdVi8RQi14AanI0hudguKn62uGnqLl6dND+
60cCz4HIEPlogwgwGqgXoq4Tjfo8eqbqtL0usR+3o64otRn8MR3jeFVrBp6o
Y4Jtjm3yQXl8t9E4d2sCngNdSD2GZ7+fa2r7oXCdfbPbUSU8rqvsRROp5LHA
E6UedKSmyYYdyNQEPBo1dqRXH3hHLhJ9T1YUKsfLebmct7quIxL9ikV/gcM+
zf7GduZRZvnh/Rel4EqQq9H9iw733o0PMg2gE//KJj/L4z7P4fyJmmHPDC+u
D25uD61pDeWKScz25CxJPq624AK/6H9p+a/QybrcTA9Rbkw7mdCcixAmeFAC
mGVh1BQowvQDN7MP6WEWk2WEyVL/dop7oP1F5M2zWNNzITA9YQ6+gubbURs7
2Z+3NFjU25DV3y7cXJvdCQlRzhBbctni5KgoORYBsr3kAtLFu5nxuDEHgEe6
tbU21iUqiiU4uMP0VMCjCwcsPPoYqGFchFOvpEC+1byyUN1QkxwaaOmBNeAz
CbXlcf6e96COWnCIHrAZstLIg4Ua7wLPNH98sKCyNKSqPKK/h1ImjPXGawCe
yBBbcW0ynx7iibkLc1QAj01TTdLKrGBlljMzWjg9WjQzzmqsS46KAKNgN2BO
ei4QrWgSqL0ld2G2aXtzRh14VBYex+a6+J62NGahW1Tw/RSSQ2aUU6S3aV4s
uLsmZlySxSd7+CGNMfZaeLA2PRE+WBU5XBFclmJN9r5an2w5wkBJckEUf+1s
/BcV8SYdTBSPgQ+Jto8LvVedC3lYhputwo7x7GYqHFbbMAsdHg87/Tvb/Yaa
cSstSFkrbLTRPaY0/D02+QX2fspRFfCoM4/gBwz2F8LykpnZDWUnBbZDkssp
WxvvVVX8nE4/GxdmjTWLdTdoYYWszfcCoAPkhAeidZek0sq1FbPasv9k0Z4F
9if8hsHjCYyf3xLtlJ4CUnKUvMAW/JXBc23vGd6Wbir3F1Td4u9UngR45Op2
b8U4fGheOxzNqzbzKr+qYZVW1D5RaLLw7H8FSxXtWWaeGHjkBzwOUZo551CV
1N7E0hr253R1p4kG+8D+Gi6aaGz0gKI0Lb051sJDVa1I2p+qHg08B7UUJdqJ
mDpSyPH61NSE0QPvAJY6VYGATmgHr7sX0H5sxzhO1ccFvu5d98mb/NhmHnEX
HtGPRuCRq3UhrDoqYNXeOdL2UQD1H9W1nmKV1uGf1eOA52DT1Pahoo4q3Yga
LTzHdIwjvVrNn6jQz6PtbN+dSJUL1WdlsryFhas1ZT/hMM4cnSm4ymSL3Kd+
gD0N7KjD+zWd9l567Me+sIsYC+MY98vszH/nsM4Aa89Z72VHQULs6ZG3xGSL
QS6khwkaq8DOiAMlDWGxZRFgHsmRQYxlB9ZUEEZbiGOdpPoSz5SQm5mEm4ke
RmjTD/Hm56hEi8lywkpD+FgFMRapi7z5AfbeRbcHV/AOWmjrS0FwA0YsZLgy
QswOEFJC1+YHlau19pq+trgwxKSSnBy1QHbX3bCmXG70IeDZXp942MErTPXw
wRpDHb5UAA8MpAsD9sbRx0KN4sKc6ioSh/qZi3OVDwcZaYkunq76fEZgXXl8
oKcZVEFHB4DHKDMePdZL31gsGxsupOSjEmJta6tiSgWRXu6mgBXoMPDYiWtT
+PRgD/QdBfCE+iuAJ3F2jD4xnDcxRF6a5W6t1U5NCCtK48OCHeDOui6Qa9Ek
h/aW7MW5RunWrBrwAKu0woIUwOPQIU5cX+QNdKU2VIWO9efNjNDba2OaS0PG
OzKWRpmS2qS8RFSIu4kvTJeThpIIgiRcL168RQL605o0m9nqoLGywPIk+2TM
5QToJ8WRd9oEHqw8lB/0Sz+rD8l4rfZMqzEuaL4GtiVxk7VjFYe8DStvgsmb
nLbqQB0Cl0CG/xvAmizuGbZAQcJnWDxl4JZQLSfXDvCwLpVVlMzO7QCPMnZc
Xri+9n5F6W+KyO8FummbXIFa6NTxKesrS8BdAnYTB7YZ7JDJkf19v2czn6Mz
Tn1z3P7PBp6SZ7jlpzgVz7OEv+cUuzZ3dG5sK+OTlaZK2XfixDqREzmRE/nX
F2DtkgzINzQmk2XNTH1UVf4inaFcxrszwgueZ7N/waL8iUt9lUP5JZPyIov1
CMu/4osvspi/YFF/xSz6N0bRvzMK/8bI1ivJvStIvVwY8/eMqP8uyPklh/s8
p0TxuPoSm/NuWow+yBB9+81gm/cSYOcjQe/l4L+oib05yABLhPD25oDaak9O
ulU85tNi0s2eIogkzzHK6RzS+HWUyYfIu5+4m53PD7g3Xha00hQxVROeH2CG
vfMxxuRzxL2LMLMLULML6PsXolA3JCy/dj6hjhspWx1QTp7bqtiQze3tuZ7u
ytAQqIOtFhZtwuVEzwDAs6UCnm3Z5nR/CyuaYI91vg61/1Jl4dFDgPWREH2s
i4E39lYiCSyqiO1uy06Ld/J2MxAogKcsLhCw8OwAj4ESeG5gXIzT4tDj/WzZ
ZsPWZt3DocKqcmJjXWxlaVSQryXS2VAdeBRYpQCe5rpUHj0Ej7oNWHj8bJqq
E2YeUkf7s7tbknraMmYni9dX6ydGBTkZ7ggXPRfIdQXwSFpyl+bEAPDI9nJp
KYCnPJTgmECyU3xxc5kvXRduLHAXJuhL09z1ac58P3lxmCJdrtxerZ97yOfl
exPdDHkZqKGa6KmWxL4yQmMB4mEZYb09RTqQt9WfP1kdIUq3a8m2mq3CS+jw
OPRV97vvBJi/yyLo97NcFhu9tjv8F6oQkwLQYhlkoxIsEzmtVNjXsp1caQF/
oec+z+K9xOT8hkH9C7PwT8zC/2ZQfs6gvcRgPsfinAYyp/NfojGvl1eWzc2v
q8XwsNeXv6wS/i81+y+hHjou5hmJkbOjY4o5X9F7N2WydZl8Ri5PXFx6t6Ly
JQb7DIN76vhlgN/m8e1YeLglL7CE/0vn2bVIWta214DsaLIt+QnwnMiJnMiJ
PIXI1Hbvn5bJoicm3uDxFLPPs8oFU89zuL9lkg1LM8JFaUHVCfeFKa+zc5V7
FWow9Simqh+y6H9nptwVJoBK4+5wIm/QiDhOYLEktlQSFVRF+oyT8hKfd5pX
foZTrgCeH3C4f81J/xxtb2HyGcT4XZj+axiDP7vdeDXO/u2eTPMppqVcjN4Q
uzammXre+r33zVcpHlfaMh0SoF+gb76DuPUJ8s5nuHuf5XibjBYTZiuDxoQB
5YnOBNtL6DufoO5dQJp/ibC8grH8MhJr3M4JbGD4MjPdxvuEa8vDwI588r14
2M21tZmaarorxhKNNGWzo6an24DFWbLd4Ga5dHGkpzQ9GhGEv4OBXEM4XEOB
dFFgPQRIV3EgwXowBy2si15RFq5TnJ6Z6OyHu1HMJKgBj74CdaDAQi1DpJNR
sK8thxLS1pQ9McpbmBUM9mZ3tSX3dmRzGcEEb2uYowECAB4jYGEXWAk8tQrg
Ibqj7rg46Ab7WDdWJU6P0Ie7szlF7jHEB4VZuOa65O723PQkJMxJ2xl0LTrC
sbOtcHmubWt9Ri5VZUuXbw32ibJTcPnp8M7GuJ7m+L625NGurGqWrzDfta8+
tqsmporh31AaPdRFWRwvruMSozxvCbLQE00pi93krRHa9kBhNzeoMgXZVOgz
XBWzKI5fEhGX6r3XGr1GBMi6TAdBzAN6yN1cT50M98usUMNeqnN71gOuz+dN
MdozbPPNWod1EaijDhtcSnyHnfsSsHCv6DIzzasqLaQ6AVkafVOQ+BEn7VVW
9i+ZhT9iUn9eWGBUVlY7B1h4pKr7VL0+b9JY/jKX9mpGIig/rWugW7qxuQM8
GzLZrFwuXFm90dL2b1z+syzeGRbQe/9JwPNNrOQCgrqLd0O7uYJn2Zz/LqJZ
VNbVrKyvy3a23JFLd0J3ToDnRE7kRE7kaUSm2oS5Tyr1HRp6XSB4iSt4jif8
MZt1tiiRWBbV20gYbiHQGmJuCtKe53AODuwC5cF/js35HTXLjh3Mbgpr6wgt
qfNPKYKmJ5p1cCEzNajaKk87bsTPOLQz3JJnOaXPcQU/5nL+QM1/NzpIy93e
EmqId7kah7hEsjub7vJ+b879OZ6tvNVV2u45wYflu18IvvcqDX+hO8cuDXER
Y/QG4tbHyDsXXE0+y8TfHeEGTvB8x7l+XQWeCQg99K330aafocy/RFpeRVt9
GeFm3MILrGf6JBMts+JgQlb0w4EaGZA9flvV9K2F+VEGNdXbE8RkRE5Ntsqk
a6q0m4on6JXN1b6pQWGNIJLoYYK0u4IF6bg663uibgV4mLsj7iDBBu4I46JM
XJc4nZwCC8AbFjMD68vjCF5myhgeAyXwGCoOBfMgIIYYmJG/x72CbPe+juzp
UcrcJG19uWRihJsWh3Wx04GDbsDBN5TAo0MKBlxaXFoIDnUX6WycEosekBQt
TvInBik8ircP5oari3ZGPLSlPoVJ8Sf4WbqhjeOinXo6aMvzHRsrU8pc8TsN
3FxfHRroonc1JXU3xuXG26WFW4i4QeRox1BXvUqKTxU9gIi75eWik0Z0aCuJ
Li/0ifG8XZbr3sYlCtPRTfSAkepEZgzMz+6qz4OLud53JYWu46U+czXe0+W4
EQFmpjZwqyNupSmyJNYmwOoD3M2/Un1vVEWZJTm+JfD/fIp9f0tkJ20Bz7bj
8upCL/Jyfs4VvELJscgJZBT7dom825p9+W1hCU0xrrVxd8uTP+WnvE1JtCtn
tM5PbamMcQqpWZ68W1/y/zisL4pL80aGF7bWgQXZwGJ02bpcLt6WOvf0/o+g
5HkW/8xuYq9/HvBw1X4d3Cfmn92Va4oXgmd4xc/whMqj5DlgHwbGndJSwfTs
kmx3k50TzDmREzmRE/masiqXd0ml3kPDrwrLX+IW/zuL/VFyqIuvGZ2o1Z1n
XsPH27JiXuCy9lbZqIAH8ES8yGK9kZuAjQYJM6wGWA6TQlhF0j1vy79FQ94t
JV4R0Zzc6X5/Yab/J5v670zafzPzzpeQLatyzXiJZvnBmEw3DsdrSOjWRrZu
SjKe5tlLxSh5t7u8A79e5zpYaFsdrtMUrT+QY0V2vYQ2+BPc6Czyzuduphcy
8CYPOYRJjs8Ey7MrD52MvIY3PRvoeM3V4guUxSWM1cUQjF5rSfBIS3IJzTM+
9EGQtyktL2hjeVBl5NmR7YnxfkpRIpsVBwDPthrwyFe31gaWpmoG2vOSiLZI
2y/cINpEb3NWYVBVSWoCCYmCGOERtwsz3LrFaQUZyEAPo2KGZuBRMs8NKFjf
yf5qkI9Za33i6hxPtlkml9VOPGSnx6Oh9towR2ABOx5jSvB5kJGIbBWls6nB
OLRJRLBLW2PR1lqzbL1uc6niYR+FVeBLcL+bHu0y0FE0PsJvFedxmEQeO2Sw
j700J1lfmZRtb6nat7m1Mbo0U70wyhjrymRlw8kxdiJOcG4UKNTNsJLiV1ro
F4AyQjy4SEAaVVECS8ieMZ53yvO8hJk4P9DlEKhWWSaOEQMLBGuj7nwQA9Oq
S3UWRpnWJJu3kiFM4i1ayM2mPJeJMv/SePtA6/Ouxm8UeBqVR1gkgt4vCbm+
WOooa3aSt0Km66G5xV5arNTfc+jv5yXc9rYIxFymBV+tTb/ZynXorHNrbwuo
6AjNbQ7zLyfGiXKGFkZ38kooGyGtnO03qaB9zGUH9Q0Pbm4pN80GDiBVilwe
MDn1WmXVc2zeKeUm3o/NXfL9tvAIFMxzigekkDjDEfySydSuKhfMziwDmwx9
90uyTuRETuRE/o+KTL4pk3dtS516B17mC3/N4p6Nj7h073P0nVfzceeEVKwl
I/oFzlHgAXYsfInFficjwcJOy/femxmojzszrKriH6Dvvw++8ecIx7cr8h0S
GW6osii78qSb/ARTenBMXXhDT1RpS0h6sWdcpn0tBzlb7bZa5zYtAK3VI+Q9
eHmvu6wDu9mAXKt02SqDTRRYdWVbUQP0whw/DLC9gDH51O3ehQz3uwrgmeJ6
TbDd+qkIHskkn3CLk+DkZX8J8+ACxurzILRueyVJtlSytVw20pPHLsRnJsAn
h6q3NuaVDpNd2dxcGx5ub2ygT04cBB7Zysy4WFyR2lIRl0S0QtlfCHS7KWQR
F2brFmYb6fnBSLAhHnErPw3bLU4tykIF4m8UMwLqy2N3gQd8AHiUzGMABWmF
BjxorU8a7cvr60ibHqcP9RSkxUBhDlpwkL4H5l5+ll9TfXZnW95IP5NDI3q4
mqUlevRIOEvz9dsbddurFRtLZWN9FF6BDy3TvUucszRXvb3ZvLJcPfaQOTEm
XJhtXV8Zl0k3dmdH2dbCTM9gJ3OsJ29pgjE+QB6UpD2UZOXHOxFxhhU0fx7Z
2xdxA21zOdT1Tg09WJCDj/K4U5bnw03Dedl/6evwRVkmWsIN5Ke4ZPjepgTf
F2XAcj2u8SNuN5OhyZhr+LtvRIDOVSfaM4lmPuYfYI3+XuRlXBZmHm37fjry
nCjZeJT9YLHMvosPjmPiDalR2tw0OCsC43sHY/427tarfvf/HOPyblHAF9Up
xp0M65EqZFuNV2t71uLyQ3UibV7o9KzN822pal1Z2nN1Kf5fkMuLFhc/qqt+
gcd7BnC28gFn0D+Hdr4m8Kh+Uztp0LnFz3H5P2FyLhWXkCfHV4CF90pP1olt
50RO5ERO5BsRZezKukxevyWFd/W+zi9+IzPxfbiJmdVHeMSlEHrgRXbKc2ou
rTNs/g9YnB+x2D9kcn7KoJ/NioXAjUKt/xHh8A4nxSExy+22u6URSBsN/5RT
YF9dhunoIIglQfxq/6Qs+6IM8x6Ow3QlvIMBTsSeU0ARy/9aR9aDcpJObbJx
H9durgG12YqVS9yljeglPqS30KEqz1GYbdNQ4MiPtXE3P+9279NU3K0RbuBU
sdc4HzNe4tpf7CpmoEUMT1/IlxjLzzEPLno7aVNTkS01McN9eTMPi5qrwujZ
6B5x4dRwi2xrRb7vH5BubS1PT3eOj7dtba7sA490eairjEn2a69J5ObhE4nW
3CK/+elyubxzfraaSg5Agm+4w2+RU9HdzcmUHFSgBwA8deWxgV73NAGP4rUB
FKwdHmjVUpskKielRtuWMH3bRUlJJAjcQQsJMYgIAovrcteXm2TbrUtzVWwq
EYc28cE/SIpG8WhBfZKsuTHq1EDu7GDRZE9RKT0oMw7GKvJtbkgeG6FNjjOn
JoSLcy0bq2NKx5yS6BTAM9033M0d7MgZ6ycvz3GlayXr0+xKpm9OnGO9gMjK
dveE6qNtrhBd71bTg7mZOBL+NgA8qW5edpf8HC9W5aCWO5LW+9ImRaRetnd7
AUYYbd7FwMyIwpuLXDPcb4TaniuOeMCLsAy2P+9+WwE8NypJ5nGgDz1u/SHA
7NVs1FlR8m0mDYGl+NkVBidVxohbwsRcqDDOmOxxIRpy1vv+3zC3/+hx/7UI
p7N5vl8KEu931iSvLk2o9cutsaWuqqHSzqXRVSCj6O6kvy2TN66vW7eK/x2w
OnKBg6s4vvn1Wd8q8Ki2VhbuLs8HfFslZ3jCn7C473NLk/pHJqSA5243eYQ6
pp/IiZzIiZzIV5adYF2pfEMmb9vadmhrfaMo59U4wgcE2IUg2KeMtF+xC09z
BTvD8hkO998YlDcY2V8KCz5hZ71DTbxVGJyfC5UU2FemmmbQPU2LIl7LiT8X
74uMtq4QImebXeXtqO0Gp2meA51w3even1JhH4iib7ZnOUS6fA7SednT9O9M
ws1YyEe+Zn+NgX1ID9FpzLw3ynFcLIEOUB2risBlPHR/o8dKR0AnG+tjfc7D
4hw11GpOFLUsJs7W+YyUu1fk2NHiLWrp+ETfO4FO2u5Wl5H3v3BzuBaANciI
tm2tJHbXR/Q0xo1104YkxWvzQ3LZOpBSXDV/rq/PzMwMbKwvqwPPYGcJK99v
oo8yOUDrqE8d6aZJN5vl0paZseL8dA8U2MAdbpybguxSAE8uKtDTUMAKqK2I
9fcydXa4tuPSgqkBD7AP4S7wJFfxQwl4o7xkaEtVXFKEAni0kU6GfvgHmcnu
pbyovs7CsUEOrSDQFXkb4WSIgOh5YowY+e5DXZlDktTx7uzpfiq/0N8drod2
vk4KsaipCHs4VDg5xl+ab91cm5BJ13fnRtnm1tr4ynzTWD+1rSZSVBzYVR85
3Zc90Zcz3JU10ZtXyw+NDniAd9IJcb1VSQtkpqEjPW5WFHjVUvwSve8SoVcy
/Iwrs516y3wn68OmKom9DA9RpvPDyiDpeL58ktJfEsQIuVebAm6nuBYnOOb5
3qyOt+mnIKrj7+XgL0Y5vhVh81pB+C2fQi/DPKJjPJqS6tDDsJ2pAK3Uu8xV
QnqZdrRoEzfQZza333S48Ue40csEp/PlTNLSwvhuhwRka3lpaGmpb3t7Rb2r
TkqlvoP9fyzmPstmKZOK8gDg4f2LAc9pNnAog46UMTwc/imu4EU2/y1OSXDX
8OSWdFtp2FHRjuwEeE7kRE7kRL4B2fXjAM+Tq3JZ+eryg/rqVwrzflNU+Kv8
vJ8ylbv0cIFwylO84p+yi84zEsMrItltcXm1YUSWZ0Sus6TUdaPZc6HePUNI
uEiN/w964ScFcTEUt4ciT2krTlrjtMyz7qXYZQTetDZ8A3rrrUSvm3kFfpAA
0HU73XsO14lB1j5OVxBGb2CMX8fd+luw5dsFbp93Z1k15zmWFjq3V3kudwZs
9xAHhN4h4Itx2Bsd7ICt/kz5aPpmX9xAuS8t1qKGhpvqzeqpjSrJwobCbyDN
LiIfXIY/uOCP0Kpn+Y5LUjZnudsr1UsTVXMP6zdWxoA1WbsPzTKpdGNjY3l7
J/pFqQrZ9vLYYFV9Zdz6UunSXEmdMIpN9m2tSR3vpz+U5OcmoDBgXXfYjexE
eEdTUkE2wtfDQMAJbBWnx5AcMQgDpIshzOmG0rCzcyj4Rw8G0goLsGypSarm
R4R43KGkotqrE1NIzjAHHWW4sgEcrIdDGmaloNuasmgFAVjELcX7CIiuO0qf
kus61Jk9JMkY6cie7KeVMkO8McZw0JVAr1vlAsLoYN7kKGdpvm17c06545Cy
GbI16cZD6WanbFP8sCs/NxaUHv6gvSJ8aZy+vVouX69ZnBQ0V8XHESxD3AzL
irwoiZBoL8M6usdEU0JfFYmfBguCXPS2/jAFp1ed5jLMC+imeRUFm1VmoRb6
yNJF/vZY4XRt6FQ1YbU9YX0gd74rc1GStCWJ2RAHTFehe1n2dRl3BQVgDD3g
el6IHdEuxu0KGX+OGfRFTYpRN916qgpbLvCCRzgYwm84O12Icb2UEXSnRpi0
tDimZsyQbm4sSbdW97ZRUjRsUS4vmJn5pKLixQPJ1oEAmEegyGMzVX0TzPN0
5p3TbIEy9AgIhDvDEZxh815gsP9axPSX9PdvSrdV2ympHydyIidyIifyTYjy
IVI5Xa7LZCXz87qVlT9kCc5wSoFEn9ziUwDwlJzhC37HyLLI8mxguszVQDfF
2B4GKNX9s1Tc+YpYw0EaOJflo0dN+B214GJaiJ/fzdIoo37y/TmaTV+BHZWK
gye6fYm2vuZsYhnuepeV+zY5+5XE+LciAoyjvW2hNyE3P0Abv4s2etvV8PWI
B283xpo1pdtRQ28zI+/WZVr18Vw7GPgo+PU0z7vceKfKXERvpf98e/TD2rCS
TFgrnzDVk7H+MH+0PjbD/z7S7DO45WXEg0sEhH4jK6C/LkpcFtLblj47zBrt
ZE6PipX7+G5p1gQAfisrSx1zsyVyWd3MBDc/Fe3upB3qfpeTjeuuTSLHwVzB
2u5Q/cwEWG97Vk15BDkbLW5MnZkpbRZn0SmE8BAwwsVo15MFHPowiC4MdC3U
37y5JrGaHxmCN6GloDuqk1JILi4O2gqwgTvdgEP04RCd6HDHxtoUeqECeIxh
QN4uHTzKgJ6HG+khP+zOnR6irU6X1pXE+OHuKIAnyPtOtTBofDB3apS1siBR
cNpO/ZV5wZbHh+ub67IGuqgjHUV5MdB4v/v17CBxcVgtN6RbnD0zyh3tyc+N
ByUG3xMXB7MzoWnBd1r53ut96bKxguGaqGSPm26m/wi0+Ywf6TDCD24r9IjD
GJCwxowUlEhAfCiOX2iJXm6NHqwM6qgKG+vK2hijzouju2iQXrbDbD1qpclt
rN4ruZQIYQSlszzFdFhdmmWB97Vwu/ci7M/SibeTi3xN88OvJHqHZKK6i3EP
qwjjndSN1YfKhYMapnfFWytyedXG+s3Ghp+yi59hlz/DKX9coLJwx35yiq2y
qLC/+VS5X+HYcWYBu3py+ae4vDMc/o/YvFcYHFydeHh9WyqTn0TtnMiJnMiJ
fEuyY9/Z2XcPeI6Wychzsx/W1P2IzVfQzrNc4WluySlu6bNcwavULAM/u3Cn
d8rjLq9UOQ1TbFKgZzGGv/W9+/vK6LsMhheCFWksyLJI9QZbf+h565V0p/da
M21Yha5gRsyH1Kw/5mW/khL/p9yM/2Jzfsgp+SG39NcM5rtZCTdRlo53zqFv
vou++ZbbzddJ1m81xZk2J1mEPngLa/RHb7M3SU6fJ7vqB9h8hr9/DmPyAd7i
ozRfw5HaiLnOLFYcOAx+rTDMXMLy6uMHkYOsEPfOq4BHT8wJbBUSIr0MkoJM
2ssjB5qyZx7WSjenZdLVY5Sh0MPKxlrPzKRweb548iG9MAONg1x1B1/JIjl0
VMXnxSNcIbruMMPsJPTkCGdlsWq4n97bVbS0WLu92TI3XcGgELHI2zAnA3Xg
gQLAc18BPFWHgMd+B3gM4RADBEQ3JgLUWJdCK/DfAx53lD6V7KYAnulh6sZC
mWy1vr4s3g9nAgcKvFdXFjIxmD05Ql+Zl8i3V1Vr0hUstyKuZ4T7WeXEwVpK
48jR0GSCdR0rJC8W6u2iG4q/y87BNZWGc8iYWkHQwhh9sC25SeD3UETa6Etb
60oZKieWZ8Cz/U3SPI2qUl3GS0PbKR6x2Bsos08Q5ue9na5wU5xa6O4VmU7J
PjeIqGsZhHttTN/WAmwC/BOSw+tFvhdqEox7KRAG0yOIjClmY2dEXhvtIZIi
WBjoY2fdV/xdLuNyArToaRczwnwSYdU59r0M5HRbztbq8FHg2XU9yuWdMil2
aPB/uYLTzNJnONVK4Cl5IuDZZ57vBfAod9opOcUDjtPc4h+wBS8z+TaNrW2r
G9sntHMiJ3IiJ/Iti5J4gA37d0bcCaksbnr647LSH3H4L3CFLyjTlyv458+U
bB1v2wCbv9QkXVmvBy9XQVqzbtMDvkhHfVCRYFbORAlqAoRt0Yxiz8gAQ4jp
3zF2H6fkujtTY15nUn7GBop6Ecg9ITzNVsxZZc9wS59nc36fl37FE2J6/0vw
rbOI22963/97vsdnIwyHfopdttv5EOs3wuz/gb/7N5TRa5g7Z5G3P0Lc+Rhl
8jEJpd9VQhpvJ1MiIfDbZz0tz9HDrPu5REqoI+Lep4gHl1HWl4KQ2o0svzYh
MQSjQ0Beq2f6DTSkTvby5sbEc9MDaju+7KtBmW9raWK4jkn2KWH6DXdlt9bG
UtNRKWHWjAwFpSTkJaBwzjdwUOPoEFBteVJ/N6O2LDE71ZXDCJK05Az1MRiU
IDe0ZuBpeRzwxEaAmgDg8dsBHhhEB4fUo+Ri+iTpHY1JfZLcmYe8Ci7Jx/Uu
EqwVQbjfWEkcH8wc7M4dHahcX55R21FytaWBE+RhHh9sJ+JFZZOcU4LtGnik
vDi4m+NVqMX5KF/TKqZ/LTewR5y8NieQLZesj1KWutI2etIXmmPGqkLmm2Om
mqP6KwKGywMXm+OmRNGCFGiAkxb8/nlX68/psaC6AteswDte9p8i7v0Dfe/9
ohDzphx4Dv5ygPkfPe++7Gv253x/o5x0pLu/aTD6IpOoNch1bmVCo/31HBw/
f+BlqZMXe5ZZ8EEs4TZIx8P6vXjURTEvbG1xUFl52YEbonTuzMvlsTOz71TU
vMAseYZdcYpTeYpdppac4jhbivDUvktLoAqb2TOz/POAR0E7/NLTvLIfcEp+
S+dbVzeWLi4vA1sM7S3L/9f1ZY0eTsP0DZz5jcgxl1PlYDomf/q/kDwuL/mJ
fHX5jvvqP1sOJMt7sk8P5SP7PotymN2WybaVe/UqZEsqHZFuR48MnS0p/Q2T
+QcW9f1i+ru8ovOUOEicU22a8Ua9vbwVvN3sLGtFr4rQw1yIhAYWpJm2MW3m
a2FzIiyNAruHv6ntY3eDkvw3BvVnHOGP2YKXWNznWYJnWWWnOZWnuRWnueXP
c3j/Sc17LybwItbG2EHHyuo8AfGZpMhmuxW31oAcYluJc+62FdgIYm4nuV3H
m3+EuP0x/M45lMl5H7srqb4PaDHwRE9z9L1znpYXaUTHQV4UNQyCMvscCQDP
FwTE9VqaV6sgNASlF4zUrqN5ilj+jExcQ3lGexNvZXnyCPMo92KULvRLioke
9yP97o105cjXq9fmSobas7prY3vqkgqS0DgXQ1dnI1cXI3/8/dgwp7AAO4yL
nhtCLyXOubUhjUsP8nK7u5NOS5OFhxSCv0tL3QUeqMMe8NzYAx46ADxGMCcA
eNyQugrgaauPzU2BxhKtijJxabEIPPIWCqITGWTeVEUcH8joECc31xXNTAwp
67+tPDbaxcXhvrZpJGcRPzotFJwSYt9UHJ0fj8A5XkVafZ5IsKxlE6gp0PQI
a2E+rr8udkaSttCevNmTsdAUPVZBWGqPkU1ky6fJ0tFs6ShZPl40WBMd63EX
fu+8u80lVrzzcGVUKzMgEmOIMv3Y1eyjQoJpH9N1gOlSn26a46flavW+v48p
McUVgjaE3P5bHPyjLiZ4rNGrosQNn4W5lEx4pTD3D3TKB9EEPVsdc8M3oBYf
c6gRSwujqs0hVXdDeWzI5TWrS/oNTT9RQA5LgToVp9llpw9k4zrWeaR6IVAe
KrMP4N7SDDxPBUJflZqU2wzyhWd4Jf/JEBiVN5ZNLSxLgScOmfKXKNsFnu+7
rWc/ueeBZJePnhqe/MxvXL4vwKMhu+g3I08NPKNU2n5+6/27+X9WvkYbT4Dn
cZ/+CwGPfPc5WhnKoxh1t6XSrXX59qB0O3Ko7y63yEWYkdpeEFefGM73Lxa4
bTRh5C3Q9WrHzpxbHXn3JoROyzXYfhooxfVcPOytxkTtuTIXtsD9Xq7va7kJ
v2Uzf8lm/pGV90Vx7rXizPfYWS8zCn5BZ/+Yxf8Zi/sys/Acl3yVnvJ5eugF
kru+tz3CzYgVfaeL+mBNBJNLsPIOnKzbZ0Xs3UKBxmGv+tl9luR5J8XLJAhy
3c3iU5zVBU/7LxGmH+PMPy8KBvVzYihEJ6zZRazVNdSDLwJg16uLPFv5YcEI
3WD4NRENX1mAyYywFlckVQmSxSKuVLpycMmvCng6AOAJwt2q4IT0S8gL4/z1
Se58N3lAlFSYjMI562Od9JEgHajDdaj9NbijNgKkgwJfjyXadDSkKqgmkQTB
QA3gALHsMI+eAniIAfdbahNqBGFEz9tUAHiSFcADc9BGQBS0YwQH/tWLJYHE
9cn0Qj9XpAJ49OBKCw8tF9taGxsfbgN3vIRx1naD3UA7A3RECrJorCJODGZK
GpNEleSpsYH9FXfyzbamknA/+6xoqIJz0kLtUom2zSUA8Lg7XMNaf5FBtGtk
E9OJthjrz90dLlLjQEM1kYttSSttCbP1EWMVIV1c73a+70hD5OpApnyyQD5F
HaqPj/UwRZh+5mlzmRsPHa2M7RdGJeBNUabncPc+Kgq885CD2WrwWBe7V7DR
ToEWd0hwaLanB/G+v9O5TPzlxlzr8WrsWLMvtTbMmp/0Li3jKivdISfAydfM
HHL5totBMit1enH6qHlHCmwSteXe1/WH4tLnWBWn2FU7th0V8Dw5nOwFNu8G
9hzHKk8LPE/JPALlxkG8Z7n8nzI52sWVRRPzS4rf3C7k7CngXwB41OT/AvA8
ZpD/5uT7CTwn8kg5AZ7HffqvBTxKke2t11IwD7Bv7/bE1iq/u55Tnjgijpxp
9B8uQXYVWA7RHyxVwCYodtmIT0ItXy90+7Qnw6I92y7Y5VyAzd870m9uNaC7
xAEIIekVdu4PeexXGGnWvOCc5gh2S0hcbQiyNFKPk/IxK+McPRHMi0qqT4iv
i3Mti7FkR5tn+FgiDd0s32aF6S7XY+SdHvJOd2mX56oYP1Xt2VTgUpUDHW9O
GG9KEFG9coiWWaFWRfHgWK9bIVAtcoBVD4tUGATGmV3CWWmhLC75Q7Uq8z3a
eGEhCN0g2OUGuruY5VGah+oWJfKLAvmsJGWGcXUfyk4AzPJQb2WEjzXc5gtv
mEFCoHV5vvdkS9pse/qwKJGSgsC5aGOcdZBgLQToOgKk+Fcb4aiDBmklEG37
xWkzg5TGithIgg3a2QC+Czy6LuCrxACz5prYOmFImPdNahqqoyYlleQCt9eG
g27AQMZwsDECoh8XqQCeJHqhjxtaATy6CIg2HqlHz3Vrr09MiHCAOV6Gg7Rg
IB04WB8G1o0IsmiqDp0czpI0JYsqlMCzc/eUc2VbU1mYj31mtIu4JDI11CqV
aNlUHJEXC8U7XHe3vZwXDm7hhOeEgnE2V12tvsgPtxuqiFhsjp+pD59riJoV
xTIj7cKg1/OJliPV4fKxfPkMvbcqJtLNBHXvgq/t1eIEZH0OPo9g7Wd/DW1y
3sPsY2aQyTgbtVWLWahB5gu8DHMJ53PD3AXEknKP8gzLTPeLyeiPaIFftGab
iAXouNJQO3pIVEVkrZhUUukfWOh2IwpFLKeNL8/LDzlyZPJZmTRqYvSD6qqf
8ADD4DNsIHRnZ2vlr7y7sgp4hF9/n+QnBp6dvTr5p4EDWFP/Mxr905KynOHR
GeUGg5p/jv9sEUVh90Y2xdMxSTWgjVKxwOudcW+MhrXYFeXjs3JqaCCpvaOS
Jz1TtPuWBUl9jnlMZZQvdr8XJdq7Iq1hpzRFUepz1igNo7pGFIl0cKBWFL5T
o8OjOtBeVd0wCrRQFYLZwwy1YvfKPNDA/RPUviXfUcXR+ivQSKR8c0c5Ghqo
Vr4FhkTaBR4RSe0EUdSeGveuDryjaqZKz8q7uadMlW53rF57X3ykTvY/BZqz
U76ytKMnHOgMuw08cLPUTthry2P1/0QnHK02Sd3MpSbq3e8A8BzpIQdu335P
PtrGBvXOpnabjjZWvavsN0HzT+NR8ojf155aNKv6yJ3SeCP2lHAAeJ6+nv88
ke0I8Gy9vS3fXt5YaK7O48ZYd+bYjBXaM3CfpDq+Joo07iZDYpBXnA3+7Hnr
L4LQe8V5rihfEx/MtfZMs3G+3XgdLkYY9AEj7g+stHv8cF6Tz1S3x3InZqrT
vbMjgNVMSqiLjCoLqGzwnZL4TbZ7dbQHFItDisp8E2Mto1AX+FG3e+mO83XY
9WbcUj16uRG/3R09WxvaSsOPiZOWe3PnJGk9FaGTHakro4VD4vjiNGhe4L0e
FpEeCva0uIS1uIwwv+gNuSrIRLXxiUS0TiD8Uh3NTczxpCXaMTNgpUziYF+V
XLZwMEpWBixVk60sTHdUcuKTw1wIWFOc/fV4H7P+yuh5ScaIKIGWhsS5XMc6
X0eBryFBwIFw1EI6amNAWklEm0FxyuoEc2qQXpjhjnVRZsgCDj0F8AT7mTZW
RdUVB4V7G1HTkZ11qakkZ7j9dbijgQJ4YKCbCjqKjwQ1ixIZRd44tBFcATxO
e8CTlBjhCHW4AgVpQUG6UJA+FKQTSbRqrouYHMmWiHeAZ1CuRgutjRVEL/us
aJeWssi0CMuUMHMRPyQ70snd4Tre9kp+OKSZGZoZ5ICzuYa3uUyJBI1URCw0
xUzXhE7XkSZqoskEC7zFuRyCxVhDnHyKJp+mt/KIRIQxyvSiv931siQMiwT2
fvA56u4nWNNPfSzPC0gWExzUUgm0jwcJ5/h8SY87lxseQME3l2HGylEddMfq
VNPiMK3WJKMeJqSIg/PJgOeT4f3lniOt4dT6GAQzOrejbm5jVX4QeDbk8srZ
iXt1ZS/z2D/ilJ5hV+yYd/aCc74Opezv+/c1gOcJLEI7C+f5yoN3mst7lsP9
KZP+EY8XPzI6JpVufOc/8KeQ/UFMRKPSVOOzypKwPyoetNtg9sZGxetDI95j
z1QMlXtfOTBxP7oyiulmb0gHpp6dT4GxWm26p+5dax9I1Nlp5yuk3XKOGEyA
uWO3NOWUtzvUqyBBUazaDLh7if1C9lxmmiw8wPl79d+rkroLRnMDFVVSn7Yw
jwAe9VaLSJgdpalZeHbvpvp3dzR2sF3H60StAgevpX5Dd5WmXo6qS6jfLLV2
7YPuY/T/JCfQjhaleL2rWDUaOWL70tR5FBXe7717d2qvJ2tqo0bg0dRYdQer
qsMc/9M4Vo52v71boKq/ZlWrKeqRN2L/pqv9PJ++nt8HUW1MI5XOj3UzYxDs
QON+snOO2xW43ssxrrrUIl+XcCdD5C1TkK5nJBpZFK2X7G8CNQx58GYe5v3a
FNM0lqcBLdiUG85uJS124aUSF3k7WC5xlnViVrt8Z7oI4+0+y+2u0jaYrM1l
S4JY68QtSzyHSxD0YL1I8PvRkLM0wrW2/AcTZfAtSfB2X1Iv0yvS6UqWl0lZ
CqqNFVicARML/Mc7UxYHc8R0PDngdj8/uI3mRyGBvMDXoebnPSFfstOgbcAq
Ld34QOOe+shRSbqkNra5MuZhH08un1KudT4YJQs4Udblm7NbSwNTww01/IxY
P3BqkENvZdycJGu4IYGdhQn1uR0dYunjegPjdBXheBnpeA3tqOMK1k4JtR0Q
Jy8MFo52kIsy3F2hRghl/lAAeEBXCT4mogpSbXFQmPcNajq8sy4plQRGg7Ww
itPACuAxgoH14qPALQ3J9EJvN5ThDvC4I3VpOa5tdYkJAPBchTpq7wFPTJhN
myhySgk8DZV50xNHgccuK9q5qy6ukuVZzsC3VUZmRkLc7K7hbK7mRziJaEFJ
flZY6ys420uUaMeRmoj55uhpUXgz1bUiC86MhcTjb+cSbUR0n4fi+KWezIpc
nLeDFvzuZwH2WpWprswIB0/LT9Gm5zGm5wn2F2rTHGfL3KZLXVqLnUO4XkaM
iKsxbvYYvWi3i3Xp5rPVHtttwdsNPks8l04aOL8IhQu47+l0tYho0VFKapLQ
hH31fYtTm9LtvSjlHVmSy3kjPW4NAv0Kzss8/g9ZJc8C0TulAPOwhcDxVbFH
9a1vJBPWE5h3ANoRPMMTPMfh/5jF/YDHjxwcGpFKj98f4XsiqvFKOZrtDbyq
0fsY4FF7Fj4SGPO4Mw/MCIfmnUdU5vBEvDvLH3jqVF1uH2mU0nDIwnP8EK3+
2Kv+rZ0CDxWrKkfNwKL6QCPwHPCYqL5LVbMdaWrgwcL3ztEEPIerp/yCBuBR
K3NHe4fVddCdcfDPfYvQXnMOqXe3tF3i2nkHq3ZbNYhGn+NR/T/VCQeqvasu
deuWujlxp2WaXFp7CtfY5zW18TgLz5HGqlVARVCP+mkcK4e73+Hervnqmp1W
x3y629692/eV6vk9EiCQcmu2v16U4y4uwCREWN9y0LIMcLKmJ79XmPy3nIS/
x4b9IyvlNQblb/lpuq7W+Nuv+9/+fS5BP5rpcyvfG5UOq2e6zJTbylogAPC0
QaQtLvNl4J4C8ymh81oDYqsZttXsIu9Ayzsxsjb0chWsOv52mO07+Duv4W7/
KcvjygAPsyEhbfemdjG8vc0/wd75IAphKEjBEFyuEjHXRWyvxd6MruIAXoL9
cEX4Rn/+WFt6pI+Jk/nHHk5X2BkISSWxMNWuRuA3PUidHGSuL4rmxipXFzuA
pT+yNc1rtWRbyg2ZV1YWH3Y2lTRX5E12sBZ6GBPt5KZSUm1JWHd7Vhk/KDXG
EY/UgTt8iQZp4yA6qWH2A03J073kwZbMogwPN9hNhCo4RwE8gT53RBURTRVh
sUF3aRnw9ppYcjI0NdopP8OT4G0DJKQAaydEgTpa0iuEEaEEaze0MdJFF4fQ
pWZj2moVwAOCOlwDgMdRFwbSg+0CT9TUcLakaQd4hlS1B0QJPLYZUZCh1tTl
CerKDGO8N5ccD8PaXVNATm44pI4WlBhojbL9Eu1wkZ7uPNkRv9yfvNKX1Mb3
rKe5jjTEVVG8guFa3g6f0uPsHoqiGxh+cZ5mHrZXQ5x1K9PR/DhQJFLX/cFF
rNlnGX53B8t81zuJK+3eI2Icv8EvrjLEJx2OhV7C3X8zyukczc9AlGQxwUHM
CxBtbDSF7U9KcE+NcK+kp471NayuTW7INoCg3Z2AXdnuUiWZcr+ksdXF9vmH
BePdls2NbwjLfsnk/YDBe5YlOM0W7K40Z2vcdfD7dHB3gKf4NFf4U6bg7yxh
SGdf//b2Du18z3dR3hkwd0atw0zyLQDPvtdGk0n8+MocnjsOD8Lqlzs05h+d
Ana9AEes8Qft/LRD8+nhctTwY6e4vcn0qwCPxgYeoqBHAo+mmU4j8Ow1be+L
B+8I9qmA52gHUHHgkVt8GHiO+Acfrf+nOkET8BxxuR6sjPoN2ncjPgJ4NLXx
WOA52th9tR/22O6XKTp0bzTdqQPd75jI/Eeq+jGfHv6tPfon/L0X2e7+w5uL
i4OVTSUkvyz8uWiPN1Mj/8Is+hmH+TMe7xcs9i8YrH9jM9+mpcKT0DzSLUbg
lfR0R0dG8IUsv7so/WDI2bqEa9tiZ3mni7zdeaMe3JFjkgh+Mwf7WWnUTVG6
WW3yrV6G/Uw1QibxkHb4zNd5tOWDC7z1fMzeDLL5R4G/UVWaY6/Au1fgl+57
MwB8IRpnwEtHEJDXkon3RtqT5POM9RFybxmxKt+ttTistTI+0s8SYnkB56zD
zHYfaM3ob8uYG+P3Sai1pWnTI3VTI+KluSFlovjN40NDd9xbW0B27q0F6crI
5nzX2rR4abJmfaVRLm3dWKjoFqeSU2B+bkYY8HU8VK8gGTnZnT83UDTYkk1R
AA/UGOVkhEPdxqGNoOAvA7xuNVVHTfTn1xYHicvD+1vSmiqiHvbSpkdL8rO8
4RBdGPh6cqzzyAB9ckwgFmWyigIigqzcEVpFGYi22oSEcBAQI+2oAwXpwsH6
cJBObJitpDF2fqKwvyO7VUSbmxpRr/2OhSczymlQnLI4StuY580MFBYkIlwd
tNDWl3MiwF2VcTUsQmqkfWqUbZsodmOBLVuiyecLN8azN8ZyZTO00ebEPJJV
CPwyP9V5oSd7aaCoqzw2PcAyEqVXqQA2hocg0TkQdN3T5kpJputiZ4psPH2z
P2Kl03+uhzDWGdhd7VpDts3y1PU0+wBx452AB+erkiHTVaHDzalt3dy2HtH0
/2fvPcAaS6+78e1rJ46d2MlnJ0/++X+JY2fttb3e3svM7MzQhqlMBYYZeq+q
IED03qvovVcJ9U4VIKrovVeJIkBd91MBJIHY5ra74Tx3BnG55bznfXXP7566
PCsV7qvbYx7mCB6iHQ3gkR1FLm8Bkva9XdT8vEtf7yUm8zcE4i+asP+CwfwC
2/gv2MZ/xDW9TCCpwpI1Fht1QePnFbiIeNxO/a9jzzkNeFSYh0h9CU/9XRM5
oH9ySqhsmCH6TsQlKx9uGtuI4pmm0ZJ/eQvPV2bmz2jh0Vwj7cSz+ov16RkW
Hi2WjhxVXwp4jgwCfxMLzxEzGhhw+kRAz1nqeyFOAJ4zLDzAcg/75EW1RapU
9xoHyl8J8ABs9plrT8elZaPrTj1rzesZ41kurdODXWGzT4ZLfeFX48vocPnp
h/dni/pLJ+J40s+w8Hz36DD1RyaT7qyu9uS0lNzCZn2ILf41ruYnZOLLVPqL
FOqLRMLPiA03cRn1rQnC/pCtDl90a9wtXMYblek3QPdD3T4aqn4iG/IFxqHA
GFTcB1oiutWHXk1yeCfU8s1o248in76b4fVZXaQJu8x6hgLa7Q4+6AxdbALR
Uh/lQa8EWbwRbf8BEWW3xcma701mYaD0Gq9OIrK+wHmMnQbsE4E9rGSzfoaV
mhtuHge7kxPtHAoz97AzgbrdxlTGbK20SvaHJYKpjZXB6fFO/taCXLIHKBuL
S1TdiuQnK55oF/TXFEVR5noDsj2l7gU2AMmseKuHO4ufHihvLA/w9zZNj7Yd
7SmV8DuEW4zVSTS6PDQI8iAxwgFbF0nBx5TmeZXkeAz35MsFLMlBp3CneXmy
rouROtJXMTOOrasIVwIez+t5mT5zU1ixsB+Qcva5zE5qQn6KNbUxcKgzOyfZ
DeRqqgA8YAXg8bwN9byVm+Y+PVouPmjmb7VsrvYKD7jaaT5Dfe1J4W6VKMho
W3YHOryHEDPJyqnK9Al0v+HrZFyd4b05USPepsyPlvS1JC+MVYv5TOCAvLtQ
sjWVK96oBrbR4pWaZXYmoxhMLYSMMlK4o5U7wxXYDJfS8PscjP8sLYKa5x7j
ZhJqb1wcbkctBI9QI9bYscLheGA6HhgLlQ8H7nQFN6U8DXe9GQOyKU9GjrXV
7i13C3YmBSKuVC459l6pEum1IM7hp+NJOW5ypnRATgn2cavLieNjHuwOu1aS
Q3OdJa3sKqXi/xLRLymzn5jKTQlvqAoI9DM87hd4zE+x6L/DEl7AU1WFChmH
PqbDTdurdfrDn2kj058h057HEv8dS/Dp7h/kC8Xyw/IB34FSO0plgcEcxyco
P5+ObDwd+HH0yxkv+GcfqQMz2D26b4dnM6MJa9GN4dEDeHSCUpTvv7oW+LP9
Gl+iT7UDV44+a8I8NLEip51cp+J/EKejffQPUKGPtHdqQmi0gmFsjmN4tKK+
0eoYHq3Z0RqdEghp1JbOiSeVuBYDWp+1Z1YraER/DI8ekeo6dP5aFp4v0tQa
tKw9oV9o4dE/xuPTlfafQ2OXnsHqM8V84VdDL+lZftoXUceWf5Goz/irvknX
H8Pz1fj8VpHa1KHURGKpdHtmk1M7WJLRnePZnP9HauOPyKTnqdSXKMR/xVbd
ykWgcuzH662328GU1uh7mIxXa/KNor2DkGbthY/nSE7CPsgWy03QC5ENhW20
BpIynsKtPgI/+Ah+73343Tf8Hvw+7Mkfsrzeo8ebrjS67FC9xeyQsUbvFM8L
YbYfNCRbL7PT+fNlopWqvcXShSHUeG/qwSYaOFABnvX65YH8pjxwiMc1kO0V
qMstP2+LxEhQd2uDRLgAyDaU8clKB5ZYVVpQelzuRHasYw8HK1MDocMDZFrg
Ry0LpZoSArIdmWBBtMM54HUNdZflpHjUlyEXp7ECPkt+wOIuEDAVoZH+lria
qJ0NqlTYzlsn9LOyqQrg0Zq1MI3Z4zFGegozYm1ikOa5qd4JkY4wbzOI562w
wMeleb4MQtL4YDl3vmFzqmKqDzUzkD3cmZ2V6KoCPDfBHrcgnndgnreTomwZ
5IT5mXr+DksqmQeAPRXbhxEwI4OdqVFetbl+A5T0vIjHRZFPenFx1eneSI+b
vo4macFWjIbQsd7c0S5UQ753aaoTsz5kpjtzsi1utiNOsFwB7DQCm7XCiRJm
ATTR83qyz01sistIY1hzvge7FrbFyVzuiKPnuyV6XQ+wuhxo9XnAk0+y/G+x
62FrrEjBaJJ8Ikk+nrI7lNNHSGM2lQ6z27nLs5KDLeAwaEV2LE51nUSxapOq
TTsyXaCjZfdR/10IAJty+dgBv5+30rvaT5uhJvY2XCQ3/BOe9JyymmWLAtW8
QKD8HI82ZFQ/aaswY5a+Sa7/GZ7wvDKNnXkEeCiqzg5UZdsUovb2FwA8JMYL
ROovmnA2fQNd/L09dQ76dwLtKElXUWpXMtHSGofWe+Wj74sBz1c5UmOoV+gp
XZVxNjPatnSdLC3tc7XCTY/t7adCR449ESf9Gl+qT78wS0srV+i0y0wF3k6d
e8IWpDdLS5tbzfHHN81g68vSOhLsoRxUIj2ZmKPL3tGJCgWqC3gUmPPUAE97
6HScLLocHg9ZV6SI41N6jk0Hf2kLj97EKI0EjiPJNbJFf5GFR88YtU5P6znt
StMa7Al31ZEN6uyvxhl0evlpT0fP8rJ+UR9hubMm4vSk66yZr8/nt4fUZQkV
ulSq+CGQS3l7O7SlSRSzM/kxpeQXBMyLNMbLVOrP0VUXwlzsbd/Bx36+2+I5
2BEGp6Febyz8uCTZHP4gyPY1fPINbjOMkXGNnnZtrNZxjRnEqIV7BVhZu9zx
MP8Udu8tv/t/9Lv7KuLOf6XbvzpW+niH5gEMhx5woti13pUxFimwG3kRlug8
ny589FhHBhMTjCmH9LWlrExXHmziZdt08QZzYaChsTA0PsghPw1JbiobGezi
b6+pcI5I631aR88cAx71UPf5vKlR9uxU78HeCiDbV/qz5FJNK8djiSivJgDk
23LpKn9rfHKU2ddVy24rHuur4M7jVycx6PKQUPiD4gxQNyNtYbySv0EaZeen
h1uGQ69jK/zWZ+tnh8vLUB4ID2OQowHE7bqqtM4tsNt1kKuxv7dpYbLDaGsS
f75qf6Vue65ypDMLleACclUG8ICUgEdp4fHzuREWYIZKscdjYhbnO1QRvmIV
TlOyqAQ80d71+f4KwJMbalkUYdWDialM8Qh0uwFzMIXbGwW5mSQgzHJirCMg
N8HWnwW7GWKyvUbpCZuDedL1BoDXIJkr2exKI6R5RDpcgz/4JMXDtKMQ2lMF
HyWGbo/kSabLJsjRWYh7flaXfB9fhjz6NMrjOr0soKsxZJ6VLllsAnjtwO6Y
fH8VkIqO+7JqS1JdAkCgqqI8q/iGCAWklRX2+vq2WCyXawR9bGlTF4mSnSic
JNs9EC0NboxEjfSZsNj/Rev4CYHxAzz1H3D4N7Bl8axsxnAGdQQV2Fv5Oqnh
ZQJNWd/70MhDeZZIVrXvpJ1yeP2ZAc/zRNq/YQjm7V3N+wcHcrlWacVzOic1
fWfLvHyz4kXalgclfStyeU4Y9P7UQpR/0hhPpjfqswqe01+KlKYOdRVmxQ/p
ASCZFC83TrYkwLBpv8FX/4BCf4nK+FlT/UfxcEdvI3aplbQXvsMJr+pMN2zK
/UNtgQHS0c/pI1a5M7ctrNT/IvLef6Kc3urOd6RigkFlYY8TQcjABwUhd0qR
JjVhN/LAH5bB355psNnrgGx3+YtG4qQz2ZP0qBhvE8+H74OfXgz1vJGCtAgD
3YDYX4z0NStIdcfXhPd3lHIX2/c2hlamu4f7mEtzw2LBrop1bYyjp1y/Vn03
xfCEizMDhaiQjEQIjZC7ttAt3FsU728oh3zUaEy3Lp70yD4hFBysLsx2T42Q
NuYYvAUGE5saBnsIdTQK9blZluo8SE/upyQlBdyLAJs2Y6MEOwzRXss0p6wM
5enrZgR2MYJ6XIN6mMI8b8A9r0NdDdPDzTn02K3xYu5EIXe6dJiFQsU7HwIe
VQwPVNlpy8Tb+aK740dIv7us9loA2FEZPyRqy5US8MSA6gsC+0hp2SEWRZFP
uhoii+Kc/Zyvwx1vQu2uQW0NoHafR8PNkoMeh3jdDHQxqsv06ccndNaFcEgx
G33ZW+z0FUYiIdUryvGGv+XlLOj9rlJ/QrpTQfDthhRrDjZkjBiJzfKMAZlB
rY187W/lx8E4rQ2jbPzKZIdkfxGQ8Q/LJmsMNBrkIlVFUK3IFThHVLvJDV9Y
sBwcvEim2jDpxI2VHZlUfmqOVN1tlWhBY3U78jaKAfGMRITn7YTOLN3vGX6X
0f4bHO6z4uS4XKfW6qfjdJ9SVsYVQvnf4SnHgOcFAvkfCLh/xGP/Hkd4CU95
XlOW588MeJ4jUH+CI5ox2ojrXL5MLju2wZ3TOWnofxngOc4EV5F2xv3fjk5g
jFMRXF+X/qQxamV4Adr5/uf0VyGVwpIdqS25fE8uWlyfpGQw8wwpZT+ikJ6n
0hXq483iZMsQq4rYaz1FtzdavJqbQ60bEn9TV/xRajA44AE2276n0rUs8EqC
w+sp9q+1pN0bowdUt8RlE6NYzTFrfYlrrFBue8A42nak7tE2y3urA07LvMfI
sRon+o9TwpN9r3tbvONj9ZGn+Xseyu0DD8tP3Cw/g7vcTApzI6Fz1xY5YsGm
TLKrdo8c2jpOOqT0/674TyTcnZ9g46vTw/2sPB0Mo5CPuxh5i2PknubqiQG6
aH8ZkPPPyCFW2ypESnOFbBsQr0sFCysz7TR0Vn4iNBJmEQm9RyhHsknJif73
YnzvUBsjZydqdjbIW8s4Ym1gmO/N5KinSVHWIb53fb2uQ92vwd2MMqMec+hx
GyP566P5m1OlQx2ZmXHOYNcb6hQtiMcdqOctkJtRANQ0JfZJYS5kcACvAjwq
W5bS7QMMKwBPLKihMIiNT8kIfFgQ8bizMaIi1T3I8ybMwRjmYJgW8gRT7NtB
SuhvzaLWh1Wmu7VUh7RVh6dC7yV4mtJzwXOk+CVaMi7FM9zhmq/5hWz4g84y
ZGmYJdzibcij14vDHw4ToxfYxbS6xHJUOKEmf2KAJdjdUAhSJQ0ts5hMBRXl
qiAoZRjOjli2MyPeI+5sJS4sOHKGrre2fkzAvdpQ8//XVf2mscKpv61jb3tf
1c5WewEqA5uVm3oZHv1QYR4VHlca8hYAoGVfWLC0Fjw26lFXBPN/FOH5YUHk
tcSG8MtNJT/Ck1UuLcaLBOq/YNFXaNWWrVUGtMpXCHX/iMe/oGwt+rUBzxcn
xT9LoP4Ug7vKbG5YWduWyb7lCVnn9Lej/2WARzeX51uAdtSk7UX6M1hU/qQx
ahctPEc7fws6hgfKF225RCDYaJ+mOjNLf0bCPEuh/5BM+3Vj2ZUoV7fHr1QG
v7dGc5piIRMoSe/gqt6sLHgQaOdj80E65FN8yu3BGse+Iov5BmtBF3S9N4RN
hE02h/GH0yQTafu9QQd9cNkYQjYetMkOzvO9GGjxuyy4Ab3QPc3vmpf5H33t
P40EXUe6G0PtDUJBj1AxMFJdwWB388byrExyoP32rw/dSAWCveXlhV3+DqCL
dmQSwcJET3EaMtDzrq/bDbCzcQTiYSshebijOC/BoyAZNDeEX59nTY12rC5O
Huxty6RizS2OA28BVcd5uQr8yHZF/OWVmT42s55Um8GmF/UxC9Kj7ENhd+OC
LFFxtsTagNFuFL0pqLECPNKXN9xfRMPGpsfaQ92MYa4GKBXgWR/KXxvO25ws
5bRnZsa6QFxvgt1ug93vKAAPxP2Wn8/N0jzwGKdyYY66xRtVubRExxae4UFW
WhyosTikG5+aFviwKPrpeHPqaHMqpcK/IM4uK8Kqm5SwNdMoWCXKBe2iHdoK
p3CBldNVG53kcz/A6nJ9nNssOYXbmdtRgUyD3/ez+izL70F3TURjqnek+/Vg
J+PaVPBiT51oo29rdYS7Oiva3wWO9bn8xKYOAuMD0hVANAHs9S6ttWeNt9/r
bv0djfyfuMYPcbUOpAootcitufBmc+nntJqIUc6kQKALLhVXkW5trfK48xIB
D5CJ1cUx1WFWMjWuUmEksQr5zcukA8vzzfTG8syAnES3yPq0K+iKf2wiPo+n
KYDNP2FxH2HLM7vy20dz6odyPdpLfoOvehlPeo7wtZO59AEedWg04zki9QdN
hEskcuni4pZME7Z0Tud0Tud0Tt8JUqsWieKdWi5e3V9I5TD+m4h5gURVAJ7/
RJcbpIIiAi6MNlpJB6CCweDWjmQzXOlb1YVmoa4+9p+kQy8MNXpIh+Pkg6Gi
Ni85G8JnIbAJd7LghqQ06wUCYp0G2enwBiYCgMnQ7aHYslATkNmvYt0/ba+G
Y3Jco6GmRckebEp+KzaHWJvVxcQuTo9IlK6rM16d1cBHKpHs8UR7a4B8W6Eu
+wZYW7tcmSY8VqEyRbzliYaiWITLLZCtAcTBGOxoFAG/z0THjbYV5MTYJSEf
9NIz2DRUbjKoOCuU1Yze3V5S+Y+EyiAftUFDzYOOilcISSQX7wn563zezOp8
d3drVQulkNSYmp/iVZTq3MtImBvOXV8sl0sZgLxTtMei4+IRniZw16vZ0UrA
s8bJXeXkbI6XclpRqFhXqOsdiOtdiJuZarsVhrDA1UetLJDEIgXa2VT5iI6D
luXDg23pCT6YsrBuUnpasHlJvO3qQAHAw4k20Av92YwqP1p1EL02nFod0stM
Wx4r5Y0WcfsLu2oiE7zvIW0MmtJB69154pkq7khJR2NYsq9ZXpj1OCN/trO+
E1/Yhi2dGWgV8hYB0a7KpCPXxZbHH1Q4ULYn4S+Keb3CxSbpXIloJK2nI9GF
nP1LXNU/4jG/xVV4NBdR+1Fjw4mckfjcXtQ9Uq4FrqJupHdbwNfN25ZzN2Zm
x2l78wwZb0gg5O3Jlb5GgWoaZFpHyg5tfIqZEe1sLE6OsfHjfYie7kv09v/G
Uf9PY9P/1FXcLowpqQQNkbwmusIzOlBv4Up+QCC9QFCgFMY37lhxZB1qfobY
+hyB+SMs8Q0COWdyekUqPbftnNM5ndM5fRdJ8SYtVUUwi+TCvj2u5WDv/yGR
fkzEv4Yu9q6P6KV4S4dgAAckYoE4RH83dJpRbUZgsX9TsVt17O2yMJOOgqeL
BHce0UnSAdlsRhQFGEHv/THC6t22tMcbRMhOiw8wFiwbDVvrCisKMUbavkMq
BPPGa1bH6gfaShbGm2UHyzLBpkSwA8jOcjCpUn/kQolwe2Nhsq+VTChPJ9am
jgzgV5cG1jcXpIBIchj+qsAHIv7WIq0+K9DtNtjmKsTOCGJvBHYwDIfepdZE
jLbm5MdapwabDTKTOolxIZBbYOdr+Zn+CzPtMvEyIF6WHCzyeXP7O6tyiUCf
WemYpHLZvkzKk8vWxQfzqzNtw6zSheEKyR4VkNEBOWNvm7Qy10RBRwd4mcJd
rmRHWw3R41YHs1cGszbGijktGagYZ183M5jrPYhiczODut9GgMziwp+U5kPa
Wwq4m+MqAHZsdJIND7ZkJvngqsLZlPRk5KNY2E1cEaifHrk4kr0+mocv8Izw
uubvbIxwNo4EXW/K95xuSVxj57SWB8V43oI/uYRCWjAq/Uaa41dHSlZHqlm4
1B5ywc5CL7C/KjvYkov2VU4kJcl0QYmK1PIXyATrazM9fYxyWnlYbx1ijY4Q
d/luMjwpBF8rfOa/42p/jkXfIhdWDWRyp2KAqWDxIILKDPLFRvvik3IIaRPT
HWKxNppVgBo+f6Vjqy+L2589MEnCzw+S1pcGhPtLchlfBT3VoFPL2XXImQI5
jR0IG1c2IsembLp7HmDrLCJ8fN0vpoHeqU25F90U/Tq29CUC5XkC808GPIxn
iC3PENp+hKG+Q6LFTUytiCVn9co6p3M6p3M6p287yeUK/a1KmZHsyKWN+/xb
/T3/t6n2Sg0ql5S42xcq64NIOtx5eIdONAiGjbepj0bTotf7k+qT7nnc+s9w
699T4k2W0A78Fp9VOpiKssgCX0myf48SZbaOhY9V2Y9jnHnskJnmoKJIs0Tf
myOtRdLtPkA4AYiXAOmOyqRw1huzshOWXMqVi1cA0ez2CotQERsBsfR+YgB3
ulGECl6c61cgHAXbUrXjBxBLhKvDnZhomLmP1UWI7VWYgzFEsTkaKQAPuTps
tC27JMmmOMlqoT9nsDkpLvA+1PVaTJAdujJ2sLN6bZq2OkFuI+ST6vOGe5p3
NpeUbSnkMr2IR7VHDMj3APkuIOOK+VOi3UFAPgwAvXJJ+3hfUUU2KCnU2tft
Gszlak7Mk2FmggLwrHKyNieKhtpSs+Md/DxuQl1vQ5VoR7HdAbuZerlc8XK9
FB/tODRIPw14UMk+hJpIBeBJCHjk8+RTX4dL4d5XKlOf9hLDa1FuCCcDBcCD
2htD7T4virMZpSesdOd01Ueggp4g7I2gtpcjwLfL0rz6GIXcuQ7B1pTsYAOQ
7CtBplxTuUiqY9uSKadGxpcL1raXOdz5rq0pKrUMGe9tFGj5ennAlUWsi7Qb
wm3zodGRdpTcX+Hrf9tQBSdl9vQnCSZigeGwLSakGQ2uIQe3DSR1tYaNdudu
rQxIxXtHd5MoN9ESb7B4jBrSwIwLYGQ6ttX7DXdkL05RtrkjAsHuiUacuuBT
sW5WAIAtEDbNzRRiK5PDHQNs3o3wNYHUxL6KrXqRQFGhnT+xuxbjOWLzizjm
b9HEyKmZKan0PCfrnM7pnM7pO01H4ahSESBZkcvrt3kPaISbGRFBkfaUlFtL
TbZ7NNepBvsGjK9DY8zjLFBmnAUjzz4/6Jr77V/5PXqlNvjiKtFDwEbsDSC3
eoMncD4d2ZbdWU/nGmCE+HuYFPO1voyNkaJ+WioTnTo/2io9WAGk26o88bNa
D8lUCm0bkC/IRRz5fod8l7k1X48vh8UF3A/wuBUGtaU0VfF3NtUZ9iodKAUk
3P2VTmZNZKDTFT/7y6CnF8F2VyEKde+kADxm5KqQiY5sQqlPDyVUtNm4MVlG
qAqIQjyCuJj6e91JjbCnN8YMteUVJnsh3M2SQz3biOXbyyMbC2PrS9Oi/W2N
yUGbSXXpZmVo8YEqj2kLAJbl4onJQWxRpn84whrmfhvsZJgTazPakrw6mLM2
lLM9XbwyVtBKiCjO9IhVoBGfuwq0A/W4A/G4AXY38nG7HB1u299Lksv2D4NZ
VIBnSAV4iLWR3dT0+MBH3k8veD/9zMX8zVjEtbam0Po8H39XQ8VgoQ7Gvk5G
Falu4y0Zyz1Fc6yiHkI2tiS2MjsMX5PZ245fmx+VCLa1QaZcY8dSOpLkh4WJ
tgHRMrA/Kud1COYwY4ykQWLESnc6q8qnLPR6lvfHhBjTTZK7vB8m7ofN9IZE
tud8RKh8uyjdLc61Kt1qsN51kwxZxXh1Fjvgcq16GlyWW+Dz9NBBYvr2yphq
0hW3VQEeYF+42bc6WMTuji1nRfq3JNkysi2ay+27yIF9Hbih3qWFKQl/S2mA
0l6pWqtErHL+8fhbUyPdzU25NZi0IHrVJ4TGf8GS/h5HeVFZlvmbtyV9jkj7
MZH63xg8tJM9IhJ9qxuDntM5ndM5ndNXJpXvQBm/uymVNszPQgqSbWwu5/p+
Mod1PGBBR2jQJGLk5ZqkazGe7ubvhFm9HfzkXW+zVxHmv0NHXV8iQCYxLvN0
r53BUNFIHK89ZAoDn8QGt5f79RBS91fapHyOdH9ScrAsk+zr73iltOeI5dJ9
IX99aXZwZIC2OMMU7XXLRa0iHmZ/pUa8iVmfrOhrycLXJFObKre53KMEZ0CF
DfZk+2Nbo7UddUHlCbaNOaCMUKsQn1twZxOYs0kYxAxfHrg0ULTQn723VgMI
iWIeZrwblRVnD3E2hLkaI71v1OSCB1syC5Ncva0vwx1NKzMQk10NtLqs0sxI
Oq5idqJHLODJD0vt6bX5qEehLGMo4C8tzPSxWtC1ZUkZ8T7Vub4TrNz1odL1
4aLd2UrJFk6wTVqeQzeT0xIj7WAet2CeCsxzE+xu7ON2NS7SfqCXJJPuaQEe
6dAgE5XsTaiNYJFTULG2qDjb/BSn5PAH6DLI3FBpfwuqJM0z2Oc2yM4A6mBY
ng6aZBVvjjbtz7eKNob3udM7m/Oi/a0znIaAXB2erYRtu4B0AxBNS3jtoqVG
2XypbDpzjxMzTvIZIfjsjqbsjaWvtIaP1nqOVdjv0LykXd6yHu/tPkRha8Jt
bM7F9PCHDsYw8z9merzfmWG+UOvRkW6e7vxGutPviVFXB8udK6KftDbl7e2s
KnCKDBDLDysU7sr5g/ypohVOdB8nFj2YktSdZteSb9KYb5scikoOplVmjQ90
b+7u7sjlwi/sVyUTHyztrjFX55Inxq3Ygx8y2v+NSPkhjvgCgfzcN0I+L+KJ
v8JiXDrb+3hc4XlW1jmd0zmd0/eANDknMpWrBtiQiNo5bfGhT9m1rhJOsHQQ
OdkRHEVOeq822zQNEeh5Jcbubb/7r0Du/SrZ88PBGlBvqWeqyzv58AuNCQ8G
McjZ5pSZ5uy1/saNMcb2yqjkYEPpHAEOFO/1p0rfiFVF/3YA8RogXBDzhucH
cNTapLIMv4JkLwYmeqo3b22kcIKVPttXtLtI4q91bi4O7G2taxhXGikEcvG8
cJm62pMz05GxNFy2u0KY6S8lV4bE+D6CO5uGgu/iy5H7S03yXRIgIMn2mvjL
FTP9WdhKRCjcDOpqHOhzozoPPNCCUgAesPXnAU4mNemQsZbiapQ/1PF2gI9l
VVH0/GTL3EzH8tKgSLghVebL68UPaquDSLFJpXu7W0sz492TgzTebAt/jrE6
VD/UnDXYljU/VcPfos1O1OakuYLdjAMg95Dwh1DP6z6uhglRTpxegky8Dahr
2inNV0JOPyEzyQVfF9zTmtpMCJ8ZLlqeruzvTJ8eKRPxWeLdnvGeurRIV7Dj
jQjfp7SGDO5sh4g3Jt9bAkRb+pyGOkWHlMKXrgDCKYDPlnMp8tUayQxKNB4r
m4wGJqN2egI5aKdhnPf2cJpssUw+mStgRXEJ4G2i+x7NRdLlc9CHaOuMSmYk
w/LgPm5XYA9eDbN4hZ54Z4MInqx2rA74NN7qv5IdflOPehoe9igq2pnTRxKL
NlW+SPEhAzKuaLl5lBTa0+g61Y6YGYrN7c0xw+V9HAK+aX/PxvpGSHJYZmdb
zsICdmd3UCrbPLtxldrgsy4H2HvCkuV175Fx4w7WqxTKP2Pxf9eEfwlPfl6Z
rq6TlvWsTrN1dU4W/RkS9SUC6V+bMDYdzbStjX25RK7/hud0Tud0Tuf0HaXj
xGy56IA73lW/PZgmH4mQ9gdO0/3jsDFX6jM96yNptU5dZQ8bYi/l+b/dWvKI
1xPTUuTuYfprhPn7MR436ZUJ66MtO4sjEv66XLQnFYukqqIlmhCMw64CYmX8
qXwTEM/J94ak3C5gt1u8xlgZqOzBJZWneMMdDEI9r9Vnuk0wUqhliJxoe0xp
+AgbL9hZVoOBw3x1uUguXhWvNW9xihbaU4aocTP9RbureOE6aborPyfawdfZ
FOl1pyzda7avcG8NI+fjD9art+aK9tbr5kZL81NcQY5XY5APWwjR80Pl6ALf
YLdrwc7GVcke48256Dx/hOtNHwej1FiHXlZeX3fR1ETTwd7Q8kLX+AhrY3Ve
LDrQlZ66To1Mp8Ce9AAQ8WT7i7tL/f2MKnRJFAUdOztWMTdRXlHkHeJvlpfh
U5zt6w++B3K9lhLjOtyLlQoVEFGsuqbiCvx+dm1mgh2xETk/UcJdqZHsk/k8
XDszobbcr5WevTDFXBhvIdbn1BYnd9Dq1+eHZQqco7ipssWYrjHtcHrFgGwX
UAAH8RJ/vY83SxatEYENNLBULJ9OlU/FymejgdkoYDZaPhG11RXELHhSHnkT
l2472Bi4SY/YIiK4GO/NRpf1RodNkusBy3d3KHJpOL6f4UvNt6wKu1oA+6Az
7+Eey1fYi1gmO/Xk3yKmmdbWeUeXghFx9rmZsHEOQyTiq4rwqHPiJJL9jXZs
Voa/cU3UlZ5q6yxSlCE2/9cFqNdiQ9/2df84MeyDhqo36PSr7F63qanclbW2
PeGiTL6n8cwdlSTQLAtlc45xsYTM20qbmXHs7b/MaPkVnvxPaNwLTQSlwYdE
e15re45Ef5bEeJbEfJao2OjPE8n/jG641cygbKxty6RHWWPngOeczumczun7
REfARAFSRFzpJhUYSxW2IzlYvyh0xL3qqFRs8Hq3n2QIvt3lPcd02+jz3x5N
GCJH5IXZEgrjuql1q9PDcsEOIBWrYc1xKOyRtlCHvuzJBSuCtb7NKfLGWOMQ
LY3VGDnRls0bqxHMoOfa84pjnH3tDAIdr5ZGWY+TkjGZIKjNlQjYU3YbHpAK
jxlVXFt0sL46Rl1iZW90Z07TEsrjrFP9zbD5oBFmyggzrSDOwc/FxM/1Wij4
VkGiHaESOtyRwJsrEWzVA1IadxVdmePt73UNVxvCW8WJ+IzZwbJ6FCjK83pF
vOMoPQOdB0e4mkCdDfPSHDnsjMHujLnJ6j1eK4tZkBDpWZAV1dGM467Pifa3
pCL+UZk+ySnzgxpCCgHJ7v7W0uxY9xiHsrnawt9uHuOUN9WG4+qia4pDAsD3
Qc7X0hSAp6dJIljTATxdNRnxdiRM2A6XIBO3yCVt3HVCTWVARLBVRVHEOIe5
vTHLW5vf5a1KhHzViXoVtEwJgRRY6GAJ2BsDdtmyTfpyb958e/zBZDawlAvM
pEiHI6WjkcLRCPFElHw2UT6dLBpLYxY5hzt8GPj4vRzINU6xxyYGykN7bjS4
jBc/JkZfISUa91Q8nqW4b3dCD3p8N1tBUxj7wQpzbqu3fBwJjPvLBuG7bN/p
vig0HhkVZQW2v5qb5D8/PS6RqgsPStX4cHNpojIDFGz/h+zgCwE1yLdwJT/D
Nv1LQ+O/VpT9W231T3G4HxCJPyQSfkEmv8tosWAPRo1P1y+vD+4e8GRysbaR
Uq4RvyogCeABwJBAiFnbCJ2cNu/pf4PZ+gsS9e8J5JeJlJeI1BdV2wskxUZ/
nsR8gch8GU/7GZ5oyGSWLy9xVYHK3x+so6fx0/eEDuvCfaerup1qBPYtoG9P
EcVvRceKc/rekdbbsgKZiBdki8Q1WmxDNdKlLvoGCuofcq8l8/5ovd1qK4I/
lilYqBSsE3dXWtemeyW7m6og3sOzpTrq/9BuJD3gbc5xJtn4tQHMOCm1Nt6m
OuFpEsQk0vVKJuIeOtVthBDPwcajkI/97AyQjoaFoU/GSWn0kqAE36foktSt
jSUNm4BcKt6fG27F5QUMNoZwu1DT1KSswIfud98Mcb2KL4SMtqRiCkEx/mZI
H+PkcHNCjT+uGtZKDOZv1AEyKiBnbCzWlWW4h4BvUxqiV2cbhTtUEZfag4tL
AN+qiLcbpaXWZ/sgXA2SQs27mAmz40WYSnBhhjO+NrIgHeLhYOzmYJIU7dHb
VjPCxrdSaob7WjZXpsXC7aPKMZr6wer4qCODhqp1l0IPy5dlopnFSSYFjULF
g/w87/o4mKRGuo304KWCYwuP4mxBf3dTYqRddpoHqzVnbZUmlQwf7HNGhojd
nfj5GY5gnwec1dNJ3T5VmW+1D0i3APEisN2/P4PnT1VJlipliyW7Y+l7Y6my
2UxgLl08GCnoCuKzgvoqbFsLLIebQKudMQdjBW0V8Ainz/0evZ/mbjBQ4MrF
QHhoj9UG186sh/GOryEe/Xe4/e9R8PcxCYacaqv93gD5ePR6O4zf6y8fDQbG
kZI+2DbDfbctgFXiFuN61efBB1BrE3RF/tbGuvwwPVDddFS0PMOqz/UqTreA
NIS9hiv5OwL+RQL1ZSL9JVUHq2eVHUKJzxGJL+MI/9RE+DWOfIHaZtc1kDQ9
T+DtjollXFVUkHYCu/aaVkh8SZnVJSpZ34CNT9/p6n2dzvwFjvAjLOEHeJIS
/JBoLxDpPyDQf9aAN2R2VK2ur8pkYu2ai3+BL9tfmU52DP/+0Ml2RX8e0kIg
2v3NvyaxMV+xMO/fFPBoDVCb4S8EPCfbkv5F6RDwfMlEfBtB4xH9LXn7yovw
fy2pI3qkAtn+wmJffUpdkklV0qexnk8ef5Zk90l5yD0OLnZ/kSHbHwek6yoH
go5Z47hBpErLi+WSXRFvnjvT29FUWB4HKQi27qsJaysAhdu8E27/QZD1h/BH
7/tbfBphf5WY6cNpissLeYKwNwhwMMxCWo6S08fo+WxS6cbcKKAdOyqXcFcm
a1ChKdB7g/WhXFb2NDUtL/gJyPyjEFdDYhF0faR4YaigkxaDr/Ht60gV7dP3
tonri1XbK5X7vAbZPnFppKQk2dXPySTOz7I01aOtKWKhv6i9LjwBfEMBeEbo
qTUoL6SnUV0BiLvQsDZXU5zu5GXzGczlOsz9to+LqY+rSXy4dSs5nVATGwZ7
Eot0K8uJpeOrRgbaFchHcoh8ZCpjmUzdTOGwXNBx/JJMINrbXJweZNEb64sT
06NBhWnI8T6aTMjTSmGTDvbQkqM9o0Icq8riJsaYItEKIN+RK5PixZrJ0quP
pQJAzBXvzGwtdvNX2qVbbcAmaWMAtTmQJFnKBdbzgZUcYDELmE0TD8VsN/tu
M/yWCBBcwp0c6MVsuGFp+H1ijld5tG2og4Gf+UfZYNPhEnceBsTFeM+hwfg8
Rz/Py/bmbzvf+4PHvd/ALV5J9ninteDJcrO/YChaxIlYIros4p2WMQ706Etd
mQ9J8ZZhTz6B3vsA9PDTSJANp4MhFhxIDxeJWN16lLfKGmLnprdkXySV/ZiA
e45AV1bCIbaqukhQnyGSniGRnyFRnyVSX8RTfogl/XMT8bdkxtUOtsfQROb8
MnNrd14q29MqHynX3WSqfhhzUnnr9m7mwqLzEOdiO+tXROpPm/A/JJBeJFJ+
hMa/hyHlz69wpTLpUVT89wjwfA9tOypaxmT8BWw7fx4N9d0APFr0lQHPX5W+
moXn2yJDfXQOeL7NdKghFG/hgq214VJmw8OqHLP08PAoKDk3uo9asTnbC4jU
UEeipRakh6Ydubod1ZZ8b0aw2jvdXdteHdtZHZvobQZ/9GGs85XuUr+OfO84
xw9LQu6WRz4Osbnob3Ex0t6IkAGaoWc2ZYKCXUz87Q1TERZD5GzeKE24OQ2I
D45QlbKQi0SwOdhaF+Z+O9Hr+khjxCYre4qaqkBKEMtPQlyMMDne3JFS+TZp
f5M41JraRoqen6jc5xJ5CzUsQhC5wmeyPXWiNbM00R1mZwy1vebrYJyCNGc1
xbTWRsRDbpfG23PoaVUoL383w8yop3R0WAcpPi/BEWR3xcvG0NPO2MvJ1NvF
JCnSpouWTqyOQLjf9rI2ATvc8fe0ikN6VOfFTvZR93nT+7wFiYCrLCgECOTq
fqCaAjvHgpbJJPu7mwtTQ6xhNn1jaVwm3gM07adkK4vjrObGzjbc1ET/zvaa
TAFjtDPdDvWxli9HJhHvbQm4S3tLHO4EfZpVSSwOxuTC2bjo1Z6smeaoERJi
pSdGOJ0pmkiRjifJRuJ3WhFrBO9VAniRCJsm+HHqoVSUY0HA7Wjnz4NtLwU8
uYQw/ygPZjpa5sFrgi7iApj4mIiq6LuJcGM/27tO1x4//sDt8Zt+T1+Pcf2g
ONCQgbKcxviQ466hgy92ZplneL6LCr+XkeIOcjb1efgJ/NHHSFtjXEXG4vq8
UNlaVK6KZhfKlRHHW8KtAdow3pJc8QsC5jllS3QF2mlTVTxWfCY/Q6Rop42/
SKS+TKD8HY70czz5d7QW085e+ORM8fom60A8Lwd2D/tzAMfQ5Ti4SgGwuAAw
LBajeVuRE7NWnd0fMKm/xGPebWyKG5maF0tkgGaivh+A57gZ0GEnoJ60U819
lNqNnaFyemmezMqdmkZCR0qHjcawVTvVVzt9gPKYDBstUmKtE2cdHXBsd9K5
l5KHIyaP+FnG+OnpjnR8I9UpCrWial2kHtcZw/zCuwA68lHv12grndNVA9Ht
Dqn9q1YTpbPFfkSqW5yUSU+aFldaSl+LvSPOj4Vzhh1PuwOm4vTjS6lbgasH
eJJhFeA5utepHlLHcOgrTNyXy/y4+5VmcrXWVdrh2LVhwzG36j+dmDLtPXrA
kp61pMOh/j2nhHyCBz2r+uR8qS+l9ytz+ngdmev2MNWsjVMH6/BwehGek146
dMbIhIKtiZWZ6oHuur6ukbEhAXdN1XNc1WdKp5aOXKVhFMp6WyZY4M20zrIr
+UOlB5y8KUJwa75Le5F3vOuVQIv3k12v9JbA2EU+OZArvXW+4/T4nMCH/pYX
I+yNMcmeo/gEHAoU7n4dYW+YALfk0EpF66OAAgPINKVpFG/qYv7EXHcZudCX
jPKcwkWtd2SO05JyQh97m3/oa/t5HORmXapTV1PEcCsKnQuOhNzIi7NtbgiZ
6kA1ZrlHeV5tQnkMU1IrkjzhdiZQm2swW+NY2MOW+piWuug42J1CBeBpycSU
IgI8jaGOl5Fe1+ICHoRB7oDtr/rYG8E9bgf5WgQjHqIS7Nn0ZGJ1iL/7TR9b
E7D9DZDtdS8royD3u9Sq+AlWLb0hs6+1bpc7JpOsHvVAl+pzvKiworJ7xb5M
ItB1USm7g0lFO6qk+ENv42EBYgA4iok6bHgqFvDW58cH2qmU6twuTO4oKYeU
AyuPdoj1vu1veyURdLOlGMoqB5eE3iwNv9VV4b5MD9xnR+yxAtfJXqtEr3ms
1wwOus1Okk0XC0cKeivhye5XEeYfIiw/87f8qMD3xnilzxo+oJucEEUsuIou
f62m+EJpqm1eIDjGOjnBKjvsjv+TN2D3Xo1zeL89x4Ecd7sW+TkpxyYk4IZr
ipdTUbSVr5275efQB+9GuxkWFgZX9ZKm97ZVC0hpCZQpYY8EkGz3zfZ5kKp/
iWt8kUBVQZ0WlYWHrjLyUJ85lWb1DEm5Kdtd4Un/Rqa/09ZpOTASNj1ft8Eb
lEg3VKI5KxRHgXxWpfLu3d2S5fnwkb7c0fEZgVjy/YA4p0hj4dHWd4rPh8pX
+TBPO/kSqtyp/SBVH6D4cLxTu3m0xuOgpamXFTgHOHGW1r3UCvfEvdRP6SMn
S9oRejm65on3fS0Lj2Y4XzTML7rLMenqVoyWytMahUqk2m03dSAKoPNyrZ8f
zS0QNqdkoh/waA3/kDEFJ1q4Ub+9S2OuUSBPzNFiWEanqdXi0QB1LTx+x/I5
7TfUAjxfItIvPUC7obk+79Wx6I751BKgxlerPWW60j4xKWlakFID2jWgRfnX
U3v0CFn7O6UGxmnHayPjzOWk/ysDAKf2nJC5zjUVk7is92A9PJxbeL4GKRtY
y6S7EvH+sdlBLj3qo63VLEAdIiqdBnZ7BFMNA9W+tIzH68wAYDxBPhrDZ4f1
V7nFOHzo/+DNRMcLPUU+nApoXeTdOUYMd6ioOsnZz/JiqK1BdbQDPR+WAr0d
5GgEtzFIRNjN9TMAAU/TMF3xTyoUb0/zF5nyVbxounqtJXGJFrXOSp5sTsiL
svS2+jAKapYZbBnrZRznZVwabVcS4wS3uQS3vZQVajlETsHnQCPdDOuSXUco
6ZXJnr72xhBrxWaoADxtjbHM2ogo6I2iZIeFofLpgRJybXB+olOQtynI5hLE
7grY7kqk3wNMdUhna2YnM6m3JWGeU0CrD/N3v+5jYwi2uwa2MwU9NQx1v0Up
C+vCpqYGPSlJ85kZatjd7BQfTEhFyzLRprqu4CmNKjsV+aMdUKUV+n2YiKQu
z8hX2irkG4B4eW22uxVfXJYSFAezQ9rfqIpx7ShFZkJuRToahTnd8LUyCLE3
JGZ6t5fA08FGARZvlPhfG63x5tL8NiheW0zv/e6AOSIYn2KOS3naU+u32pLU
VwZLcb2iADx+lp8hFIDH7xanCs6hxGVR82/hyl9prHy7sQDcXIDvz+lqD5/q
DOlDe+T4XQi2/G2czesDpc6LRNAU1rWDFowo9b9UkfxZde41pLeLlQH0wVvx
EJP4cqQdMT9lnDMjFKrQiFx2WAdRtry/Fd3d/Ht808sEiipPnKn6/yt1/3ye
SFOc9VM85Zdk5sX2bofRyeSVNeqeYEIm31H35AJOA011mUtgRSriSVXlivSj
ne88ADp+OJ/wbR2qPP3+ixM7D5WR+mF7eIDug119ccVz+FjFHOsjrbN0b5Fx
pBY199J9tmeceJKfdQUd7PEVhqnvLsd0FuDREsjRNTUI5NQYNbrmDH703e6Y
Mb2ARwMRj/T1Ccmc0ff8iAG13QajMylnAR49gwVO/fVLRfplB+gCEhVCPrGu
2HosPJrxph0DRYxm1elChTN9c+orn0aJehDLaSGfksnZrjftJaTvK6OXTlxf
61c9GOb0ajy+wzng+ep0HP+gFaZzvENt59kDJKty/ohorflgtkYylidgRXNK
bCmJphutvsBMHDATJR4Ln8R7VUfeSfH4PM3jUleB+0g1rNjftCbWklAAzgi0
hFlcDLa5XBFli8/yCbC5ALe+HOB0sz4//mB7XdUEQX1bGSA74K9NdDRmYLJB
Q5SobU4Ol5Ww0R6zO5i53JNRne6QEvSQTcuc4dT0kJOaMj3KomyKI+0RtpcR
tpeygy1GyKmUAkSsx7WGVI9RamZVipcC8ICtjcDWBrHwBx1NMe2YyMRAs/JM
V948Rr7fLthmTvWX5Mc5gG0uwewMQ7zu4MqC12YahbsUuYguO6AI1jDNjeGB
7qY+NgYQO2OInQn4qUGo+w1qaXB3U0JK4MPCRPvhzqy50XLeMlGyx16bZQx0
YUYHW3nrizKJUMvZciqhTc8kHPkNlXHIu3LRonRvRLrbK93tFq23dzSlxUAt
oE+MYZYGAVaf18c49FQElCEfJHveiHC64WdlGOF8jZIFmiEnskp8M7yMSv1M
Ryo8lnEKzOMlGggAZhKWWpB5fkZIq3fiHD+lpzm1o9xTXa76m3/k91gBeD4u
DnjQXhNaR8l2wxeaEkpNiQV29VH5+ODJrvD9oTDZRDh/IGCC4Nya8wAfbTxe
47TPRoqHw8fHUKGt+a/jK39fW3YVCXZ+fBX64I1Yv+uBNeGfkgo+puGSZ2cX
xWKJlpdOIRQqd92kvf3HBPKzBJqmPM5XrBlIoimzzom0HxAo/0Sk/prZZtwz
4DU2mb+40ra7vyyTHxyVjwSOUeahhL+fhp1j0mifE0/yQ33xzQDPyafrscXg
tCH9JBg46d/RuZf2wWyNOUJvNpZewPOVhqn3Lof0NQDPsRXrtGY53nMWP/pu
98WAR+NYOeW5OxL5WV4tjXvuUH2fBhJ/IuDRK9IvOUDj39F4tU6sK72ARyOH
U4BHS0RneI50nUp6QMLJPfqFfHgjHXfh4RB0SUvC+r8yJ+6ufyoPZ0f3lFMH
n+ThHPB8DZLrhkAc7VPWwBHzl9dnWKsTJMESTjhZstQc1VlgN1Rmv4H3mai0
p6bcnCWDD0Zj5XMJsoXk/bH41a6YYRyis9RtvBE2jQnMh1+DPHgdYXfJz84A
bPlZsMOl+hRneqk/7MlncFvj7Gjo0syQlhJS1hiU8BfGWqqSofdCnS6QCt13
xwsOxnMFIyjpdNHuZAmjxr8+D7I5S5AfdMu2GNyBIg4uBp3hFWD3ub/dpZwQ
ixFKKq3YP87TtDHVc4yGqk71OQI8V+LgZl24qPn+AmZjSHmmG7k2ZIxduDmP
Xhopr0pzh9tc9rO/FunzoCoDji8LotQHj/Zkbc5W8aYqaVVIpLspyOYK1M4I
qsA81ldD3U3JJYGd6NjUwHtFSbaDbUm9rbEzI3lyAX1tupaBiS1O920oS5sZ
ZfM2Fra4q2IhX7dX+2mlKz9SziJAsi3hzwq4fXtL9INFgmSdIF0nipaJrXXR
EV5mUCsD+GODQKtLdVE2E5jwoVpkQ5x9pPM1v8eXo11N6bkgLgu1zEiqCDKr
9DcdrfTYoEAOegLkU1HAQupSa2iun6nvw7cDHr6FiXzcmeNVCL8dan3B3+pC
gNWnlWFPaQ1xyTiUe1NqbEdO1UBWbq1PbLBJfpgxKfvhENZljQUVDAVJORFj
1Y7oMANcvGl3mXULLcKfmvd7XO1vaio/C4JYPb7s8eDN4OD7rjWxfyBW/ozQ
9Elzc/XqClcqlRxa8ZT/1gAgdnX9VUbLy3jKs9olAb9OqeRnVXE+z+HIP8QS
fo4nv0ltvtfZGz42iV7fHBSKeapQ6aNEwuN0Op0l/j2jP4OF58i28KUWHsVP
9qk3cZ2ztH0leiw8XwJFEDqY5xtbeP5sgOfwAD2mlb+AhUfxqUd3ps60felh
5gibqQZyfNO/KeA55XICTq2rU4BHqdNPRTqdaeE5KYc0DUT5phaeE+xqeamO
bnHWcvoSC48Kiek6HLUPVkpPc4UvPPiYh3PA8zXoCPDIVXX0VGE6UuHSysxg
B4FSGlMS+bQk3Ky12H6eCBmt8Sjw/jjH5S1Wpjm7yK48xKg8wpSab8PBQyaZ
AcvdEaIplGwmZ68vntcRudkeVxf5EHzvDW/zj70sP4XZfIoKvttPimFhYqE2
V6NhDn1tJK2CxspAZdH+2uIAobkkJMHDOAN+fYwWBazVAWtVksmc/dEs0XLd
SAcqL86+MgvURYhbYGftDOTxOSXNpQGBdp8HOlzJC308RklllPjHehjXJ7uO
0TKq07xhdoYgawOI9eU42O0eQpRkg7gx11iF8kB6GGaEWlAr/UaZyZXJzn62
VwIcrgc43kS63kI4mQS6GacFPaCUwWY6Mill/kHupmAl4DFUYB7FpULcjUkl
fl2YyNTAOyVJT8e7Umc5GRsLhYAIK9vBLAzk58c6RMEsGU3ZLEYNui6PScWM
jfTxuGsymd4qwkqoIxXzN1cmhntpo12NSwP1qwNl0x0Zs92Z+wvVwDZRvknu
boqNAd2FW131fXwV+eRSbdTTeXIMryOtOd872tkAbv5RrKtRWzFkm41aYcZj
Yi3QkXdHq73Wab7CwTBgLlE+mzZJCsyAmsIfvhdi9SE+/ulkY2B3CTgLdsP/
yUeBjz+ojXzSgY2qJsVn1iMYjMAVThSjzCbI5jXQnV8HWL6W7PVRRdhVOsps
FuvJzn+aYPNH5MNXklzfr8j3DMKmf4St+m1dxVvJIUbQx2buN8yTvC43Zv07
Cf0DMu0nONJDVgd1d2tHK0hLIgcG5YDn6NR/EWgv4akqqEP/Zp1A1bDneQL1
JSzxxxjCf+OpF1o6bQbHkuYWSTv7EzI5T7WktSKUD1fb9xjwnAx00WdgOSLd
uAU/Pc4p7SAEvTE8GgaOz9J1ynxFC49WWv3ZsQ264TRfOswvBjwaBfelgEcF
QvT57HQjjfXwo7mdHsCjJShlJOrpGJ7j4zXTBCz3sM9Qb8rLYtDHulL5mX3y
7toX/2sBHl14oIZz2hBCM/YjPnUXg8bCk6ZtadEMRBd+a0X/Hq9YHcRy6K46
see0kHUD1DPYej25wNEBafridk7F8Givba1YIw3zyrB8TZTOqYP18XBexejr
kSrEQnIgF06Ldlt488SR5tr6FBTSMujJ+3Cz//G798t4h9+3ZzwYrvRK8rzk
a/5aWbx5U6lXhM9lmPkbQTYfJPhcTfc1Kgq5zsyzmyUFbLaE7HdHb3fGV4ea
wR+8BTb/BGTxcYjrJWoFZHuqitOSlxTihq8uFuxsaekfkVS0sT7OGMAm99RG
pIGux3tcbUq3HyIgdzgZO71Jy6wE0UrT3EhtPELZTzwJdqO11IfXlbbTm0sr
hAXYXw50vJoX/niCljLYFFUTb0PN9xmjpdTn+ISBb/u7XIPYXApxM6xNdx1u
TZ9gF1Sj3P2cPkO6XSqMtRwgxlQpAI/NZYS9iZ+9CdzOEGJzFW5n4O9wpTjG
ZpyZSi7zR7oZg20uQ5SAxxBsczESbNKBDhkgR6cGXC+Kt1weypVtNQAH9cBB
nWSjcomdWRZnFw8zYzZEEmoiQvysEFC7+JigZgZZcLCnT/xKwMNbmyHWohKR
9pWp3kPkpPmODFZjQHW6Lb7Yk8OMWxkobKlERnteh1le9LW4GGT1WX2szTQx
YqU5dhQbjE93yva7leN3Y7AhUDxZJpwsm2cmjDb4j9VBmrPMmTn3R3DuK23B
3eVeKV5Gvg/eC3n6ITnddrMtht+X1l/vVx1jkeL+GTb6/kST7zApoCbpbmno
5/TMW7T025me7wc/eNXv9isIs1cCHrwS9fR35IQ7bZkW6S5vB9z/dbjV75uy
HTDM5FBWiRWjyLQh5WpR6CeZ/n8sS/oPXNVPyMSXSIwf4Cm/bqqDcTo5e1ui
4/b0qpQtJv/gcffAz/GU5wnUbwB1TsQ2P0egKrYXFAgKR/kxgfo/1Gajrj6f
scmc1fXWA9Ga/DjJ/3DBfZ8BD3Bm+tKpkxQ7MScdB6ecU/pSTnR9Cqq76Go6
ja/haP9X0JunODm8l17A8xWG+UWAR9tb8RUAz8kkmhMjPZFJdEaW1ukRaeWg
adSWrg9Ix7ei/D2DfQiWTqlLXSWuBbp0bCPHDP/VAA+g5ZexUWjz41Dno7Ef
XUHLJIU4Hn7PSU/WyZw4GwXnOgtWIys0+5g3rWWMWV7Ru0evkG20/UfH86Un
qU2Lty/K0tJim63PZqiDgvQdfJoHnUV4Tl9Ah04GgUi40j3HjusngNsLCxjx
zVhoc65FTahxlPWbvnd/HWL+Cjn2Tnedn1+Mw13IfWiGR3o1IjHGHGn7Aezh
W6D7b4LuvwG+/4cY+/foqVarON9dJnKF5F+KMIGZvQa5/z7k0Ydhzp8zKxHC
JQJvjjnUTdtYXlQF8KqZkABS7sFyxwwzfbUzZ7E9Jxt+3/fRB0HWH9TEWfLY
GYstidgsV3p1CL0xIRZmDn58MdLFkJ7lutWeutKcgkd5BThc8Xe8mhtuOUVP
3OzNWWKlzdJjZ9uSe6kxbYRock1IUaJLLNQs2NU4yf9RbrRNVoxVWYYDsRzc
UoeYak2rTXeHWV8MdDFJD32aF+sY4nkTbmuAdDQqi3OYas1sR4cnBtyHOxmA
ba9C7AwC3Y2qs1xXx4o3xoup5SBsgftCH0q6jQYETXJe9cFkwSwzuTzaNhl2
i4UOHmTGl2d7BUIsghBeLc10kUh4xhzId7mLTeUpAW63CmMdx+gpK725bbUB
0T5X/e0+zEKadVQFUnJ98gLvFwSbZ8JuxrtexCUrAE/IZmeiYKJwZ7Rwtjm+
qwraU+u72JEsnKwApqt2O1MmGmCYuFtZkPdzYB8wUJZMlE2q2wXfu78PtnyT
lG692RErncwVTxeutce3Zlqxsy3WcJ5LGLca5IVwy/8qhL03UPF4uPIJPelm
FeJChstbERavhNz/JTHuxlSjS1fBg4aIS2WIj3tKHVbZ0dNjKW2c+Jru6PjW
GHda0mekgv+PUP8TIukfCKT/aKo1xOVBmYWM+W6+mK+qaSAF5ApStp+v5+5c
bmX9BEd8jkD5UzCPducs9fY8nvpDLPnnBNofWjtNB0ZCJmfo27u7Mk0U/jmp
6BtWYjnxeqsvSuH7Rn+9MZ5AVme7Wo7z487pnM7py0ld4EW2LxfO82bJpeQ0
x/qwUHoohxMhHA0Ud0On651zQRdhZv8TbPEHfPQ9OjrEtiru3fyoRxXhWaSI
TkZIc5F9VeSdGNdPo1wvRDh9HGP7NjHy9joatIEDT9d71YffjLJ5P+TpJwjL
j4JtL6EzwZujOMnOlFyyr/WCLVU2Q98b549UbfWmAQtVKz25+UiLUPsrmX53
B/BRkkXMTHNmnM/NQCeTCO8HCMebsCcGEU7G1HRXbkvqIjWhKd0zwMEA4WiY
E2o5TU/gc/L2h/K5nalLrNTN8RLxFknAoywMVWDy4YHOJmDrz+GOV8oy3ZbG
y/Y3sPxlNG+8uikbFOB4JTfantOWP8auyI1xgjz9XAV47GdYmUsDBX2MFGxp
QEa4XaCbaXKQRQ81UbCGk2+TeGNlLbX+9VmOrWjEbE/azkjeVk/2LDWlMto+
FXarHx+xN1+1OFKKr4sn4aq2eFy5XFv0umFTMsHiRFdZOqImE7zILjyYrV/q
ycNme8V6GsV7GjXnQwZrkUOYYAWemaRH9FT7TOORy4yokSb/CWoEj5MnGi+b
psRWRlrkB96holxmmoJXSSErFOQcI3gQA6ZlWbKL7cfqPJmZj0sQBiifCzXh
ZqS0p6wyj1l6OK89ZpMWwKOABO2QvRaf8WobTMRVYqLxGtVVNugrYEPXGR4j
NU+b02/VBH7ahrq7TvcR9PhutYP7Sx+T4m50ZD2YRtvs9fjsj/otjSC7huKQ
XflvkSt/SsD+G7beAJ2NaktqHUzuGy7bWB+SSviqRPvDPLRVOZCyvPY2s/mH
BNKzxD/JzqMPAtGfJSkDhF4gMP4DT7vX1k1cWd9SlRz8/pl3vil9M8BzwuV0
Kp7h+0cnw4r+gqTtswAATa2A04ed1105p3P6eiQXKdCOcAo7RY2pbgrMowT3
D4YLxwJkg2A+w3W62r4IbgAx+y3S4vWG8LuUpjB7dJJhUzoYH93OSTmYSxWP
xyzS4W0ltr0NoO4aH3Ly/c6Mh6tor+Umr0U8ZKoJ1lsBYuS6V0dbJYNupsAf
MWvTxTvLWg2+FYpPKBetCBdoCqACzBfIF4pWu1JwmW6UAvgoLVm8hAY2STNt
uTHeZuDHV30eG4CeGkOfGoY5GhFTnFWAJxGb4RXoaIxwMM4KspykJmyzszZa
kxZpCT31QdQK35GOjM3Zuu3ZhkFacnWGV3KgeTj4RlmG20hntmK/eJ24NVaN
zwZHuJvUZUFWxtAr47jSFG+Q1aVAB8PSWLuZ9vS92Rr5FpU/j2trjI2G3Av3
uVWU6MKoC5vpylvtLyYWQsLcLoW7XaiOt5okRm10oKYpKZUxDrGeJsxKxP4S
WrLDXJ9v4W7M6ZQjlEuk0j2ZdP84lxoAJDLx1lgPkVmfOM0qEM5j5WuU9f6K
unjHTPCNrmLoVkeqeDQPWCoFVkrlcwXymcLNzpT6WMsMsFF97NPBmuDuMv80
b1O/R+/G2H9KS7Ufr/ddpgQfDGcoDhYNp+x2hgj6wvf7I1dakN1lrkV+JhHW
70XZvl8ReH202nu3JYhH9V6nuuz9P/beAr6t9Mr738lQp7Rt/7ud/7bd9m27
nQ5TMplw4phih8lOjDJbZpLFaFmWSZJRZma2JItlS2Zm5sTMzJLuK5kdaAfS
fXe6/n1ubEW+97nPfe61n6/OOc85VZCNBnxXnjWXdm2gwFLWhga6cEAXHmjH
bzTg+hk2bH9tDvVGYxpoTOTWlGwWbnvK2+C/cvFnpsTWQDsUaIettOATKgIu
8+N/yct/n5VukETKSLfvKnLuLCU2VKeNTg9u7pTV2PYqbQFAhxxADjz9o7jk
jVcNPCf44hNK5il+TVD2Flv8bj4XJC6TzM4vyuXPL2D/36rvnGu37tCaln9u
2tlxVfy3lu04nNTxhbRzrGMd61tKrlwiLB2VPeVM8z26s1wK0x2qBdDZBqS0
yW25zHqMYdKWYpaIv0m2PusHPpdKesBh4WgcQlx1gKTWe7qfJn3iv9XtPVkM
Gy6EbXUFy/rD58uwwwyHcZbrMMt1rBC93ECTdkevtkeMlvuL4t2C0caV3DTZ
xsqhPkiBrbmNsdqZ2rjlZjowFLveGTJc6j0gps23pcrG2MAMVzrC7Cyk+7vq
wE21oabX3c1vwMy1iOBrnCDwdGnIUCFNATx4BfBYaYdh9XuElLmasPFi2pAo
QBAFITtph+IfCVMRg9Xho00x4x0pXZWRnBQUDaMbhNPPDXdqFwaMVsayIyBE
G+0ApF5GGCQvFuWPMnQ31cBYaaX6W/VIgrrEtP4K+mxnZi3Tn+quCzNRg5mp
kRxvZgXZtfIogniot5Mm0uRMBOJOaz5xqiqqTxSc7g8mOd7gJ2OWRkTylWbp
2qBcunpo2Le2Nmdmp9sW53rksiVAWZZiN0Pw6tJYWxWTk+hZnE4aLIsbr07m
BjnEwe42pcBXqkM2WkKkfeHAcCwwHAcMJ801ReRRTT3NLpLNLrEpViWRbqEu
t7CGF3wsVUQhtlXxLkx/AwHdpDXffbLUY7WWIG33BPp85b2UPg4kCqqO0T+J
0Pk8AHyxPt52io9oSTBgeF4QBKgNcmzas83zvK7WJxstVWNkHeT1euwTluUQ
x6E71yEKehlv9BHN9it2oF5+sAnB9hJE78N8X825KlegEwE0u08Wu9L53md5
iT/jMz/JTbznZeXheiYW+gkr5F56vldKQ2HHyuLaoeSMiqehamMT1N79rlDy
PYN5jm7i1/gS5aYEnpLX+SVvccX/mc+xrK6vXNtY278VxzrWsY51rH9a7S9X
2ZRvjW0M8ecL8eOZ4MEUMM/nbgrqoiRUa0pkvVBkPS10aC9wECSbV2bYVCaa
l6TZlIrQtVXEJ42kkUrEejdZPuC/Wk9sTLZget+sTjIfEiMXStGTXNcxlltL
MpgToMuj6zfmu47X+E03BHUUBjSLU5dmRvY7sV1zYWlusK6DR5+Q0NYagre6
wsaKiTVpLuI4t5JkVDPXd7Q+Zro5sTbPhwLRgZloQs2uQS20YeaaBGt1VqDF
ZGngsJjGi1IAjwbSQo2O1unik2ergyeLqSOFgcIoqAf4GhasHu8D6hRTJlti
NkZygWl+b0UUDanrbqLi6XCdE+XWL6HzY2GBiEdeznfhlupIG22YlTbcUgsL
vpZGAXcKAtjh9ik+Bi1s3/IMIsX1IcJUA26qjjC9Go7XaxNQ+8rohcnwJLJB
jr9xD5s0UxnZKwxK9bMmOtzKiUINd/C3lnuBrZm9wljKYQfkcyuLrcP9nKkh
ydba0HadKdneT7dmx/vYyQEBMIMcin1bnh/bzyoBersjA7VeR99oCZX2RwJj
Cdtb0vpA4kAxlRVoHeygyfY3l4Q7hThdxxle8LVSE4U6iULtqDZXPEEnY91V
6+It50tQ0jYPoI8k7SAO8pzj0RpYo1PIR18E2V5qiLeZ5MC60y3ziVdyiOd7
GRajQheO//UkxGW23+3mdKtBljOTpJ5PvsGPsfFC3rExPOuof4ZCNvOKxVj5
2FtC7kWR79akGo8JbeYkTo1cdwQ76ANezjsCzmdZ4VZBVkm0m1n4rzID7lCZ
Pga8dL+uzq71jf0ytPJt5mEsrmjXNf0rT3TilTGPWJnSUFDymlABPMUnFBu/
+G1O4R+YXLeO7rbVtXW5/J8ydPlYxzrWsY61re31WNvLgmRbCzPd/PYM2FiG
9WSGZX+SdTpSG/foT1keF2eKXTfbPDbbPGcbCRN1mM0Wj80m3EItYqoRvdhB
7hNA8vxuVCaaDAmgU0J0cbCRl9GnVPBXbP/7I2zIJBsyyoKWhJqQTb8ggD6K
RKk2s1ETjTGD9dmbi8OHnFkyQL62MNZRmOxTEGg/W0xbq6ItVfr3stCcQHNf
Gw2ytVaQ2/1cqk0Ly7c6yzMQeh9uchlqchlichludsUDrJofaD5aHjDdENZT
TM2h29BxunGeeu1s4mxl8JSEMiqiFUXBiODrOLBWrBeoTejXJvCuzEYOlAS3
8gKCkPoKbiHZ3yyIcB4sCWnh+halYOh4Y4jpVXdzNZi1JgKsgbG5mka16BQE
5lKtgl21q9KwZWke/m4P4GaaMDMNuLlaJAnUVxUjnRStDheM1ET0comjhd4z
FSF9Amq6vxXB9mYYyaGpjCldmQBka3s5q7cA2TSw2bWxULI4wlwc4i6NV2+u
jClxSL63clq6MdReneLvnoA3bsr0KA53yCXp93P95D1ZwNNsYCoPmMsDptKB
kURgNE3Wn9aUiYlw1eJQzMRh9gry8TA6T1EAT4iTINieAlbBPvqMavF1Gd1k
hOO+UImWdpFkXaTlBiI76LGn+deox1/QHa82JTnMiXHLNaTxEuRokctqDXyr
Hi+g3fYy+hD/6K/xkEtV8VZ0uDoBfY8Qj3sUilXFOWnCwI8i/LVzk69kxt2i
Iu3ttPytz2SgrxbGW8YxiA+ZUe+zM//IybidS00QeQw34qcrofWlXojCmI85
OWcLxaEjY2Nb0gO/phwYB4CYmbnzkvKfcASv8QqfLzPxnYBnO42z0sIjOcFX
bOLX+eJ3OIL3BEW4zu72za21QykK90xOxzrWsY51rH8OybfXyEjlsrXZ4TZm
iEsB4e5Yus3TTJvaDJdgPxO0w5WyBPNxMWysArHR6SPv9Zc2YmU1cHk9XFrv
BnSitrpIbQwnkukXNKvTbPLdgWzX8lATxWsq+HQi/MpQnvMMBzrChEpCTUkm
XxJAn6b53Buppa8Ni5anug7KfyuxZ21lcaiEGe5jdz3X22RW7L8g9p4WEJ+w
PEqi3Yhm6igDVayRWqDzvYokbHO+Z4afcUaARYIvyNftBg58lWirmh9iPV4f
sTmWszXHnu5NaymkiuJc2ws85yvp02LquJBaHA33BN/AWWvHeIKauT7iZEgQ
RKMg2Lo6gxQM00eaapHt7xSEOY1Whsy1xfWWh0UQjd1NVaAWakgbDS/oLSr6
dnaodYcgIJcCprveqk7FlabgfF3vw801oQrmMdfwheqwkzBdlbFzXTmbPZlL
taFzZX7zFUGDIho3CpZCcxdlR4/0tQPSPZhRDv6SdLVLOl8GLBRujDBm2lN7
K5MHWopWFye378tuILN0db6tOFsQCetkkIaFlPp0VE2mRyOT0sDx768KX+5P
k/YnyLoigN74lYbIqhiXMCd1Ds20PM45EqLlYfClr+k5YZAdL9DOH6yKffRl
gMW5crpFTTSoOc1kqR4j7/Xe6vQRRuh7mn2J1Pk40lWjPsmpK9d1SIRaafKR
tpI2axGbdRgu5aaHwUfohx/Q7S9wYh2xPmb3qO6XM2P+lJf9HxlZv09K+XMu
81224A8FBeciA3XBD+wffoU2+to/yN42i3ozP9xUkuhWHIVPR6Sm2LTxHeer
0I11EWaC5H/ncX/GE6lX1hTMzi3KdoqGyXeCeQYAgNQ7+B5P+CaXv11F9Pub
eg5SGu6u3hIUnRAUvckr/EQo9hp8MiCVrh84147tPcc61rGO9c+k7eLd0s3J
4f6caF+iuUo68npvulNVLjQyjwBOwFt5gEKwtxJxGvFYFUGYTg/Lfk7kvFTo
vFLsvFUPAbowWx3EtjxHIugU0fBUvJtqd5pjZ7pjdYJ1Y4ZDXRxoqsB1usBl
lOXcletYGGGeQ3mc7q/XVUKXzzUDsuVD+f7XAPnU/Fg1Jw4Z6n6TTTWdEJCn
+cQxFq49Fc4PtCWZa6AMrmIMVQMdb5cnop4U0QZLg6a60kbbUmp5/gnepl4O
17ICbeoLyC1F/lO9aRtjrMnmhJpsbAeLtFgdMSOmTQhppTEIks1NvJV2NNGo
he9Tz8QnkR6yQ8AK4AmFGSJASuBh0x0nq0PX+tKe1sVGEkFQk6twS3Ua9nER
06ulIrSnMmy4KjafAg51vlGdjClNxni73IGZX4OaKjYNpKUm0fFWIEKXEWzf
z/OfLaXNlfrNV4aMlkf0lsQ/aRLNjw9ura8dyngnla2Pzz4Rt4hDmwWUocrw
J6Wh1UwfTop3e51wa31hr9iUYsfNlZnekfrsYXHIfFV4e75nAt7Q3/Gun9Od
CKQOn24zyPFYrwnarA2dKaSUhNqEO6kJQswHRV7NuTBugFEW4X5FtAsvAEwB
X8U9+jLE+lJVuHVtjGlXPnitBQ8MeG11K6jVLsPzRqDN2Qzc7cpom3Ssdhz0
MtfvVlsKaIJnNyN2yyGpY/XfR+m8H+ykkpSEtEr1+ygt5t+YzB9xCt/iin/G
Ff0HV/AbLu/3bOZnqbHXiBBde11Tl0dWUR4Ps4IQwmB+a3hTa1BmrIWX49dB
jp+xiao5WZgHzPhf8AVvCMT/zuFb1jbULq2s7KVfVmgFAGrW1k1bWt8V8E/w
Ba8OeA7lM1TWIRX/i0DyY47oK1FRdH//yOaGTCbbK9d6DDzHOtaxjvXD115p
TqlcNjQ/G58e72j5AGFwPh5zW5yPDSyg3ssPP5MTq+ULNzO4CNE7Cdf7jGjy
GcPr5gjT+Wmu9QTfXt6KB7qJ63W4umQrIug0Xv+rWFf1nnSnCQF2s40u741Y
b/BeEcMmC8AzhXYrdZil1oAukVesl1GtIF6+PK48827C201ANgcsta4Pc0eq
wzs5Hh3ZiEmB1yyfNJqPK6KYhtiqexiroPUv4Ywvx6J1O9ne/SJqp5Ay2Z6+
Ocabbs/kRMO8HG5EEUwSvC2o0DvpNMtGlveAJLgiDdnOJCqBRxIwIaKVxiK8
wLdwlloxRKPe4oC5rqTBavrT8rAOXkg4EoQCaXnb3+aGOw+XBg+WBNUxfSJw
xnBTVaytdl4sbH6EC6yVAXPCle6sqmRUlqdhXRpWCTzOCuDRgppqQ0004Waa
cHN1iOFFPwftqmTkVEngdAllriZ8sT17faRKprjknRphe7Po1vri4mhTX1Vq
OtU2CqNXn4V/KqF2F/pWMIgVvLDJoWa5dGOvsJkUkC3JlnrmWvNGJCFVSYhA
x1tIvSso/asY/YuBNhrVMc4LYsqcyHucR2pNh7JphpXJjvMNIbK+uOUW+lOB
Rx8DKwgyp4IvYXQ+Cbe7UhtlVxtj0ZBqMVrivtqGl/V6rbWTxsow7TmOHWmO
dbG2oTbnsQ/+StJ7Lw+vMpBrMcKz5wXejHC/4G32aQBMi5Lhdbcg/q8FGX/m
MX7PZf0Hm/EeO+tRcZZbVaZVeepDQfytrFD1KLJKGEkrlWbHCRDV+s13eq21
eXJCdTHGH0Hu/EeoxUdR8VAtZtJPBYVvCIvf4QrfY/FRHT0t6xure4vzFYM1
DwDM5eXbdbU/Fwi2jTyvJJLn2QTOrwkkr/MlPy/gavB5Mb09Mxub26Ym2Uuq
fhzrWMc61rF+UNpbBfx0YyO4uvK+N/6evZG1uZYnwdCPHXK7IPkPLMZvGcyz
dNpjW107w6vu+ufwhqeSEJpP8twbY03Z3tcaUkBDAqcJkXtplAnR5DRG78so
F/WGWLAk2LA21empCLdcRZwXOo8wQVNiS1kPcetJxGRLXAWLPjPUs+3W2Uu+
IltdmWjvlEQNVdDXOuOW60MmC0nTQgXwkIfzcFySHuHRF1j9c1jDi0GuNxry
PBbakutzCHT43XR/89pc4mBxGDcS6mmj7WV3m2R/Bw5SwVmqZVNtO3m0ijRU
G8NjoSpiujhgsiigPB6tBB4LrQicfqeIIh1lAPMiYLpwsDQuAmWCBl3zsb8t
iHTrFwaw6fbhSF0fx7tIM3WUtSbdy0TM8OquiZjpTFrpSJ6pju7j+Q/wKWUp
aG+n2zCza+4mWlATLbjZNYS5BsLkqr/Tzcok1FRZ8GRZwFJbsnSiFFgeBDZX
D1YiKS9+a6i3qbEwqZUfnkiyDHC6U5ngPl5KXmwLXuqPbxTTKoTx0+OD22mR
dkZqA5DNbkw2TFQnlcbBgxzvYAzV8EYaRGO1ELvrNVFuUzyfKb7HjNhztsK3
nYVghxiJIs06ChAzNX6zFV7jhYT2XHdukHEsTCMDfash1pHpeT/M8UwKXqU1
z2KtnQgM+AJKfyV5UYxrTbQPt72M1/0Up/OXHA/VMZ7dUiVspNClh+1UEW+a
k+yKZwXdZEYZFCWgalPdq1LMC2MducGMmtCertCGztDcxhBabbRzaZwuL9KE
5Z9U4TfR6iFvQ67VIrN9bqKNP4U++FOk/ZmwFPwVTuY7AskbgpJ3+OKfcoq+
FJX69w8Obmxu7BU3UTDPCADEzM5+WVH5Jl+4E8nz6vPzKMuPSt7gF75bwFLn
cQqGR5alMvlOcZVj4DnWsY51rB+65MqKQr1SGeXpyBkG8y8JsZ+HUi6S4deC
iers7P8sYP+YK/45p+i/srI0Ajz1XI2s9C9iDL6Kgaj35sAqIizJRh/RrL/I
Iqq3ZVlXJpjSHM4STb8MdbwoDjUJtj1PsTyfhr7en+04xXaY5Fkv1UDkff7r
g3GLgwXzw02Asm7kzmSi+La5MvukLDcsBK6b6KlXmeI6LCCN8olTAq8pHulp
HrqQahQEvkB3uU6yuBKNftgvCVnszKxIw2NAF/GmlxI99Ls5FHEMjAzWxJio
oUw1kaYaBCutdF/rdg6lIhXZxiDMV4fPlAXOVYbVpBNINjfR5lreTnfSKNbl
OR69FZHzXTk9Qno40hgN0lQAjzAK0sunJXkYoI0v4Mw10MqAZHWYpTrR5Uak
l15ZJmymlr7WGr/WHL/aFNechw9yv4UyuwoDqUGN1eAmaghTNQRIxc/xRlki
fLI8dK4+cnOIAyy1AxuzgHS/VKYUALbmpp4WpIXmhCEbWQHJJHO6253qJLdO
FmS4kigdS+6rCcxPQDWUsbZWl/ailxWHrwIbY6tPSstTiP72tzHGqjiQhoex
WqjT7do46JTIe7HCZ6OVttUdMlrmmUt9EOh0Jt1Tu5+PWG7wXWn0W2sJmKun
DAqw7eku7SmuqXBN/KM/hzp92ZptsdFOAnrIQDN+rQg6z4G1xtuG213B6n6K
0f1LBl5lhGcja8MC3Z5Al9dGM7myhg7jh4EYgUlVoR3dod1dIXW11KwkW16M
cRfTdqICPt5IGOzwb2wP4tdSE7KcC1Itenk2yxWusxKXVLwqyvBjmM5fgx1V
fNK8v+bmvi0ofosv+TlP+Eue4D/YXNUScfrMxKhcmZpHtuvsBPoBwGt45EyR
6I/c/F+z837CLXidL3rtVQGPYNex9bpA8o5A+EsW46FELJqZWZZL5ce0c6xj
HetYP1zJD2w7IzJZ4NjMqeKKn7J5P+XwfsXI/01m6u+ys37NEb3NlbwuKH9T
UPEznuiTvNRbFIyhsQZS76tIF7XOTPfySCsvk09Jph/TwB/VJxoM8hyrU02K
IvV5QQ9Lo839rb/C6X3iY/xpfQxoQQxZrYTJO702OmkLPambs42yjRlgJyBU
OZ9J15cnGwozfJwewvTOYI2+TkTf6c3HjfM8pwTECR5uiAnryHCoT7GvzYSH
QrS9bdWSvEzY4ZAUb2uMsQrO+FIs8mFfgV9HricrwCbYXQdjroUy0/Kw1k71
tmxn+VamwDqYhMX6iIX68PXOlIZ8Lw/b6whzLaSFNsZa28vxdqynSX0OuY1J
i0QZoU00vO1u8SMgPXyagqOQBmcwJleRJmowkAbMTBNhrk60Uy8IA49X0GYr
qcs1QVvNUZMl1PIkt0jMfT+XGxE4A4rrHay5Ktz4kp+TdkkidLg0aKw2am1E
DKwNA9L1fR+iAnjWlmYqhDm+cNNEX7t6hl8mxYIZbDVaEdgnJjyt9pZNpC4N
JLYUBVQURI71tgBbe44wpcFjWb461CRMoLjqIoyuKBgPB1KjQ+7XpSLnKqmb
naHA03BgOHytJ/hJCb463aYx22GmxkfaEyYfigVG44EnURtN1HE+sjvTMQV+
MRD8QVnso6U6HNBNBtoIGyWuswzbSQakLhocaHsFofspUvd9itXHVbH3V5pR
QB8R6CLKG0mS0kAnZpBhNDIiyqo222pc7DpTCM0naNAsPot0OZNJVC8Ku9eV
Z75QDp8vxwgC7tMdTkW7flkTfX+Cb8+haJGtPoE9eo/sogHJpHzMy/+RQPKv
POGHgnzNkjyVoozTghTL+lLB4sKSfDcLteLblhzo3dxK6m9DVuU9kiR/yMv4
EZ/3yoBnx8ijTEsoOcEvPMHn/zuDYVxVWbK0uLbTBfmh350frl5U3PNb6Ejh
p2+oo3WOdt75DlkNX1Bd6NXpH9L4d07e+Eo78dJKWK/+VN+45edrlB/rWP9I
bU+dCtYYlsliJqbOikt+wWS+w+P9hF/wG3bGV+zkrwpS/8TK/reCgp9wBD/i
SX7C5b+fn6QbSQDbaqP1vwxzuNSe6tCWblMY+qA8Tq8w+MYTptVKFXKzg7Ta
QpwuQ/UWODMpNwQhD/i0m70Mq61WnKybJO2lLnZGLY+UA1tzAKAMkFDGSMik
so35oZaieDI4BHEvHHHd3+ZsrLtqV4b7GAc7LcBMC1EjHNcRPmSjLWC80j8O
ewdhcAZpdBlnfs3D8jraSBVneDEWdn+Q7TNTEjwqCWEGO+MstVHm2ngrrSSS
STuTXJ0M7WDgRyTU6gxYE5vMj0dgba5DLbSh5tehZtruIHVPmxuCSFgrgxqD
MUabqJPtbnLDXLt51BQvQ6qLVoqveTrFLopohbe5AzdRJ9lcY9PtRor9R8Wk
mWLyYrn/ak3QTEVAeYpraSaivyKsmevPDHPxc7nl56RVnARtKiCV5ZAmeksA
6fJuKO5O0NTGcmedJNzLDWF5M9HXtpFNqczC9JUHyKfz1keSlvqjl3qi1nrj
Z5vjC1M8+WmhU0/7dquMKU09W4BsZepJU044DmelhTZRxZqohcF1W5nE9a5o
+UgcMBa9vcUAIzHSJ9GygZghiWdlqmMLGztZG7DcQF0sw08JIP254DzPC8LQ
azNV7vJuT6CTuFEFnWWDR/Pse9nY3ER3J8g9Q+NL4Mef+dmfakg3Xm/DAT0e
QAtuXYLksb3tcgJuk+0dbdT8HM5nkm+UJloHQNXdHn2EfPwhQufPHsbv051O
cf1utGfYp3regxt+hjd+vzr28UotYkRkUxp3P9FTJSLwsU2+//u8rJ/zBB+y
slzLkxmdcXmtYZSaSEtxuk9H49Da6i4ebruVpIB8bnO+ZaAouSnjtjDxZ3z2
0Rjm71JX/Xnm2W5T9AaX/xs227SlqXZ1RcE8B26to99+YPoOwHMYcr4D8Byu
kL6rbzHn1oXtV4TcZ5I61otKJzxXfvrb6PsBz0Enj/TtGHhevuf3BJ6R5OGs
f/Yibcd6hdqmnUnZVtLE4MMS7nlW4jlu0kecpI85UfcFQQHVoYHVwZDiMANR
rDov6TQv60tW8r38wGCuDyPJLtfndp6ndneGzTjXZbkOu9nqsVSDmhVBGuIN
WrPNp8tgKzW46RLEVCV6pcVjsRk7XwMdKXUeq0HNd4QuD/Fk61OK2Uu+TTty
mUy+uTjdV8OOwmRQzbuKyH2lHg05dtUJpqM8xFQhek6CWashzVfiJ0tRwED4
cntYebIrxVEbZnARaaSGMtbEGKnjDC7FQu8NsLzmy4ImSoL5Ee54K22kmRbW
4locwUgBPE1ZmJ4Cr3amZwTitq+Tth/kPtxSG2KuTM7sbnYdAtL0tLkpiIS3
MaixWBAKpEa2vaEAnh4BTRjtUp6FG2tOmezKqxeG02B6MKMrwfCH9QzSfHP0
TBV1poQ8I/aaL/YdLfRuYeAGyoI2nubIRpjDVbFJPua+zteLklG1LEoVL2ph
emA3NHvHLSVde9JRlxCAQ1rfg5lpJfnZtvBoCuCpykONNoSs9seN11KK463K
Eux7+D6sMMdAlJEwJ2Z+evRgnpVLFUM30lGSFQIl2dzCmmrS4Y+bmaTF1siV
rvCtpzHARLJ8KH62zm+8wnu+PrQi0SXISSPQQSOLqNOcYj8vQW/UERbKob1M
k8kKZ1k3Aej22GxAzgnsJvOs+xlQPo+CzqFeD8dreDk64g14yXbzdcrodKAd
s1nuNsNyzmeRLXND1L3d9CyuWz06jXS+FhQNgfhaYLF30/x10jyuhTh9TTD6
gGT5ZVqkLSHIzsj1DgqiIYkDTRS7rjfCVhuho+XO7eXI8Fq6hiT1d9z8K1nh
IRxyXzV+qdWztyXASxIN5qZxmusWVxaVuLG9YEqmZL6NjaU+URvnISfxZ1z2
a7yi54Dnm8T2FB7ann9/t7UTvMJ3eQKXxrqWtdX1g1xR8h9wGPP/C+B5rsbl
97TwvBh4vpdemYXnGHi+2Z7HwHOs/0ZJAWBOLmPOj5uUptuIw+KbYpIbo3zK
A4ml5Ox6z/5OwnA3vqPDp6w1gNEcFlUfQykJTS31622jLrUSZ8ohI0LHkQIn
CfVGWypoqtBltRL9JMcx0fUizeqLLA/1xiTT6jjDpiyriVL4WgthRGTPpF2L
J6p3FAdJV7qVYbfy/elrfXW2vzSdRnW5XZjgstBKlz2NkD0JWev03+zwX28h
b7R4b7T6T5bhJ8s8gP5o+ZPkyYqgNJIhXO8rjImKj+0tP9ubBMPzUa43evM8
JkW+A2wyP9yVsA08GHPNWLxhN9f/iZAyIg5szfMMctV2f3waanwFaqblbn4d
oqAdM20ISJ1oc0MYCW9nUKMxRgijq162N3gRkF5hUHkaup5JHqiKnu3N7y6P
D0Hrk51uSrI9loYYsmnm5pPk5brAaRFxSkDqzffghdin+pgWp8LH66PGGxLS
aLZezreFKaSnTez5iU5Avl0PXTlVyoGt9ZmhrtwYCtLqAcREG26mlepv11xA
yQ2wpjmpx+Pu1qS5t+ZhE9E3Y2FatWkwXqRNKOZ+VgS8v1Us3Vzcm2q37Tyb
U73V+ZE4K4yZNsn2dhzRKD/QjBVkXJbkMCAmz1UH1Sc5sLx1GpKhgmA7b/Or
SJ3TfubnJMGG8xKkvJ0EdBJl7Vh5Nx7oIQCd+LUqyCzHZiLXpoaJ8SsIfFwQ
pcWJvZsVQE4ntEp8Nlp9gQ7PzSrIPAc8lO+QUODzgBl9OoamTnS94fxYl2hr
lEwxy/BP5ZOH672mquA9XMc473uOTprOkciHaf43w9DWaF2S0+UEtIog6EZr
ttF4seNKM7amM9iiOPoDdoZKlLc9VicGr1oWdr+5AObNC9KNp0B9cdXlwvXV
ReXFAltSQCrdZp7S0Z673PyfsbknXgA835B2RHvbC/fZzdXzOlf0IYuBbW7q
29jY2L2F0u3tBwQ8u04lZQGmsEPAU79X9mrPMFLHZI3uv7lTE7M+9Ejxpm3g
2avo9IIyUkozy5E290trHa6rpZwZn9vz6NS8j0n7KLLzYoy1d5j5syUyD2Ds
SPsvqKS538i+RegQ8ByuV7XX7f2rOLhkxVjVbZ9C2f6L+7YNAHsDuNeNI31T
DuneDqH7nUe9tBLZcyP/sis96LDijr8UeBSn3r3Liv6/4E49e48OG+uOVE2t
C1W+Pgw8+1dx6CE5eLRCQ/eB59ADtj8If+ve7eiFwFND7Pvlvyg3n/L996Z9
tt/55b2x3Vz+Y2NZ5TtvDtcA01nJSy86an/Ppax7Oz9V7LzfvvL1rsqHf/lM
+8o2p7ePGlD2cGwM9OwOx/pvluKP9SQg560tg+tKnIXBotbA2T6f+W7SULvH
QCtmpgOx0ea62uA0W+k634Bf6aZMdQc+afBtF8EackxHi+zX6+FAG3FGgom0
PRlq/jkDo9aXat2ZYBtpexl29wOi0adMX50UjBYVfCqLoNGYBOrMtknGXQtw
1R5q4gDSOUAm247bkSnzDG9Oznby08mWeJMLEcg7rGCTmgyHoRL8eicNGAwE
+vyBPupis29prGmO993aFKfhIu/RQt8csh7G4HM67GZJMrw2C8cOMC/wM+zL
xYxzif0MvCjciWh9DWl6DbsNPH08ymRp0ExF8FCRnyTeIZtmGoF/jLbWgppr
uZtpu5tpQYzVPcHXhVHwdiYtGm0EN1TxslEAj3uvMJgRZBcKvx+NN8gJcswM
cPZ2vh+E0qvl0xae5smmWNKh9MUa2pSQOCPyGSzwzfSyQIMuxZEMnlSFL/Tk
lOX7xVGcy9mx63ODiivdyeeyvdhqc3V2pJSZSHI2cDPWhJpcQ5lfS/e3a8z3
TSWZoQzOogzOZPmY16YRklAPYt2v1aQ4NzFgdSxERyl1pCN7fUHBTst7pUUV
ra6sTneV5dAD4UYYq2sI0EWU0Rmc0Wlfywvp+ActaYjCQPMoJ7WiEHuWv42X
qRrm8blA8JXyCJOFEoSsgwAoDTtYoEex4YBuvLQZvV4Jm5PASoo8iGwyuig4
rCYqtohKD7XO8HlUFWU8znZc5NjP5IF7GO5UbvB5TsZvCvL/T27aewnhHybH
fJGXej0tODQN3sp1matBTDWRovOwd0OQailBDzkxbtwQLNUMaXUO/uhDnP77
ATafp2AuSuh3eDykJTfkU2aaCg2nb6bqrvtBgMXneeFgJDP4driXoZWuH8au
r61aurmiYB6Z8rlRlvjs31zHdrT9H77wLWXViR0/1M5Kc/Hfi+o5TDs7q72K
XnSIeJ95fsrmfVjA8e3q7t/a2tgtArL1//Q3+FtJOfXsQ85BiW3FRHMw3e9S
kHI+PcCPvaLbRy086P2p+Tlf1eE63QcOphdaeFAHc9l+l74R8Gwf8WILz2Hg
QR0CDNRRctif5ZWnRj/b+CEL2KgCabb3OlTzXfF695BDbqyX9W170t8dov1u
HOrbDiDtk+EeYe51oC70yPAeuo8HI//CKz3o5Pab6JcAz6H2ldSxd431oTsN
vvBuKpF4b3BY+/drt8/7LR8+6Z4x59CwH4KlQ33Yu31Hzxv6Ysvb88CjoJF9
YqkhbjOJEjZ24WQkeWD3p4fe3MGhvaOmfZ5hEuWeAztnURx+QETlw6DkpZ0X
vyRO7+6seL17uKLN3aOULRwCLZ+do4BDjew3daxXrP0sdwrWUIxw8daGS1u1
hSSL1xC52EWWt0LXahxXql0UH/OBLqy03nUw35jto87xv9mYYj4ucFsUI5qT
zMJdv4pDXuAF3m7OsO5hwMLsL2Lu/jUIdLIh3Kwz0T7GUQ358HNPk9MsCigB
eRf+4ENPo09yiDe68xFFkW71rCjp8gQg29imHeW8D2xObY5Vj0hCmP4gnMEp
lP5XBJNzFNurCegbolD9bpbtRosnMBAw30xhUB6jHn0UYHNZEGDam4fLIz/2
tzlfnOi00p0kfZoxX08f4hJGOfhJHn6QgSoKtyVZqqJMNXDmmvF4w36e71Qp
daGGutYettQRPtUQXJoBJzlcg5mowkw1YabXoCA1ks11YSSsg0WNxYEUwENS
AE+4ew8/JIVkhtA/jzFRxZlfw1ncQJvfINrfDSMY54Q51jGJY+WB08W+E0LS
ZKHvSCGNFWzn5XBNmIxYfcqUTYpmuwtaS9OfdFQC0rWDdL2KiXJjtqeGS8dZ
QY1V3Y1VoMYqGHO1DH9wXTY5ycMUY3QFa6yS7WtTk+qRiLqXgtFuzYcMlniM
1lEWe+OWBzOWR0XKIlyyxT0Hy6aCIeeHGxoEUcxISCxR38dOHWd8Dqv/dbC9
ZnmUK59mGe2qJQlzzvOxIoJUULpngmxVqqItF8uw8i4voNcT6MJLO3EzVW5T
5W4brR5Aj99ml19/O0Xc4F/fEjDZHjhaRkrEXCfqf0IDfVzqe2sqw3oqz6WW
Q4LwE/7CK3hbWPR2ofhnfMGvCwo+ZmZfDcZb2mvQnM7l+mjxc5yh3OCz+bEa
7ERqVXxpY0idCF6SbJZJvhFo/xXB8L8wen/ysvg0MMZJlxX+cX6qhj/GzFwL
/vikN+hUIt3BLo+uGul3z9FIX/9aVGzQ6MzEllwm3R5JBfAsAEDZ6uqj5qZ/
4/He4ope54lfU27KqqDKSuh/x9TzrDPrOeARH94UDb7NFn3JFQYPPBmVbpuY
5Fs7wdQ/ACvPM7xxwDbPmlyAQ9PZ7ps7U9VLXVrPOCae9VPsnuLvu7R2Z71X
CTyH2n/ppAkcoou9xhWz7SE43J61n3EC7nXsyFi9DHhe0I2jZpBDI/by4Xpe
+we+6BRHO/wSl9ZRDjzi0du5HS++m/utKS//AFFYdYc78+wjp2z82edt79FC
H4KuXbPYkfO+5F4/BzzTPvvsAewYZ44esM8bR36ktPDs/2cXk17YyBFc2T3X
M/vvdemgzWc6WZN8BKh2GOyAxI71KiXbMcTLAcVMWbclde/u1GVGRZXRpzpo
snaPjWpIX7YRx/dqXYrRsMB+XuTQEK3na/YFTu/TILsLTMK1gQy7mjgwzuyU
vc6HKOMvKbaXot21yKDTmPsfBRifrA0x7k9zSHbXROp86ml6uoBmkoS+j3j4
CcHwiyTMrX4edbQmf23mqTLhnmw7n4xi4tpa2BhvGC2LGuYTOrJcUrHaVJuL
eKOvEbqnUI8+D7Q7UxlnuNnmDTwNXWgPYocYE0An/azOZ+HvdWWhWT6GPpbn
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
NjoH+j2ZKLFapNvD7d7i/sC1Ds+pSqdukhU9TivS7Iqr6kk//fPFISqLDSFw
fzwyniIeSp6vj2AkWweZ3Im1fdhR6LxWFzrJ9s72UsCqnPJUP/vKXamvxIsR
ZeindRaneMxD62ySyxPKCzNGtvULLyVX7QteehdIUc8b8rFxmPu+JtdzQgwq
CSEz/XREMCnNq73meqKFyQEgM8zX5KG3/vVoq9vkYLXeQjse22OxzIsc+jTc
5ESG2x1CpFIP5LjRHSbuDxN2+qw14Dbaffoo1lmuVwK0DyaaHa+NV58k2C0y
XWc47lyCVTfZcqnRE+4JXm/zmaZaDZaaQVHqfsYSwnMRq3MpN9S4h/1iZbQB
2Vh+w3kksXe9H5mnImNZU5UebSWmgzTHtTpPuN51lW4+gzeoi3ucgzlT7H2n
B2+93hKAdPgJ6jHCBgekGTsGGJb4Xo4xP+qj+Z2X+vcSAkYKvNuRr7HaYI90
OQm42Kk2ryqCXXawAjlasafYmMew7wOdEgkBt0oSrpPTHcvS3CqSNempF4nZ
377K/ltayqGIwHOe9jftdO/baipkRP5EKjqA1gxuduek7wGp7wKU35CBD0nA
AYAiYTtyW4xCOmOpDHkaS44m4TmSJ0zJ851UphyN+R4E/qmkwKKsrHtlRYQK
pyTTbwNG0J7mzWs8p7bmqyzO52T6e3jKbgIkT6btBGhv9wz9Vw207BGgf0gE
HrOZ9NW1OanPJ8q9pHoeqaRHRnpkkEEGGf41EKNFIvC6GBmG4eCJycNl5bvJ
VMnGdifERstbIPbfdRfaBVI/JRSfTQ6yxj7L9vmlOv7RWKkhnYB5QEj9SBJu
IPZ+iPE3fNGlQJyS1i17peNuKj+WuFyfKjCbKTbrLbIGY7QCjS6RIowW2nPX
x5jTk23D81OL6/wtO5Ltsc5frami+LlZuJhqOOrc9zO6CoY8WWBZz7V6gQ1h
9hUv9IFEw2Arfa3LtspnHZXPY1UuBOtfqUowmSB7lsUbBD0/66p63FPj2Eu3
u5M03FqN1xzLtSJJx1/rsK/qd7kOV/tfmnGz9csSnrWXGM1UOQs6/MW94VMV
Pvm+Cq5qxz20zyRi75dlmjeW2I1W+gq4cRsdidxSz3i7X+Js7nfkY1eqgoYA
XBruHk7p+Cbh6S/xZEUb+GudCHh+LsrmntfzCyE2NxlZ1lxqACfDtjRUozzV
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
qUYZn3Z+8lWwzneViU/49RikHStuceDXWa1WW07TTdnxTyOtLtirnLBUOG73
7Hs/ve/BqIc9oG1toX13WaqAN/zWiaIQEc4hvJq1rsTVZl+4y0cq0vZCejyR
To/VOq/SCDUn7bOWT4+EOv4Sle+nDqT/lUR4B2DtppTLU8rloDIJ29lBrZCj
VeymsfdBtPdB4CMi8X0iYS9IlqNCO6l0eYi+h0LbRwbexxP+jUA8BFLvMstN
61vDugeKxifrF5eHBaJF1Bvw1wXkmzmQLZKDUnrJhJiV0GwEYaytJk1NYvr6
HjY3Haso/4LJ+g2Fuo9M2Q1QdlPocts17CjZ2Bqsrf5ZUgnxTtQYkL4LoL5L
pv4bRP+BXXa3us6yqyduYorDF/SLUYXzilQIBIvfJDa3RPmweFUsnkbEXKGQ
vrAYPzRq0dZ5r7xKwnw+LiEfKAX3ALTdVAnFknzWJKSLIQ+wdoEcCTPcSWXv
oHMkjEtCwP5IJGs31Dfz+aiOerOp+v+jK4cMMsggw/8wwFLZwabBYNz0zDE6
tA8gy5EoOwFIwnYkUWY3xNhDoe+m0HbSaDto0A6QtKs0/9u8zEfJCR4xYYVF
WY2tnPnFfgSeRcRLsIgPS+WTsGhTCbq9zkupzjyCtMNi4uJq8MCIbiv3ck3z
l5zqzyi0Q1kvnlgr22ueiDY+wkzUzCd43yOm/xYg7gehj/DFh18mKrwK9SxP
wVakPKO9OALk/J6Y/y6JsJtKk6NJ9vu0DynEUzmxd+3U9DQvuBldCrW9m+6r
WV7kuzAAihbbRavjUpnzf4jNc7B1aT3Uglgww+cNTPRVd9eU9JelLTSl8xqj
1tsCRZ0BAxSHeLvLLso/BOoeo0UqDwF29Vk6eV43w4yPeqh946f9HSHo/my5
M7/BewSwp4WpRJlcdFP5Caf4bYjR4ZpM9bUG91k2piJRLd7mgpvaTxjlUw4q
V7C694sS/VZnBxDpWR9Ky1BeuDbZW8XJ8mwtchQ0+fIbXccqcKWgq/kLJyV3
IxvjX8JNbhR4PmrLNqtPNYy2vOikfthN71ik3XlOhuZSkyfS6490eSMtruss
y9livckCw8F8myJPZVeVUzil40lWN1pfGMyUmM0RDOdAs5oExUj9Hzye/TnP
5fwYxRC10GmzRtosxe2WcJvlRovNZIVDQbqJJU5dzfCBqfaJHP+bYwzT9Wbc
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
aqYuuAPyJOe4g8TM5pbauaW5dZTd/Wq//KtGjVvlzyJYxF/lzc6N9vJGmuf6
mfWV6S/ibLH6N2wUj/iZn6soMF/ujV4eSFgcKFif7UCEfORNrkIMry9xq4iR
WE17pVPhJtfqks3qkk2jjC46PzscrHOCFvx4imy5zHKqTdYO0TuJVTgcqH+O
lay72Oi53uOzynWdq3XoA8yoUU/yvW+XpWgOQXaLZfYrHDNhleUq26qjyCre
T81O/0yW370JjgPc4blSbTdE0K9KfJrvdinS8JC74l8cH/0Jq/hlgP7hNOwl
WtTjjny9WZb1RqvHcrNPWYZOAubSC+wlMPznjnyNxTIruNWrOd8kxPyCo/IP
YYbHKHFq6Xiv0DqojrcgeEN4UDn83CQ3I8rB1fpecKq9U7ytueFtJ+1zcW5P
WCW+FQ3FRZ01RSMD5XNzPfz1mc1Dqzf383WPh617tH2719CMjrBrYbGFPtZi
3dFypabxb5zKj+nM/RSa/Ba92ayrYv43UZ03hOcfin/+Y8Lz7zJI7J2Ust1k
1ocQ/UsO63x1pUZrc8RwP2lxvkUsnkUbkqIMR1pmJkTgDRjeEMJozkeEOhyK
JaxmEha2Li8VTk379g5o19RdAMlf5714TMyGpoYE6MtfN6STQQYZZPg/F5JF
dE4szh4Y1GdXYFvacsZG2dNTvUu8OZFofTOhvpXMQdnOpo53Q9qwXLIDHUbE
lev8xPEx2+7um03N33IqPqVQ3wMp+yQRB9pspP7rhV1KeHZCrPfIpPMFcdFZ
FsMcW1GjLVxnxqPqtBYbJuK97hDSPgTAz/H4h6EeetrXPTWPZtidrSy0syMF
3ykMCSb7jbUGCttdV+uda0CsfYzFz17GdxMDj5MJH4G0vRBL8vhdbs65iIBb
zuaPjR9r6V6zVj8ZbH6JnGadnuMSEW5QGKleGvBze77+WoPXRltQR0OUBxR7
LjnoBM7kZzMFba0LlqqHYmyOduH11ppxoyybgmRdS2cNYx+7CFIe0Fk5PNUm
5g8j8MK2q8qvOc8mXlv4whuiDR5vaWBoqKqxPA986Q/kuHdXJ/KGilYngJXp
ehGqeNmSDKHFRIK17kZOkqeJk9olB8VTYSbX61Is6pJMIg3Ouz77MVzvFCv0
6RTRcgawLo9SDNU5Kvmil9rxWIvzpf536jOVx2mm/AacqNWvs8As0epcgOYP
qTbnquMkLzFYpJn1AdYviz3M07x1/QzDAxWrX+lPc+w2mnHiTjd+i/NMuU0/
waA6+Vme2+Uww5/cVQ66Kn3no/FTuMGxNPsz9PD73fmGUISy1/NT9so/umke
CjX4IQtzFopQyPV94vH8vK3CYT+NwyVhykHFPg8I2a4N9V1LPOH2e0PvhGi9
m1sZn+lrl+Fpk+oTEIjJifWshrLG+usXeRO89ZVVWCiUZgvf9AN5686KpdNv
WdrQiru61DjMbWshTnVl8wdShtviX1RlXKTh3wepchRpl7ctXs3+J/jG2/Pz
/1aG5x+Tmf/kOEz6WhbaBl1ywVSmHJW2B4I+olK+o5Muc2jqDQ2B/YOkRV63
CJ5G+1NsdmcXoWYPsHjTxlAMb9JCZBVGJjaEnbyl0skJv+5m40qSC5vQOTu1
LuuuJYMMMsgg5TDTsIg1M8Wanunir/OkTjQbbyVzBNtjfTulM4ogFUJh6uQ0
rpv7tJJziAr9gU7fD6GazJ0kym4ytBtkyKPlNqxfre3QZjBiylPoH5Hwl7Kj
rTAPk7AXGRG3Rv8v9r4DLIqre1+63WhMT0xMU2M3lliiiZpi7F3sBVDsiiiK
oCIKKCBI70XqUpZlZ3fqdkCK9N5ElCJ96Wz/z8zuUjQmmnwl/9+373MfXGGY
uXPnMve957znHOr+igSjGNrlo4DHVGb8cJT9Lgh9H+ix2fzQ0UOrrp/5xZdq
vwnwXBlmZ2FvCHpuKaceaOaaJWE2xxhec+KCJyXEvwWzicoCCGsCDH/EBCbT
4qdHP1jse+8XR8udVw4ZW+6zeXDdieHATbv3PP0223OXq+lc2u11OaFHcuDr
NxGPWfSIz6OC5/s6r711+uilTTH3N7WnX1KUWHfnXuWilsZ+Foudrv4a5GJF
9xSk+rWXUyRNSbLOUllfo0TaJ1IFJg0VOA9AuVZ3ySRtXcKatsaSzqb8vrYC
aU+VlKgAJlau78oMSFXV5X6uNy7s+eHSru/Mt89zPLo8I/B4YcSZMIuf7PbP
vm/yreD+ViH7Ql+qZTXtBNN+ve/Z5XYH5lrv/Npm91f3jGcEmy9m3F2XE34s
xc/Y48T3Vlu+cdg7A3L4tQE63pFsls+1tGM6/5IQ8luA07HLO2+fXBpq+SN8
f2Nu7KGmFHNp8U1FqY0oz7IpyayMformuvv6sRVnds6/sH2G5dYvXI1ngp77
gn1Onriw9cChVccNF1zYNtVqx9e2e2fe2P+theH8i9vnOh6an+B68Cb17re0
8OU0mn9eXl1Pd39KHHw9Fol7cp4VxRWlsCryyqvKWhpqxL3t5FxTjptYrhDJ
1QOiHDtlgFw3Kc55JJLGN7c5lJWbCtjHIjytbx0Ksdsg8N9ewLjgj9z/Dowd
AaFE/mGEP6jxXk9+M/iYvyLX+duNq/4DIZo2kfMK04eBUSDwNghPgVmruNzT
WZnOpaVIS2u1XN6tMn2psieQVdKJuCypVFVSpVsueyoVpXa0QDVVRS0E4RGT
hEdj5NFAAw3+l0HkVZbL22SEWkKkdiAo6/4oi1sp7Tn42lxF8BxZZEuzRWXZ
b9mZ33B5H7KQMYxEHYChj/GIBLn4LpXI0sbRUibeR14gPGwdBHkHpM5nxW9g
he97YGty9AeznVPvmEzn+BkCwJVjTI9ZYCyxT0d5Bgj7Q3rCjBDvpU7Xf71n
vRYI+xKkLAh13Xd63dWDM/3N5if776Uxb29GIt5HQPxgPZQ1DgbmgOG7BVFG
KZQ1WMR8MHIKPfrL2PCp4YEzQ7x/jfW2jL6Wxrne9vAGy83w4qbP7PfPjLb8
MT32TBDHeRM7dBoj/DN61PS4kA0+NjdvbElwXJsdbvgYPMFAb+xg+nxKC/8y
JnCnj6WDnWHivV2PqJefpfvXFdBzCwTs6uK05xXPW57JxR1qd59k8NqiXJrU
tQWkclmvXNpD6rtVpTXkZNHJalFPUBpn7xXT/ftWndu71HznXMdjix+FmrTy
rCrpZ/i+hpDzmuKoPZJH5oqCy+Ici5akC5XM0/yAPaHWP9w5OtPa8AurHV/e
3jvD7ehij+Mr7PZ/Z7V9nv3+eajLxo6H5tICy8a861EZ7juxyB9DvbabHzyx
c5Hl9lm2++a4mi6MtF4t8NtTzjguTLsoK7nZXXyHg9icdzPbZmlsdGqttckC
x7NLXL1PHKe4rgi4v8zFdr31sX2n1p049N3F3bMv7ZiBc7OL2+fbHV7q72J6
It7jc2bCx1SaITUBflzZIZP113TAb7VbKm4V93bLpAO8UK5y5an5tZQcDUJU
1kjmQBb09oU1NFiXlxvm5C9NTv8c5XxAo87xddlxZtuF/fPuHJme4LbfieYy
hxmnDyNkkkC+FjyY7fyBMec/T2z+oLGHoaqy6aTJiK2NYrooG9876DGxkQzG
+zDzKxT9kZ98LDffrbo6qV34VC7rkBP+aIIjEkYfUt0skcskUplU1CeXdijk
+P6lQyIWyVUVLjSERwMNNPgfh2yQAac/WZtSotNJrjvZcvmDpiaLkpJNWVkL
k5I+YbOHw/AwEBoGw9p4gxBdjK+NpZCaZN4rpAs420EnQtRNaKBnThhY4Evn
3/Zw2Xfy6DLTo8scfU5eYrrPBCljIFhXncZfF2WNgqC3ExPeS4ifAIOjUGha
TOj6K4cP7Ft44eAs/3t77kFu3yHxY1CcILFHYuAsJMqK78Mu8HtU5EXL93HM
8D+S/GAFFj6ZGf8egz49NnTfbRNni5/p9huCL66+vHXqjd0zgy4sLUw4kZNx
KyrPyyo9eB0v8ms4flmY1+HT2y7vnuN24lvG/W2RDJuNTN/JjPBpcX7rHU6e
MP7R/sgS1zMrI29vE4Rfjqe7XwL8TkU5OvlYA9H3SzKR7uZyqaRZrOiVqvMO
v9yUUPtqCHFFs0Ia3VSzDU1c6umw6dKho4dWXjT81vnk0qyIo+Kc29KCm12Z
V1pTznVnnFUUmCmKL8iLLORF1tKim51ZVs+453PijCC3zSEWy52PzLbZ/vWN
7d/cMPzWatf8G3vnhlmtKo437s64JCmwTn3keAoLWh4VsM7O/NLFba7nfnY4
9K319qk3dk6/e3i+15klMTdXPwzamQ+dj0Dsd8d7rQxzvxByhR59UpBwJhy+
cwSN+JoJfEBnzIoO2uhrfcP7ZIzfkVjH7R4X11gf/t7q6KprbuYbEkLeAcHx
DGh2SOhFEMppahINivF/ccEdGBSVHFlM1nrIliriO3qcntWeKy48kC7YLmD+
gFEng7SxTFAPREcwmJ+G+P148fD+AytO7Z7v4GByPM7rc4img2CEYgcn26q6
D7x/DzP5d3Keod8h4rwQonSXFpGbkaUDs/RB5G0Ym8pibxDwzHKzA549wzo6
K+XyTiVZJAiPQiKRiSSSXpm0l1T4EDofIgeoXGPh0UADDTQgRKVqd4KUdC20
y4l0bblyeWSH8Fplxdbc/JmClA8w3miYbQCy8F2ntur9zNJCMC1SO0E6sPrd
AS/6BfA39igInM8I8032eFru3Vlxpyn/Bg29vs/zwtJ7lsvDvWaDCaNgRJtI
jTKgfCD2uWSdLG0yz/NEgD7b3/37m2fXXNp92OOCITPoc2b8aBjWQ7C3Ydrq
OM9Q6rXa9NuiUtuO0uu1RddzC+ypuW7nUx8sgqNnRAevtTpuvHuJzf5vbffO
s9oxx8pwjte5ZeXAye6im60Vd8vy7/kke30Hhs2IDPrF4sSO3T+cOLTY2Wnv
PeCWKd3hssDTnnvvpofR5WPfW+9ZZLlr3l2jBbDbQUaCzdWYaxYPztre2mB9
cvE9iw1AlG1SHh0uFeTUV7QPLqn5u2of8hv4GpXV2XA07+GnCOPThOjlzlf3
HF17Yc/iG4cXB1n+mhSwrwo07c40I4pvFp9XFJ0X51yooh959MDwMXSqM9Na
XmYnLrFpf2RRh50oiNzDtF/te2ae3cGZV3bNttg178aBBZ6nv6fZ/poduh8B
rx2DfBclBO2Nc6JA14tQs+yo/QzHtd5nFtjs+urKps+u7fzK6dic0PuGd+h3
1iQG/ErzDRS41BfYd+XfeJzr5JYSNBelG8Ccj4G4/bAXkOFSn23TnGKexTS/
43Rgj6Xh+mCH6WDcKAQeDmPvxiUsiqTcy86p7ekZcvMv0z5lKJdM9qyrk17z
zKakeEd2zsLUtK/47GlQzGY4wOGht8tDNxOB30J21NtQogEIjo2nfOHrtNDW
/PuLx3/zdJqfGDcWRrQGJt5/xS31b29KpZA2zNYB0VFM+F2EPYWX/H1ahnFp
qVdDI79P/Iysw94pV3RICSWziBT8SAl5M2H40bAdDTTQQAOyqARh5MGX5yaF
olChiOvuu/nk6YGcrMUpvEkseCQEazExsqIQD2/apPBYnV0EpyjKOKwX2pB3
tTbCGsdkLIr0vO5ihIYYPYFP1SZdiOTar0v0/ZgWM47BGE4Ec/2JtlMPZk9g
QJ/FUmaHuK+PcjLmhW7gRc2AKe+A1PeZsSsC7K5abKDc/Kkwarui8JKiyExW
eKGl6EZCpudOOHBWbOiye7YbTLcZ71l2Zvv8SzsWXN21wP7Igmib1RmhhvWs
0018yzjU/gfwwcf0hJmBvottLVZfMd7ndfki4BgsuFta4lJXYFvKOQ/c33rr
0DyLHdMdDsxhOe96RL8CsG+kZtjlcy5hoQcDbm3xvH/CH/Zx51PQskdNPR0v
D/VL645MrBDxWp5ufMgag4DjIPpMX8c1Z3ebHPjp/L4VlnsX2BvNirm55Cly
gEiAXHJWUXBeyDnJurfB/cQ8nwtLEu7+lhm1v45zSpSN3/JlSf7FtuSTVYwj
3KB9zpbrTh5YfnznEvMd8212zwqx+jUw7rohHLAswdsacy4qcBRX3BYVXG17
aFYJmCT5bo2wXml3dIH54flWTodNaG6LaUGrQ+/a+51IjTnynHOqNsUqmOO2
GE0YgXAnU6P3hd2MpV2sSzIXZ14uSL1lFW+7NOTu54mRY1FQB2VpY/xREOdL
KvNKRk5lZ/cf2bnUgyKRyQpaW+4VFWzm878CgPGJCRMSY76l+tmn+BWX3G8o
usUvuGeWGvg1EqsPwzoIMhKkT4yP/TAs6qN4YBzE0vlvs5H/eCPtqDC+HcDe
4rBnJiVtTE+7lJvjW/2UJyLKlTYplLVTZTgkZE07DeHRQAMN/sehzGaCb8Kf
iPrQxibH8kqT7OzvBamfw+y3AfpwBlWbSRsGQWQ5RfXemYiCGeKu+r32O4Rn
Xoj77hO/XTVa4Gu+kP/goA96dyUYNh5fIjGWllLS/IcveW2Ea4DwJ8KsBVD0
ZZ4btdiLWuJ3Kyv4V86DyczI7/wdDhmvvHd8bn74dkWJpaLovKLgTGfWBYhn
e4DpNSUxekpM9CJ3x/XXz+49s/Pk4ZVX9y66umu2zZ7pTsYzwy2+Sw85Es5w
WAZSxiLYeBD9OD7+64jQhZEBu8MdQqLPVvMvirMtelPPZ4Xscj4213LnVMeD
c7E7O4riL+azrzXku/SUeLUXB1VnRebmIrk1RfmNz+o6WvukkoFRfuX4E2rT
ElGXeUXBR2xoJMyYFBe2xMN+87Wz+87sOXbwh6vG34Ie6zsyzihKzBRF50Rp
J54lGMXfXn913+yLu2Zc3TvT3niWz/k5rPurGrnGRJ7kYjNZvvmTlKu+EZcO
2Z/ecclo/9ENJge+v3p1u1ms8/dwxJLo+yfvG4e7b8mO3d/APyvOsZTlW/Vk
XXnMuxISeNLo5pHNvrZLgYgZjNjl3vbG5zbYm84Lv7IICzroynBeACWMQ3gz
4ygbb528eG5V4JUlPLd19MSLRqDHF4zIUTBTG8GGoRwdTDAW5K7ipEU+e94q
kaqH4Pdj2lTjIJcLRaKc9vbYxsZb1U+NCwu3Ctg7Qu/bBVo8jD/dxDlXknTd
luU2E6Lo45dgcbVYHD2MOxzh6SN8HfSNMiH/n2lc1V8fiunB8DiQ8XEidSYT
WC/gXMzL8qt+nNPe2iEVy8jipFJNcS0NNNDgfx5KwtMpl6c0NzvkZO/kcpcw
mR9RE8fFJYxKoBkwAC0mYxiIDIPYw2C1p4AMtnqjl7M2wh4DQtPCAn45u+vA
3kUX9894EHj8LOI9BYwZgSLDMPYw7M8z32ohXH2Y9wEIbWb405NsnxffbKu0
y827a8V2+YYRNjPad5v1/gDHnZ2pFopSkvAUnunLN8/NuHmL67YYDH8bgt+m
gzMoEduC7rgEmzN8DoZa/2x/dOFlw29sDs4OcT98E/KaAtN1Ma4Oxh8BYe8w
mDMSYte525id/sn74hKO+7oncYfTA/c4nfzu0s6Z9gcX0+32CwIv0H1PF/O8
up6yZZ0lst4GsbhLJJNI5IOT8/zBOq8St3Qq5FBH89ZMwbtA7PvM+K8SY2ZR
whf7u629Y3by5i4g/FBnDs5kLogfnWpETFKopx28THebb9tmsnb3vhXGhvMu
7Z0Wc/vHJv4JRfFFRdHZvoyTuRyL60znpfHB0yPDFvi4LLl7ZYXHrXm06I8Q
aG6E73aLXWf2z7ltMjfAcgVyf1NxrFFb0uXSVDtH0OlHis/khLh3IOQTkLHA
++6WkxtP7JphfWiGx/1D5+ieU5j08Sh/VnzsauuTe/Z/f3HXNC+zpe4RF3cw
veaCoQuwqHlY1GdI7Ltg4iwAtC+qqOoTS9V3qVRu/3HeXzFZFaJeJivp7c1o
a8GKsuLj/SLvnUhwMKT6nz9PcZvKoOqj7GEszjCiCAVfFxPooALt/1HCw1Fu
LrQQth6MGTDBEfFxb8dEfxkTuRJMNErhhZfkP+sUygi3llymMfBooIEGGpDL
D77Q1PT2prc0Uxue+9TVXax4vD8372dB8myM/ykTfSsRNKDDOiCRRXAYgmmh
LC2UNOPAyqxrbLwN2nVylSlkXyA8wyH0A2rcAjf7NdeOGZpvOx12ezEU/RYC
6mJsrdfL848THgOI8wmNts7nhvOt9SzvjU8YxhXsiy7MWzOZ4Z8yKL/42Vjf
MuT7bHsCG3dnnpcXW8hLr7YX3+Lk3DcVBL+LJI6EkRkg9QI3NLXAtzXTpoZ7
iRN5+sbVzQdPrTH1vPAbFD4ORbUxLn7YJIi6DKXsAEMO3bcw2b/0wvZv7h9f
JPA9hDw4bWO5ydzkZ/fLB9Lj3Wsygcc5UFt9gaS3QSHvIqttyF9y38hVTTXY
Q1Z8mZrz1EklgbUV25MS1vMi1/NjFiHx0xhx82P89/lejo4+1Z5rJS+52pNp
UYBcvE+z2RjjvDD43lLPOz/amq87t9Ps0np25PGe3BuKUit5rlk75zibefko
02cSSB+B8N4C0YmJtLdpiaMhzmhMMC0q7NfLRrt3Lz6xY+6l3XNuHpzjfmJh
ot16RsyFi6D7N2DsSJSlh/HGwfDXUUErHS5sO71h/+lfj3lb/ApEfARhY7Gk
yYm0hS42v5zdufvQsouWm85G39wAuB/h+nrkBvrl+15MD9yOhVk85D1qaRH1
Zx9UK5fxAepUyDrIomWyl+ahOoRdpkz31CsRNTfVPylOL0tKSOPF27GApTA8
HoJ1YUgbRXVRjh5K1ArXJlTuL+YYfHUx0H9He0E19KrPr5rYf2IgJR3HAz8l
w7hY2jCqy4RGAOAEBvQ5jM1GWb8IBCbZObZlpUG11czG50VtLUIiQktVQF4D
DTTQQANlmjcyLAtfs+XNCsVjiSS/u0fQ1hbT2OL1rMGisHJbUsZCGP2MTn+H
ljiGnqhPTzQAET2Iowtz9RCuLk6EIJS0rvO0EIEumkSsQaQhCCczpOSY0B4b
QNgEOvBpTPS0MP+pCdHjYUgfY+uwONpEvjWu1p9ZjfD3/HCINSme+uMdq2MH
V9gZL6RcW/0w3vwueG8KGDURoS+P8j14yfD2obm+F5bGO/yWEbG/gX+hN+t6
0cPb11gen0JxE2Hgx3j/25Sbhcl2slzbvmzbLJ79hYjbc/2dpsQ+eA9BdIgi
X6yvGZHGLO+oLC/2o3t0hpWn/R6zQ99fNfkpLuAKHfV9AAYyEEpxVnJH4zNZ
r1Au6SJXb5EqNWN/SJIqv04fWWa9Xd7d1F1b3liZ3dX8mKyYoEpR0w98fX/S
J4Sq+fS8ALTQzz87ZJ8gcjE98CTVOSnpjqjSWV51tyn/bizL3ijB6cdE3/m0
oG/igqZG+y8KcNx997TznX3JD4zrsfPtPPMS5gVvxp2fmOFvgRD+OHRwVoA/
I4SL350BmvRhIjDHx3WZ9Zm1p3buObTymOEcs21f3T2x1C3QfD8zeBLE0Cdi
7vBfwcYxqZ/HBs0JdPnWx2kO5cEkEByD8AwwwVgY564xXwR7zHSx/s7nxpKY
+xsT3f3S/SvLPZvKHB7luCSkR2bVlHVLSI+eiu+ppho+WKym5x6VZZHP6zNF
onoy6YEymF+ZcJAsd47zIoIaqfIDy6VyUVd3Z1thS3NE/fNL5WUbUlNmovCH
AHMsHTQAMR1SXTYM4ZExTUoSztXDG6RU13NeVDIrkyeQLGJQ+8vs6C/JpIm/
DiJXg1L8T8SkE2HpGPmBTfwIJhM4w2wdmKULYwYwYgBC+gBjOI0+nsb4JJEx
C4R/xbhH0h9ZlZV5P6uJb2hMbWsr7e6pE0va5LIe9ZBqoIEGGmjwCqgS/yqV
zF1yRYtE8bhX/LCtPa6hwa2m1rK88nBe3q9JSQsw3mQm520aOgpA9AFwGMAg
3ttEkWiBDiTQYaUMw/j4W53MokawHR0ioxpRTlEf4Y6E2SNhlgGGf4cwFmlj
PK3X8Ergi9dwkPUxlbbonsPWI5tM9y67fnJlcPRNUzDgAzDhLRT5lhK6+dL+
M9umX94x/dq+eQ5H5wddWprkufURaGUNeX0GJrwH0Vc9cDp+dZvXlR8FLr9V
UYw4TJvDzJC3IcwASdJFU3XQh29ByI+J/j7cu/Uljt3FdvU5jqnYvdDAm1Hh
7tnZnKrnZTXC5+3dHRKJeOigqRMPqvLBKT90K7ofy5szuh+jeaBPpP0pL6uD
WIyLsOnxy4SHSFAoF7d3VzQ9owhLnSsL7t1N8fmJ5rnb55KP+8FM6vEagWVB
sq0vZHsNuXc/I+hOWsBxnt86xHd1rMtmh1PHTFbbG38XcfWn5FDTOOD2QcAX
v18DoiY4wQQI0weMkwGeDsIbDrHH08FJlNh5gZ5r7pidttrifHml962N1g+s
VgERb0OoLpqsg/DHQMBXSNR8OGwWPWxSQux4JjIC5emiPOUD1UPZBjA6GgDG
0xO+pEX+HGR33esUO8L4KXbmcarT00p+T69wUMZk9a3K5a0Kxf3K8u+52GIO
e3fGI+ui4oiG52li0TOS+ZA5jIgcjGJCyy0lS9OqsuvhI4Z/v00urxCJBMK2
4Lo66/LynZlZs9m8d5j4DES1QLayxAPZuDgL0lVZeEjV2UCeBOVQkOFORJkt
ljbZCM7zFy1Cb1pOXUl4OIQnF8WGIcgwGBmGosNQ/AM8DEGJvyOYPQxkaYNs
XSaqR2OMpNLej4uZQotfhiHbU9PP5JferXwWUfc8qam5qKPjiUjUKFNzaIVC
McS8qIEGGmigwWtBmYFQQqqa2xSKOrmiQiLN6ulhtwljGpvv1TVeqqjdmVP0
w8PULzDkXRQbCUJ6TGwYg03kvEWJHbcOYVvgkGxHRXi0UWLZ1cdXXhZXj9jV
ski7EG8YkT6F+wexWjjh0YdYEwBwWkTYSiebjVbHtl49tC/adT4zehSMjEbY
0xMiD3hfDnTaFWD5s73RfEvDmdaGUwMuroASrp9i+n8EM96FmctDXXad2Xxu
xwyPI98gd9bH0m9vYUaNxJK1sTRd5OFwWPA+A1wZ6mTuuIdHMWnLdxHVAS11
GbV1ZU3N9T29nRKZWP7yOjKwtsjJeqod0s6auqIUbqwbGmheAd5o5N3meB66
a7zEfMccf9tj9Y/zFYO8XP3nIGwa8naRMLWr2LMy2cYJvfdLnNuaW8eOGy21
PzYvyuYnftQJOvMqN83paalnVbHzoxJXar67d5LT3cAz10+vvrpz1u2jS729
T18EPOcxokcT0UwDYf5acL+Xh6uN8IcjvElMxm/xvl7Mm4X8K0UCq1DB/c2s
6PdhxABNGguz5sPR59OC7heE3sgM2yKgfcFmjWQJtFkCLdWj5GkR+plkA4Q/
mZ74432bfSfXXzeZH3ZjTQ7m2dlaLZNLlQXX5P0cmvzapFDcLi//HENHMZkT
QXQyiHzHwbamJJlnZ/tXlCe1tzyRSZXpviWEkYfkjkQxBbJ2JunqkpKmtFa5
vEosTu7qCmputnhauzG3ZCY//R0Up3MEh1H5fWD2IEIymPDwtGGcEXFIwoPp
EHkVMGWw4X+O8CAqtqMFw1oEz8EbNAwG8c+6IDQSgCbgpBTEZnGSVqc82p9X
bF1W4ltTzWxqTO/oKO4V1UpkQjlZOZWoq4qTQ7lsyFTSJN3RQAMNNHgzKJWm
EjIJs4jMY4a3Prm8Ry5vlysa5YpqiSynuxcTtgc2NtrX1h8vLF6bnvUth/8Z
E5kIwOMAZDSEjUTY+ihbF+XqEI2njRFhNSMQbBJCm8mK/wqOnwgyR4KYDsTT
IVeiVy06WmQSEj2YNQZE3qdRJ8eETY4M+JhOGQMx8W++BTGXAwGunLvVGddr
ueaZ4Ub3b249evSHC1Y7bQH31WDkeAQZj2AzKRGrbltuM9588sgPt+8evAB6
zyKKWQiGw7wJEOdLiLOSxTkHxgXSPMuyY/uaM+WiOpmkk0jc/2dDJRF1NT8r
rUgDKpPCywVBUe7nrI2XhV3/uQ4935txuQY+RffcY3Vq9b2bJ5+W/T7hkeD0
Ev/SV9NeQU1j21tDrj/Eevxse/zQ3iUW27/xPbU01e8wx/8Q7Lu3jHGuNdWy
p/BGe6lNQ8nN6nRrdvSpG9Zb9lvs2BlktwSkvA1Deji3RHjKRHxkCmIOWTFc
yQF4+COYxKQdYPjCyXc7C2xFhTfz8+5d4QdMhWhjEc6XIP0MJ0iQ715b6fyk
/D4lP/I3Lm0sjIzAWBNw3shMHA+CI2COLpqsiwg+BoAl7g6bju80Nvze47pR
ea5AKumT9yeSHrr61isUNyqqPmPz9GBMF2brQpgBBI4Bme8xoekIvCaJdzIv
y6O6CmkXlkglTWTKZYk6/zfp7RqQRMnImrZEDnCZLKW7N7JVeLO2cX9h6dKk
5M8w7C0INoAQHYLGDOYkxDjgVEcPYhtALH2YpYuwdBAV4XlZPPMmLq03/RXO
MJiljbD0YHQEBI8GGRMTEz5JpM3BsJ8EyQceZVsWlrg9q4tpbk0Sdhb29NVI
xK0KabdMKlKnEyRir2RSKRF1LpW+GHWuYTsaaKCBBm8GqVzVJDIiXyuZwQx/
x6pqF0rVG+8uubxJrqiVyUt6e/ntHbTmFs/655fLHh/Kyf/lYcZcNn8ywpkI
skYwMF2IjdMePYT1IUjdywu5X0K5lfVgb3L8LJQxCmTpQoQnQgsenD5uYCkh
CY/KZ6GNsvQQVA8hUrLgO3R8X/8JI/5AgjMksOsrsFEUXW9MtvKIvbbO7fJy
b/sVzKhPQPoIlDsS5b0DIF9Hxyzyur/6zuW1gbcXMcM/BBI/hTkL+ck7M3Os
yx5HPG/Kbm5qaGuUiNoVst7BVoqhUGq9e8QS4dOWp+zs5MAoP0fbc3fPbglz
OEyNuWnpaHLSfE28z96OdCtFvmVXjlUKds3Wz8wu5G5JVfHL23A5McgK0orR
1dmaz8qKMoYDFlL9frI7dWj/0svbZwWc+iHb2xiz33rfeI7n6YXRN1akBGxs
Tj6lKL/WU3BdwL15NuLm0iCnr6iRE2FEnxC0CIic1QSHJMUtpNKVXNZJwoNw
JifGbPG+4mC3me2ztQowyeNZ3kDuzQBjxsPo9PjwY36XYgP2lzCNW1Mu8ZNd
9iIPPoASPkfiNidTjNPjNnJjZyCJb8EEo5jABKY/8PvhloXRlRMgPbpL2NI/
QPIhhIdgK9UKxZXKJ5M4Ah2CY7CVhg4yfSVLB0JHQdD7CDSDha0W8E0ys5wr
H9NbWkrEkjZFfw2FoSJolcqZsPm0EcxHntHTS2ttdaqrNSkuXpGaNhljjwYR
HRDt19Xj3HgcyPwSA2agiZ+BtHEgQx+GtZWOpL9CeP6KgAcnXTjTG0kHxzPg
zzDufB5vQ/rDU7lZdyorIxsaua1tuZ1dT3r7nstkQgVOb6Skjauf9JF/dUTo
FfHHKJFL8CbTmHQ00EADDf4e+lcrckONMxzSy0C+cElXl1ypLBUPKiLVq6y9
JVc8FYmLu7oFwnZKQ4vb08YrJU93Psz5np0yC+ZMAxI3AMFxWX7PHvtWl7lj
BSGm3Kj3GEx9CN9999cFUIlPBhIvq6QXXK3+wBZS4Ykv5SNg1ue0mB33L9nZ
bOV5ba1jHH/MsrwBu89ICB9HZ46FWcMRrj6WZMBKGoFwx0LYhwAwJTZyQQLl
ZxZyIO2RXUllXGNzemdndZ+ojcw4/WrISX9Ls0JUpejIETUlFVcwXflhm8Nc
Vzhc+cns8JZjm4/dPnWS5vtLpMs61wuXbXbR3PeUxR2r5lhTMcejCa4nkMi0
uip1PgC5vL/4FhlNIyOGVtIrFSY1FB5JBebE+a68dWr/gWXm26d7n/4hzf9k
rP2eS7vnme+abb1vWqjV4mr2acXjO70ld+CHbtuhUJzXjSEkUknDYcFoCPsY
pE+HEqYwqe8BCaNAph6Ry1pFePRg9le0mF/szYwOL7M9NCvMamV85GkzyH0a
TJ2IINMjg7dcPXzZZLHnuYWgy5ZI6o3dYNAsZsQBjj+1wCerwgcpDLj1KGIR
O34ERNeHgXeAuNnRIdYIUF5XQ8wRcsrI1NksxSoxD1HrqUIhv1D+5EN2EtkT
VdNS2WHIGlIwSw9Ch4PoRAj7msVZKhAcyM2xfVIV1dKWJpbU4CdUBrf3cymp
skyZyv2qrMPVIJMV9/bCwnb32rqjhQWrHyZ9g2HvMqCxAPRRYsIPjAdX0yI9
cyOupT5Yy4uZhNCGwyDOeZSNnFp/TGMGqnFpDRSz4KrzNqi/A6sCx7QJgxLL
AMRGAvBEOvNTBjwP5a3mCQ6mp18uLnWvb0xoaUlrF1Z0dz+XSDpkhDVVqo7h
lw1E9L+gzSEnC9GkMrIAmYbwaKCBBhr8C6Fck/ujrGUvNanaINIPIrOKXNEg
lT/uk2QIu8DmtrDnjR6VZeEFvMIiSkdZUFeJZ3GWzzXIfzKNOgJiEUnkUAHZ
+GrCg68mfKVfhpReEK3f1KO0/Ogj7EkJ1HV3LI8eWXnnyKxE259SaBcvYL5E
iSUsWRsV6CB8A4Q3CmRPoMOTQWQFP+lodq5j5RNaY0tWe2dtr6hTJpe84q6V
RVT7CCGTtFfaJu8qUrSyFM/CpSUeTRkOAPv2Ifq9z+ICP4wKnhrsNdftzvwA
j9lM6hdAzGI/J8PTOy4fXOZ3bgXD39QNdP+NHrqDCwsa6skhJHw++Ir2vKev
pK2zXULu3KXEIiaVS6olHfeqsn+k+qy4eXL3kVWnd810OLMqJuSKg6/l7ov7
DE3Wnzm6gua5R5jroHjiJipzgdO912LRb8GoPpY8AkmZAHGmgXEHuQ9cHj24
kxZswg1cAT34HKCMYwD6IKoDcwxg9hc06rK7VluO/Gq6Y+6NUysdgi/vhB58
ijAnItiUiJCfLhkf2b3UbMcs1ysbb1Hsf2aGLoz3tUy4mZVk2VF4o6XQDn50
fxsrdBxI1UWA8YyE3/jcxLraDilZdZbwsMh7FIrHfb3lPd3kN4koQJlCXKGQ
nSt9/D4rSUupY/m9KGy1QY+tA2P6MPIWhn3K4y4QJG1Pz7hWUkptbCoUS5rJ
GijqWSgfaOqgMPwj3oHnMllOTw8kbPN7Xm9WWr4tNWN9AuUK3YuV7vm4yD2/
2Mc5J3IxO3YsDOgiiC4C6eLMB8bU1bgGWxe5WsgLhkeiaRPSaJ4OzB9GFi3V
Un0QaEN8XZCjDyCj6fC7dHgaiC1jJ23PyDErLHGuehbT2Mxpac3v6HjS19dE
Vj+XquL3B/545L/78YU/R404WQMNNNDg34PBhb9/76evfP8q1yUxKX4WyuWN
EnFzj7Cro1okLOhpTK0q5wQ/hDZA4GwQe58OjaDDugxMB8KXEq6uyjWTRCwi
MF9b6aBRNeVWmlh3dBDOO4mMxffv/Ga04ejub2+Z/xQI3NrJDf8YZYxEOSMZ
0AQa8DUNXInwTqbnejx+xmptLevqfi6WdsmHljZ/odcyiUzeJ1SI86QiQNgU
W5mbVgh2P45UVHkqCm72pVhUwBeCmLYbGP7jwcQRMDyGCb6VSB9HZ46B0LcZ
jJmBXr+eO7jH8HvzI0vuup80RR5MB2hruKnc+laVCYRQ9spz2tq9ikpZ9fV9
pKdCQTgLZSKZ7FFH42kBfaHLteUWh9cY/2x4aa9xlOfqxOjpEcHzvZ233jpl
d8uQFXyslnOtLc2OznVdA0WOhWBdVDAcFXwKMg9iD6Bsn+eld+sKbxbk2YFZ
rs4pPvvRoLkMyngQwgnP20z46/AH3929scr8yKbrJ9dH+UxFwVGE44/7IY02
x+3OqotH1hpv2Gd7ch01YAoUOyfC47DtPi/rHzC33wrjjDGW7V4kcCIYP46R
sAgCPCvK68QSUrdDTA+cH1YqFP5PH1NrnjSL+xRqIRhOeM6WPn6PIDyv6wbS
IvM46cHYWBj7BGMvTEramZNjVV4R+rwhtae3XibvVZtE5KrpqTR+KG0+yrwA
iha5rLxPlNbewaou5z1iZvO9Szi3S5Pu+vL9V0JRE2CGHorqoZAuAmojmLaq
3jq3vwPKMDdlaRUlF1JSIJw6Epp8wmPI0wO5+nTWqERkQgI8ORFZCHE28lNP
ZuY7lDyOflbPacIZDuGoapTIOkn1kbRfyKUhLBpooIEG/zj0J1X56+9o0hAk
Jy1COJ3olUm6envaa4St7MbGiOeNt6qeGReW/ZaaNZeV9BXCe5/JHsvkjAT5
+pBAF+c8CM55+GQ5daINUzXCEDSSiU4KfzD77vVfrI5uvX38EN1rIUL5AqTN
QeC1SUln8wt9ntRgTS0Vnd0tEqmIvJc/uQtpn6LzqbC+ACzPOpedupYHG1J8
rJ1PAG6GxbFHWpCTz8Ez3ASLS4DbfCZlFIzo4YsysS6z9cgkMKPw/lAoC9zv
rLx2asPVw9sCbi2A4t9moCs5mVhtm2osichreWp7h2l6hkXqw8quLmLJJiVT
+NcOiSSu9sk6DJga5jfN8+433vemJsS/i7LGIuxJQOIPPg6Hzm60PLzQ32wF
32s/hX5nDTNyHITghEcP5X1Oiznoey3S73AFw7gr/by06FpP6a364jsp+d6W
aVHTkEQDiOjwGBD9kJb4RUT4lIiwSXRgFCGOIiTloyD8+9Rp4SEzvd1mhvh/
DFDfhujfhHptMdt5Ye/s2wemRt5aH06z3QkFfQVEzk+MvpadUdLVJR1k6GtU
KEKELZuTuW7Fhc2iPpLtEtmKcMJzpqzyPfbrEx6uKrM3maZJC2bpw9gYBPsQ
ZX2DsX/j8y3y80NqawVdPZUyOT6sfaTURcnKB4Fk6kpLnVTS2dnS3lza/lTw
vJhJy4IOcMEpIHM8ExqFwPoYQtQCIwiPQDm11IyLVIAT9JtIoaBFCMLZ2jCm
ByMjYXAsBH4IodNR/kpB+p5HeRdLqjyfPac3ND9qEz7u6m4QSbpkcskLInUN
NNBAAw3+T0Oukl2Q0ktVClhVLljC+KNQ1Eplhb0ifntndHOrR0PTpYrq3dnF
P6Vkz+GlTkK4Y0FUH0S1iZh3cj1C+WrnF77XZo9mgB9R42dHhiyNDFgLxe9+
yL9YVBBUW8NrE1b09rZKZX1DKM4L8UMKleZEJmttay18lMKO9eGEXhdA3leR
yHlg/CR63A8B9/af3XJt70yf47OS3DZl0sxdqA6r6BHvQUx9hKWPcvCG7/d1
8c0+mqyPJI1lsD9OZHwVR5kWHfpFQvR4CBoJcpZzHjGftagLLuCER/aws9sw
I/PHhMTIvOIukVq1ISW8W2USkc2Tijls5G2APgZgjIAwfZQ/HON/AELLA1wO
nNt6fve3t/fOotlujqLdXQtS3oJQHVSAM5bJcVGbbpw4f/i7e8dnR9v8mBZi
WIud7M22ai5y8k8PXIDEDocgbYSIUTIgCtmzxoCsETBHh1zQR8DYRwg4m82Y
CdM+AxLfYYAjIWQ0BH5FCfv15rkDh1eZ7pztcH3HzXinTXS/LWiwfRb4qLm2
R67KLCQnhzFZ0re7OPcbiO5SWtKiIjwiJeE5Xfb4XXbS6wp90UGt394Cc7Qg
ljaIjGaCkyB4LsZeK0g+mZntXl7Oam6ulkg6Ceaj9BMprT1y+aDwLqWgSCHt
kPQ213W2oC3N9tVP9+blLxYIPkLR0YSFB+9b0jA0mZxmpBSHSECk1H5zDVDu
aJg1gYl8AkGzeay1mWnHyoptn9UGNTZDbe2Znd2VIkmTTKF2VA2e+xonlAYa
aKDB/wpUr3tlqEm/MFOpwlStR4QcGl+tyLB3eZVYktvVIxB2xDW33q+pPVtS
tOlhymIO7yuY9S4AjgQgfZClB7MNIBjnAzi7WAii+3jJt4tKYp43pAuFT3p7
22TSPuJiUnVau36So5LRiIhSVoqnCkWqRBzVWO+Zl3GPEnjb0tjOZOVd859d
Ym+tQ6PehxnvMJkLQ/02mB08umvh5X3zfO7udmM6rQVC3iXdQzqEX4PIFEQ2
fGVM1kYe6sIPDeCUEXDSCEIzg7ML9ggIXcERJNbU96l0vEQyvYedndseZX4a
RTmcCD989lzl6SBJYbdCktX13L4k6Rc+bRJCH46fBBUYoIL3QXh5gOvhCzsv
7Ft0a//ceNst4bQ7vzKjxxGB2HxtlPtJHGX1tbN7d604t3WuleG3TsYLA82X
Qs5r0+JP38fcF4A44YGJ8gQICyeKujCRMZv4RYQ/Eka/BCgHuGH3cyOcMoON
kiPms6jjYeZwBHmHyZgRGbzU5cYPV49uc7+6g+Z/GPbzTQ8oqOF39bWpeAQ5
yvhg2tQ++1rA/hoGvKsq2yTKlDwqwnOq/PE7BOH5CwHgQ2XDKKnzgVh6TGw0
iL4DoV8jyGoe92R+nuuzZ7T2jjyptElBZFEg4/1VYh8JIUqXK0PdFUQAlLxL
rqiRSB9191BbW+88fWpcULQkKe0jmDuaydaH2OTsYo1kYhOY6GdMbA7C/4mf
uj8z73JJpVdNHa2lOb2zvVzUhxP1VtJ3JlLH478w5V8tc/sfQyEAVBL/dmf5
mZmYBhf+684sZANJfxhw8DIaYCDrzS9DF7zZZf5Cx/6Z+PvPri9V8MYD/vfQ
P/g1gI2pkR2r6T97+X821A9Ug38z/ny3qzT7yIi1ibAO4EtJo1Ra2teb0i6k
tbR41ddfKSvdn5v7S2r6fAxbjMA709Ksi8se1DWltgqr+0Tt5NKmjnFRRpIp
C0CoDBF9pEHpCc5zxJIHjU2XSoo3Z6Yv5iPL6aHGQdf9vE4A9/cGe+w/H283
HYkbhWBjQNaXMTGLXOx+u2yy1Xz/Qc+rm6CIj0G6HpHXhRCvqnXUyjIHgmFI
shacog2naMFJSkEIzi7GQsAaLhOurRKp7xzvVlpXl2Fu1kRa7LyExJuZBRXd
IgmpQyFZobhP2lzenh9Uhm5KYb6NsfXQpBEI52MG7Qdfh4Nnt5zes8Bq35yI
29v9E51XMqNHQ4gWihMe3ruJ9PluTr+dN953aKOp4cqLhkusds22N5ob4nrw
GtN3FkQfDhFR4aRfhq2MfdOG+Tow711G4iYwODIzsKrM80mhAzPf42jSg0kI
TQ/FDFDWGAh6N5H6SVTo1/FhcxLDDyZ4IJkRHW2FcmlP/5NsUyjiWptXZWSM
RbCvIcTnyVOhTK6WfktKFfLjZRUT2YK/R3iGRIVrq3XsOiA6GoQ/QLFpbM5y
vuBQRrpjZRnY2lJMMB8yql2pJVIGFao0P6rQOJwX4fPhqVSa09MT3ya0q603
KipZ+fDhLARbiHHXp2YeLyhxrKqNaGhmtQqzO7uq+sStMrm6gsOgWHn54Gkt
H+oFlr9sV/w/gUxKdIXyU3WChZ9qRasG6HkvH1qHwMXEv8WUoNRuxd+pfiFu
Sgm2OWtqZHTaM4s4kyINZgvf8BRJwKBfERYXvsZqKEuFWW94mTfv2H8SmdEU
1cN7SrUIyFR+rGYAeS89mn/Bs8sSpPYR/4qfsj2v4c/OyOiEHVDzb+yzevCF
7BBqnezvzLc8PxMjJUyvUYr7/vJ5/h4aALug3/mzegWagJg/IufqB6rBPwKD
vBDK/xJ7Y7UGVf5MJCrp7k5rb4cbn2PP63M7Op71iYRkVK+sP36HELOSlQrk
hGJWopDif6f4Sw1/yqBY4trQeLS0/JfsnG9SUt7jsEdjyGiIOp/uew9xqMiw
E2ZYV6bZ+gi8FiEJo/CdPsQfxWSPpzE/jI6bFB75WTz1PQQ1INiCMlniC/E7
Q4LrSf0JVw9GPoXijz9k5DY96a8aji++ad3dhvlZo8H48RBzITvFraqullyO
iSx7RGI5UY+sLaOp5Pgj3gcs7jiE/S1G24MFnfS/eObUqrOGs68cXujpbHQd
9JsLU0cgKJG2mkw4PJFG/yrswSJ355U2Fzec3bfr0M+HjFafu39xCxT7ASE+
USW17idp+I3oQ+wvEiiGQbaBIWdLIbOu9CuFGbZXWO5fwHHaRLYcIm+hLswa
DqJjmeBncVGmQHTWkwKppJtkpsT94LeT1Nd1sCj3fRZXH+Z/xuC4P65pUxEe
KX4Qvik0Li6dgP1L2M4gJ5e6kRSOpQsRnZwAo59z2EuTkw2zs69VVMQ1N+dK
JPjYtpPieaWQWm1olCuNPxKcYsplnXJ5vUxa2tsrELYl1teiTc2P2jsrevoa
xDKcSPfK5f2Gwv6ZqZ6xA0KdV1D5/2NUR4lMgF5H/Nudyk6gqGwm+TC7/uUj
1eaRGhj+e7adOoarJ1IhJFisMI+VSvxR04GKNzxJHgOoG9Q19usYH958U/wX
OvafRCYdUD08FpVCJ8mDLA9m1b104L/g2VWkEE9KUQO4eguqu4mTiauoNjeA
ly/2L+qzevD/Ak19AZUAoLprsRBx9cv5Wyf7D6FPAPzRXb+5rVKD/xL6N8xE
5h+5rE9GlHyQqniOXC0VUn5WpgiSShWierkI7e1yfV57tLhw9aNH0wRJb3N4
BhiHKNeOEbWNRjNpKyluD+KuNGfYKEpsuwvtYYHrOijmLRDThpO04WS86cDJ
unCSUkGtymP8p3IUVFn5FP6CGmkSF5RenKUYSnh25WePhGjDYWQCk7s2OZvW
1NatIjwy/KtIIXsi6rQtzZ8G0xcisbceRXIKfR7ybegBxrfOrzQ1/eGs16Vt
COF30yXrtxI1W8lqoaMg7B06Y1Js1Ixgr0XONkvsriwN9vwSgoYTJpHB3SYY
Gk54hkPsr6mU9XfNzE6t8jv/Hc95DY923gL1mAxR1YmIiWAlPYgzHmAuoScE
FuY19/b2p4iRkYmU7WuqvhFwRiA4ReRNBnkeT2qVhEdptSpQKA4XF49HfzfL
35vmK365DSk4rk246vBhZ4+FWZ+wOcsESfsys6+VV0Q0NmdIJHVkwihiwydT
hZbJ5Er+o1SWESVMxTJJr1QsImLnBltp+m05/zfpy5tDRXgqklLr6gGS8ODv
0lTiXdqcGkxu5E1vA+T+mlx36gErYqN8Oriwjh0THnzV9HRIsULWlBpkhR9q
FpQnJvhMeDD+X3xPfYOayvEkfmDqKOh/edcDwS++yetghNytdlcALmbE4ebB
mYQZohigq+hGBR0oHnzAVUdXunqD+5RiQW7eiZ70H2AL1w063iKGOE8dg0Kl
O5rhHTMLzusj7ojqEexqThxuA9X9Xgde1TFFd3641QmV0eC0V3C/c62CARSr
DBF1QFiwagCVncHPQnclz2IWnNWtUI02vhyzHWOU634Fm1Xx4i2kAX7ReJ/t
2CVsoqsmNoONKiryUClIra8DSPIgZAGEHeavPjtFGtUzhOzkWU9BCsXOzMjI
xIxSTtyOIKmCuKmQIRavzAC/vMFPXDmwA3dqA7/EnF+3z8rBl2V6ksYZO5aw
jkUJx69yOrj4dfusQhODIlBadfqaUgOCU/sG3f6LA1XHJgefhB1bOPTIq/j4
mwXniBV/MMkHJtVpT34q5TbeGyMz0ohah5BWrJdm3ZC5FKKe1TkUyhByjg8p
MXVVs2LgJOpB0OCfisEeAjIRrSojNBmaI1PF5BBaCalU0tHaWFFXllJZxgvM
QjYlo9M48DsoPBpG9YkiShzSAoM3Pk57xjMSf/RzuHR+Tdi1lal+W6sST0Lg
rc1g5ARCKZ1EOKdgAdEQZVOmXnmNOkqk2mQkBH8e+WCbhyMoYMkHEZ6M3p49
RQXDIaY+zDJgcj9ksE0zcvLau8TKeDai2gQRy89orTdJY55j+XKzPdpKHHoK
bj1OueUVcm6r0+nvw92+ghKHwyiR3IYkPEqJrzahoGbhPGocxHifnvBRfNx7
iYzRZHZH7SHdVjqGeAYQ50sq9SeHK4eO/GS1a4bP6UX+wWcOw4EfwYCanxD+
o5EMZCoDsCzIKerpkqiNafjXNoWC8rx+ZQp/FAwRNb4h9hcwx/dpnVBFiYgX
EP5mO1BYNI4oI/UvJzzqyuPqnMlklmkymo9IaMAdAbHfhlmfwth8lLUjLe1a
QWFEdU1mR0+DVBXYLpcNzuojI2t5kbVMVcIbaX8aTpXqTEN4VCAJT2sqG3+N
K5fgQgB+Suy/gwMEdcQyIa5OsPHLGjCPpCIqP4Onm6CJfNVW56QSR8rqgCCg
Cf+Br2dqDf6DboGLmSe/Dv9baGIEA+qFr45OTX3BN6GUauC/HkApbiXOKEzz
dMR7NWCOELKRVOIA7/BM4gCxMCOYMsiko7L24KtVjMr4IGSFA7UDx1fnFAvx
k3g4AoWEYakiwpO4h0KKa3RmE9lTT2Lpf6kDr+qYopgaltmN30VfHoWgZMVs
pYGihs0uHLgpP29BBXn14jBX/Pbr6H4U8uoKYaqnI95hJdXszkzKE2SR634K
O69n6C3UK4rDHCnFxHjnxYQXEydrqnjaPfDwCPIgTGXhSx5JHmTFAFT9N56d
ojjGlaoaIgubmGL8kzjHLziLEPCk5hBklZo29MnFsIXkExdUESdWDizOTARP
lffADqe/aLp53T6rBTxq3w3++FwFDeI36LMKYoGL2p91yRV+Kh64/ZcuKmRR
gHriEk0IlRipgYGqzksjZjJB1xlNij+Y5PikSiD6oCgPt7Alp404zy8kc8Am
88Kse3EuqaBi+Gp0l2eSM1CcGRCcpz4JOQhCtqNnpkKDfzqUTi6xTC6RyVWB
yAQ76CFkyDKhrLu2sTKDEeNx3/64/93D8bTbx0H/T0CqPsTQghF1pcgBJxRO
eN5iAot9nfYa/WK2a4aTySyG664Q4O4qKHYsxNKGBercLC87rf5kpVamhh4B
IR9FRax2d43kcUSDCY+ob19piQGM6sBsLYiry8SmgohdYfFTsVRBSq0JziOT
N0n6kLKMuwEW3nabkoN3PoHPZnJvXwPuzUsIHg8yRiAsbSKUiftCTBNxdRT/
EaaLYnoIS5coEc5Vk7TB3Sa+qQfxP6Ajc329V1kc32a0zuTCjiMP7iyG48fC
SP+ReCffSwQOpiRx21q6yGIHODGQk9nz4M7ubdm5E8hSEcMIOTTrC5jl96y2
XckOSBtJjly+u6BgLFHK4a8VrnoDC4/6MSljzJWFNvjaIEePiY2BWB9DrJkQ
tlGQYpaT6/v0Gber57FM3kHU4lSSH1LSLlcSnv7Wz3k0GAxi2c1D2MSyRBAe
cSqHMO/gm25Bv9SB9Aj0i0BUVpcBcUt3NZ/iamt22pTcyQ44IAas7nV0oF+7
kBkU/KKOQXmqwf4m0p4/0AeleX/QAUMFPBWA0tpTGHzaSA0Tz8yCoQ6sQZ4R
pa9kQAWhXFtf6sCrOoZfkUJurk3NXdmkvSU1JZWwgUCD9tqDxD91DCBTNmCt
IpZgOv5DkvCUp6a2KjIZQFNfHjtF+OItyNQmJnKYBYzw8PjMpkF0kSAPKv8j
QR7EaezUvr/x7BQDlxvw5aUBQINawJMVHJw/aEhrSGPdiwNbPOgejDxfcjW+
Zp8HBDzKWTRwldfuswp5lJihbkn17b98USHH1RR/sCamVmF53YMHCh/8GFcb
c+KahOHl1ZN8YFL1TxtZKoBzJPWvvDjrXppLJF4U8DTlAH72VmYnjIxciO8P
FvCoXYQa/KMxmPDgi65IIe+U93aKnvZ1ZHfXo92V8U9SA7zdzx45s+7UNcMr
cU4rQcoYGNGGsUH2BPW6T1KFERD4Tbj/2stGhvuWnzm82NHZ+ALgMwWkD4c4
WgThGcxt3pTwcPRgbGJC4vJoSkgWIbJUrpok4RHtKys3ICTEZGdg9hg68xcW
K762tld5h4QulnCxtLQ3JMS6Xz2y1OHw9NhbaxMoV4/TvCczE3QxImhaC+Wp
zTtqVoZytVQUiEWUrCIyzLC1BgjPEOsKaQ8RjAK5H1ATp4QEzLt/d5GH06y4
yPcRRF9dbYFwzDHRZSxu6NOn9VKpRE4KwonilfIKmfxCRdWHHIE26RzEr6gD
Y18hrMCa2g7FQAxetkxmWFAw5t9FeF5uKmqqpcolKCDizYnG14a4Okx0FAR/
AMMzMPS3pKTz+fn+1dVYm7BCKm0nK6cMiqsabOTR4AVkAkEUtmoVy8yMYbPJ
t3Qd3TU4h3g/i1uLKUFw3UsikP7FpZruB1cJuzubKhDP8Kwh7/mXFwXi+Bgb
Vxa5WRYLiyE4r1N9qiw/O4jcTPfVCYIoeX2KTG9Xgnv11aUGuAI1im6Op2cK
2aWaVD+PQS/5BoCaIiaebRZArexWnqGueeCE+C3gO5BBvEW5RA7qlXJde6kD
r+qYOAcWDKyn5B0WFuelwJkDphdFcYgr0EAaowopjmH45TL97GHiLDJxHT+Y
QrhF8gBGZirhJyLWrMwUQcXLt6C2cohxXkQaN4RZFGCQsyaTHkzhqPhjZhaF
8Ij9nWc3EJL2IotQCXieUmxc2EqTiLAQcHQm3UAvDmwmEF/RrbzTmt9Rkr9e
n18S8Kiv8vp9VmFAwKN44acvXbSODQ1xD6mPrAYC4Gphd3dzBewRnin7g0k+
iP+8wHxUv/LirHt5LhEYKuARp4SH5zQJO7vrssL9GHXESbzDCek1MZc8Pf+m
wEmD/xRULi2pVCyTlfb1PChOj+IHVub49JS4SQoc6h7e8ki89ZPPtfnBrvMY
8e/CqA5ZLxtvv+tP0UGwCfTE6aF+3zne+PGm+dqAewsY1DEQptNfL2moG+iN
CkdqI+wRMPYtxgsof9yl7j9OeLLE0iPlT4bDA/ULdCDsPSbjSEZqVkcHUVlJ
7WqRSSXlpdn3bp823j77xoV1DpF31tMj34VgHYyvpSI8fBXnUfETZeMo9cZk
pSol4fndbpNKHrLM1ggQGcMAxzLgkRBLjzyz8lTDIdZXDNQmv7SiRyRS5oUm
6snK8VdS4POmb5PTdfGTYDzSvoTpw+h0hBVSU9euUPTnwcmUSrfn5Y9Gftel
9W+lPdxBBh9VvkqSHOI8E9OFkJEQ/B6LPYXDWSJIOpKeSWtobpbK1FXA+qOr
NOad30UmxSNV/cbMDHdRf+7ODCZlBmYuQAWxjuf5nQ0uHtgUDywu1QmkfuGs
jadLOP6jV+5w+9GdF65UTVwLzyMu1gTcsCP4hqwOuK38fnBqs/LMFsr/UsOU
Ap5MP0IQgXfJ0zNhkL3/KdXCxMjMO1WoOoOpmbeAMIP0FVOukUqJGOIOXtxZ
v2TweakDr+yYkGWnNmCYOvLJk6T5uaYMojv4+HjbEcIM0lYgJIl2HcOOkHyc
sApOU45GnSCAQipeFBWIK0mB+q+lvoV+CwP+fVvTActD/8OL9kxtVX8Oc1V9
/qvPbuByg1gEGa+nFPCQDy+MFK6YnrYJSlXaml4yWaju1NTcU4APVyXFzHuI
y+X1+qwefPUs6r/Ka/dZ/SToFMGQsKzBRrOhF5UVh59VP1gzSsXAkdXUq8Rh
p209XSOGGlheYcZ5peXnpVn3O3MJR5Znv4nMLLpCmOZJCM9OWLi6eVJJ+xLF
1k4pBnNFqsWKboGzDfA7UQYa/LNAymFlOE3tlkmRDuEhmGLkdNzNdmNS4J56
4HgVYm4PO89OfDAeYI6GCIfOMBUBeKVPRBdmjWHC79GAT2KpH9GAtyBMV1mx
FP77klqcULG/YQm8yqs61P3HCU+eRH6s8tkIiDNoUebqgcgMCHQuLakhIqbJ
ACdSg93T2wXyGQcvH9l+4+TW+LApTGgEzCUJCdkGypCpyq32y6r76469JknT
IrPtkadS5bLWgTnvAci+5Ex+U3sPkSUIZzpifPDbFXKsp3dHTv44gkaqbEda
CGs4hM5G2WG19e2kLkap9UmXiDbn5IxUGdn+K+1VTFVJCDE9CPs4AbAqKKnu
E4k1Bh0N/h2oZ1PTlKRD3F1MpaSIxa2pfgGCwTzk/072HiWUAp6/hu5MOOX/
CxOEOA+Cq9XaZkEEUP0fuOZLc+mvnaaOxS7WvOz+6ZCrEvbIxJ0ySZywbW1i
5MYbx032LbljvIBx45eMOPMrkNdUJnUkxNGDVIadPyQ8RNMmqpFyhpNfdUhz
kBb8J7/ymk0bZn+F8lxLK9rUN4ATngKp/MTj2pEDVhelhJg9AWBsYKNAfW2X
kvCQSlqcaFS1N9/iwQvCQz9goMOJYDG88Yj8gRBHXXpMVRZBxXYGzFNvSgxU
AhgthK8Hc8cCyGqYF11V0yqWEAVOCbYj7VPIsxSKU1XVH3P4OhCbHCilcpht
ALNmI5yIoYQnVSJan509AvovEp4/b6OpicZpmWXdPZLfLRqngQZ/E62pnubK
LDRWnkgJ383I9DalonvoMf/s7D1vDHUGnjdHXV7O/zfZAiviSeOVkamZfbjS
lPdvx5C59OIkek10V+b9xd/U4D8JZVUKUjcrlEuD25qX0Sjf37my3ui343uX
OJuvCabc3MYM+ZAIgCKpizJ4508JD0xwHrIiJJdMyvcv4zzaCPtLjHevpKL/
TYbT8UKp4mRl7cgBCw/p1YI54xjgYlqMWwb/eWcLkfpFRja5rEMuRYSt2x9l
jwG5WkRKZ8FICP0Qon8J0T4EGWNBzAAiQq7UJb9fV2j0B4RHGyFyEM0EOXeK
K5/0iaXEmBOdEcllzxQKp/r6GUkpejDpooLVcVIoRx9mz0F50bX1nYMIT5Ko
d01WpsE/m/CMSAC2C5JzOrvEGrqjgQb/CqgEPBpooMFfhprwyGXyBpnUsbFu
Cp06NcznO8crP1sc2nPz2IF4rylg3CgE1VaLWP6U8GiRhEdnUBsgPL8v/nmD
hp/8cxbfuaR8MOEpkirOPK4bCXHVtIRUE8GcCQDjB2qEG49aXVeokHYq5GJC
qySXdiukj2VS94bG2SkZejB/BMyeCsYdSIq8lkU59jBuOSvxIwgcDikLQv0r
CA/M0wHZH9ARk8yS1M6+HkKJQ8Zry4gsfIz29nWZj8bAKDky3MFBUvoQ51uM
H1f3vFut4ZEppJy+rp8eZRhA6H+d1fxBG57I+I3FSW3vIEqR/jfntwYaaKCB
BhoooUwBI5PJFE8kErOnTyYwmaOZjIm02I+iQj+LDP6EQR2JwET9a4LtsLRe
TyirNVAVi2hagyw8f8PIQ4h+tRHuZxjPobisWS1+xQlPiUxx/kndaJinLs9N
MBNtmP0OA1ga5HbK8ULsA7uaYoFC3C6XSXDC06uQtitkORLJpcrqz1HBZCDx
OC+UU+D1tMQ5t8TXKzPqZyRmPINBlroYQqL+Qp+VzrUxCYyfUX5cbZNQqvSs
4YSHyPSYJRGfKC78CIV1yRRAQweHawBxFrKSaPUNvaokfQQ3ZfV1rXqUof8P
JzwAuByCMaGwW+PS0kADDTTQ4B8BOZkejggUKpVIjlQ9MWDAZIkolh6hPkXx
hVib5Dlagyw8r9+0Xmp/me2QFR+IKlefYrzbRWWNasIjUSjKZAoznPBAQwkP
wn6PyfjOy3HLie2XTH6JvHfuWUmKXC6SymUiuaxXIW9TKFidvXszChfFRFjH
2+Vwr4jyrLqK7kDJ97cD/hMZidovhp+z/1JgFEuHCU4BGHeKS5+IJVJVUBze
B3mdQuFeX/utgDMCYmojmDqv0cAtD4c5SzgpwPPGvkGEB+vtWvmPJjxEFL8B
CH/LZNJaW7s1dEcDDTTQQIN/AMjSojKxQtqnkOWLxXsqqvQZL6yk/+7Y59c8
P76M8rUxgQ7G+5SFE57SRvVKihOeCpniYtWLhAfnDxOZzDk+Lj8e37Vv5/eW
x34DaX7t3W1kVTAZkXpIrmiTKeKeNRyOjTG6fuTexR+Zd9dkRh+ngne20wMm
MADtIVrlISmIX7/pwOh4Ou1gSkpGq5DI2UCExst6ZfJ6hYIiFP6amTEBQw0w
jjbaX01sEOGBON9zH4INTSJVafJ/PuFRJS/ShZFvGPTIxsZOjUdLAw000ECD
fwCUhEekkPYqZOl9fRsKS3TBf6Ya9v+1dyaAbVx1/pfkIzdtmrbQcylbKH+g
5VwWesAeQNll+S8Lu/xZrnKEQP6FbiGUfxeaZRu6hIUANaXe0NDG3Y0LcdL4
0EiaQxpJluPITuQ4Thw7iR3Hl3zIh3zoGs3M+897M5JGsh1fsiynvw+P1JZH
M2/ee9L7zu/93u+XFDy1dzrce1rbB9QNgDi6HeqU0ZNX/Ftot375SRE8m2jm
jRX/8+59T3/kiW/+0w++8f0X9lnbmkewqzCJLE1yyfdH44d8jd/e8/hjX7h/
z+ff+eK//9NvX/3lw1T566y2hNNyUvDwizXymFj+Oovtoy73q/39E3FRlHAu
U0GUxmXZGYl+5ey517NcIeso0BLEZ7gJudbZ+A+5T9BDI3rBw4YnP3yyoSgv
BY+RbORXBE8By72JMr/Q3x8UxVUe4tceiagjoaYDu3bsLFteCtFFsLZ2eSdr
20ft2bl9rwMcfhfJUro7wFiWlGChmVpKBJvlfxCiXs+s6W7nym+7Kh+BxEXz
PIXumiApeEJIcoVCD/qaTKsZ4GVBgud2zrW75XxfnCgeInguI/TD3oHrUnkr
tHcVMPZNVuutVcf+1yuH3lX20gf+5+CjPOMJDIY0wYNTICg/tAeGf/nKS1/b
+dl/+erD//70tx49sv8dlqPraS5d8Cxh9neus3Hvstl/dbGjW4jj7BGiJMal
qCRfROjHXV33cA7lABObDGOYaeFZZ3N8yO2lh1XBQ5a0ZMk6HXyw0Zvfgsdp
5NjbLDU/67g0IqydKXI18VUc1r7MuquePKB9CXfrQ7clSWYoqDjoxRthlxz6
o7n8ySOpyIEd5j1ls375d7a1qbuhs7bLO9jWqsqPlrKfMosSIr7DFVoz9VQ+
+aI2t3ZbSDrIDJI5EV6u9EvLiQbVcmCHPs3EjL+PtbXNDNK78LMf3Mss6O0B
6ulEaLwnSvh0ebCgkyT7cXaEQH3ZnsdJts0msr96Cd09T27xOdGlrMrtB0G3
07/DsrciEeZInzMijVUJdKBdVBeqEVgqRPDIApKmZYmdmnp3/QkTXrVZ/anz
qoLH+aMzrb2CpMYQisuoC6Gn+hTBM4s4MbF8EePYQDs22bjrLLa3WM3/r7Wl
PR4n4ZeVN0tIkEKC6LjQ9q2y3z38sx//7QvPvdf86laGLsDT90IFT8JDiUTe
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
L7MVpNQFyc7pvM7KfuFEg29qWqs9sXv8z8joPfWNSxM8RtqxzkK/2cY81Xbh
QlwkgcSw5Ssuy92S9Gt/331uR6HFStaknEbVD4cjhXUU0LY3VL36jYaGE5PT
IVkSZCkqy2ESVNk8NfVJ38nX2ZQ3OgxaHtIFawYseNxbKcdjzZcuhWIJwSOP
I7T3ypU/4Z1GOk+jB2j1x7YvVyHt/McTvubpEARbziaJnc4k/sbOsuWlEAXm
J0+2lifTfAAAsAwCkvyTodGt1jze6UxcaLCbMaMIHuZzdfUNwQmt9sSz5Q+j
Y287cWppgk3RMAU0v8XKfdDl+X1v/4iEzTs4b4UoRSSxVYj96/nzd1IWHPom
uWefCB4T69horv4Ya6vq6R6TpJgieCQpKqEpCZ0ShJ0X229zcsUOdR/6ogWP
iXNvo+zfbb7YqQgeWRM8owg9c+XKHdjCk9eCR7sL1vkx13Hv5FQM59aQJRKI
cVVHet7iqzisRWDtrnrygDavdeuD4CVJBtWvOEiSbS51vTBg2Vt2dt6jgm2t
C9vOMtbWNpT5miLJSujE25sPJDIm7Nx9GOcVClgqZs3PvlI1TD/Sb05cPeot
fUZL7yXUU/xY5tuusrU87QZXmFSaDwAAlooyA/lF6V97B66zsEbGla+eIbyB
SwgeC/1PnroT4+Na9bHgkQ+PjL39xMmlBRFK+B47tlqsn6n12AeHFS0VxdEI
pXg8Pi1Jx6dDnz99eouNMqlGMKx2cAKFYtr+Vob7xYWLvbFYTBYFLHjkiIyu
IPSzrs63ctb1FnMhy+kC7yy4SljwuG6kuO+dUQWPnBQ8P7nSfbvTjRObrn6n
zF8e4pzO4ESIhLOOE8WzysM9T9GSRKOQl6+q0B7ktaRRGWQG1V9Zgjy/MKtC
0Mn7MqRXyOdp6kgkpNalTBKCzLMHWmbk5VzpGmYcqaVuVCrm4Cu0vNVBD+ub
EW5u7hh06Te40iSTrgIAsESIO2yXIDx6sWOLmSlg3AvfSZTbogmeAsZ5PUX/
Y62nfnxMrb7yryJ4KkbG760/teSoiUayS73QZntTTdVTTc1tESEso7goi3FR
EKVhST4wPPguj7PQXIOzqNtdBnutgfPcZHVuP93WGIpGZFk5VsRLWkip1qsj
Ix+rc19nrl5vsxXR9iVoSFXw3GSx/6C1sysaJ7JUEzx7rnTfpggeZm0Inj+z
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
zZSbYYDEeA4uBCwRMZ6bkQAAAHCt0v/w/V13bFn9aR3KbEXpGqWDcjEMPv7A
dM3RHFwIWBpK7yh9tNq1AAAAWMOEaHPX7ZtB8+RhUTpF6Rqlg3I0DO7aijUP
2HnyDTGu9IvSO7kZCQAAANcwyhdp/8P3w9pWfpVtJqVTcjnH4WHw8QdgGORd
UUbCxx8AtQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ALA0/j8K62OI
    "], {{0, 211.5}, {381.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{381.5, 211.5},
  PlotRange->{{0, 381.5}, {0, 211.5}}]], "Input",ExpressionUUID->"6d216b0a-\
39ec-42a2-a856-9123f87c9a65"],

Cell[CellGroupData[{

Cell["Working with Cloud Objects", "Subsection",
 CellChangeTimes->{{3.8249008042405324`*^9, 
  3.8249008142648983`*^9}},ExpressionUUID->"6ca32428-0175-4536-b730-\
6bca5b2961c5"],

Cell[CellGroupData[{

Cell["Storing code on the cloud", "Subsubsection",
 CellChangeTimes->{{3.824901938228006*^9, 
  3.824901946031992*^9}},ExpressionUUID->"a1bf438b-efea-4f26-aeaa-\
77d928f5f8a3"],

Cell[CellGroupData[{

Cell["We can create an object", "Item",
 CellChangeTimes->{{3.8249011239823456`*^9, 3.8249011287691746`*^9}, {
  3.8249026016002197`*^9, 
  3.824902604495698*^9}},ExpressionUUID->"f688fa47-de56-4cdb-860c-\
f9864d3c08ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myFunctionPlot", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"2", "x"}], " ", "+", 
      RowBox[{"Exp", "[", "x", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.824900878616238*^9, 3.824900890469667*^9}, {
  3.8249010976359463`*^9, 3.8249011107476535`*^9}, {3.824902328541745*^9, 
  3.8249023466975145`*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"f4290cf7-072b-4e19-aa0c-5d82dfa982d4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$113912#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.9999992881428209, 0.9999999830201601}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.824902375368935*^9, 3.824902469573558*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"5381d4c5-ffc5-490c-bc19-65bd47d1a900"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "And use ",
 StyleBox["CloudPut",
  FontWeight->"Bold"],
 " to store the information on the cloud"
}], "Item",
 CellChangeTimes->{{3.8249011326655407`*^9, 3.8249011577791824`*^9}, 
   3.8249013518419037`*^9},ExpressionUUID->"0da9fb17-71b8-4cbd-80fb-\
fa257db5f3d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudPut", "[", 
  RowBox[{"myFunctionPlot", ",", "\"\<MyCloudStoredPlotCode\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.824901231038126*^9, 3.824901276804179*^9}, {
  3.824902369383415*^9, 3.8249023709655623`*^9}, {3.824902464589351*^9, 
  3.8249024655529594`*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"ed33ef2e-56c0-4790-8abb-556d6dd34581"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/MyCloudStoredPlotCode\"", 
     "https://www.wolframcloud.com/obj/santiagoc/MyCloudStoredPlotCode"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/santiagoc/MyCloudStoredPlotCode"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8249023793709445`*^9, 3.8249024742551804`*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"99138c17-30cf-474c-80f9-bd3d75a096bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This stores a pure expression in the cloud. We can get it back  by using \
the ",
 StyleBox["CloudGet",
  FontWeight->"Bold"],
 " function"
}], "Item",
 CellChangeTimes->{{3.8249012815452724`*^9, 3.824901304610507*^9}, {
  3.824901337659787*^9, 
  3.8249013666936827`*^9}},ExpressionUUID->"58ffba03-9afe-42e4-8951-\
f641e465e1f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudGet", "[", 
  InterpretationBox[
   RowBox[{"CloudObject", "[", 
    TemplateBox[{
     "\"https://www.wolframcloud.com/obj/santiagoc/MyCloudStoredPlotCode\"", 
      "https://www.wolframcloud.com/obj/santiagoc/MyCloudStoredPlotCode"},
     "HyperlinkURL"], "]"}],
   CloudObject[
   "https://www.wolframcloud.com/obj/santiagoc/MyCloudStoredPlotCode"],
   SelectWithContents->True], "]"}]], "Input",
 CellChangeTimes->{{3.824901855670106*^9, 3.8249018674972343`*^9}, 
   3.824902449072029*^9},
 CellLabel->
  "In[325]:=",ExpressionUUID->"8e229fab-2518-4a79-b0a9-942450a11e85"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$113912#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.9999992881428209, 0.9999999830201601}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8249024540341578`*^9, 3.8249024791928453`*^9}},
 CellLabel->
  "Out[325]=",ExpressionUUID->"1c4fa8aa-7e02-4cc4-a442-b932eb918be7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Note that by going directly into the CloudObject URL you will get the raw \
code and not the pretty picture \
\>", "Item",
 CellChangeTimes->{{3.8249054089659357`*^9, 
  3.824905451080306*^9}},ExpressionUUID->"c7fb1693-e2bd-4848-8b86-\
87a84c99cdb1"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  "\"\<https://www.wolframcloud.com/obj/santiagoc/MyCloudStoredPlotCode\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8249054584326496`*^9, 3.824905498630172*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"fe67e5a9-4dab-4fe5-aaa0-745ed12b14b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploying objects", "Subsection",
 CellChangeTimes->{{3.824901977188728*^9, 3.82490197872304*^9}, {
  3.8249022170197105`*^9, 
  3.8249022200521665`*^9}},ExpressionUUID->"05afc1f2-ff51-4577-bbfc-\
157b613686b4"],

Cell[CellGroupData[{

Cell[TextData[{
 "If we want something that actually runs in the cloud we would use ",
 StyleBox["CloudDeploy",
  FontWeight->"Bold"],
 " "
}], "Item",
 CellChangeTimes->{
  3.8249013916673374`*^9, {3.82490230935662*^9, 3.8249023201527915`*^9}, {
   3.8249028782713146`*^9, 
   3.8249028863801484`*^9}},ExpressionUUID->"f3dc1fe9-573d-4bfc-888a-\
6bf1f80323fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"myFunctionPlot", ",", "\"\<myDeployedPlot\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.824902901555519*^9, 3.824902944819584*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"598a2002-0f9d-4b48-b5ed-a260f7372259"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/myDeployedPlot\"", 
     "https://www.wolframcloud.com/obj/santiagoc/myDeployedPlot"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/santiagoc/myDeployedPlot"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.824902947585553*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"c93db02e-974b-4932-9444-68e70a0f5902"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "You can ",
 StyleBox["CloudDeploy",
  FontWeight->"Bold"],
 " practically any Wolfram Language Expression"
}], "Item",
 CellChangeTimes->{{3.8249055382322006`*^9, 
  3.8249055659405313`*^9}},ExpressionUUID->"a6011ba7-dd19-4cc1-aeb9-\
c1533f33aa19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"f", " ", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
   "\"\<myDeployedManipulate\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.824905694677722*^9, 3.8249057644371767`*^9}, {
  3.8249058259726768`*^9, 
  3.8249058537641077`*^9}},ExpressionUUID->"d49f027c-f7ba-43ff-9670-\
210a2d92b75c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate\"", 
     "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8249057666213865`*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"742acf8f-db30-456a-abb8-5a73b4d1d157"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  InterpretationBox[
   RowBox[{"CloudObject", "[", 
    TemplateBox[{
     "\"https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate\"", 
      "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"},
     "HyperlinkURL"], "]"}],
   CloudObject[
   "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"],
   SelectWithContents->True], "]"}]], "Input",
 CellChangeTimes->{{3.824905806816826*^9, 3.8249058107920284`*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"c89b04ca-a281-4f79-a362-047f0d69fbda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Notice that the deployed object updates discretely (that is only after I \
\[OpenCurlyDoubleQuote]unclick\[CloseCurlyDoubleQuote] my mouse). We can make \
it flow more via setting the ",
 StyleBox["ContinuousAction ",
  FontWeight->"Bold"],
 "option on the manipulate to ",
 StyleBox["True ",
  FontWeight->"Bold"],
 "(Mind Zoom Bandwith)"
}], "Item",
 CellChangeTimes->{{3.8249058735259967`*^9, 3.82490590377907*^9}, {
  3.8249059489089327`*^9, 
  3.8249060192600126`*^9}},ExpressionUUID->"39f94ab4-cf08-4099-9c08-\
4a4a7ef9346b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"f", " ", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "1", ",", "10"}], "}"}], ",", 
     RowBox[{"ContinuousAction", "\[Rule]", "True"}]}], "]"}], ",", 
   "\"\<myDeployedManipulate\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.824905920997322*^9},
 CellLabel->
  "In[332]:=",ExpressionUUID->"019628eb-a998-47a0-ba9e-7684b2680dcf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate\"", 
     "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8249059233900447`*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"83af9940-9bbc-4e5f-a780-df9c6e04b62b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Permissions", "Subsubsection",
 CellChangeTimes->{{3.824906046607521*^9, 
  3.8249060490323086`*^9}},ExpressionUUID->"58496daa-13c2-4b0b-8ed2-\
b707500154c1"],

Cell["\<\
If we shared the link above we would run into the issue of people not signed \
into your account not being able to access it, as by default the permissions \
are set to private. There are a few ways in which these can be overcome\
\>", "Item",
 CellChangeTimes->{{3.824906054769431*^9, 
  3.8249061070432434`*^9}},ExpressionUUID->"5bbf0b62-4f35-41c5-a851-\
0991be9a4e8f"],

Cell[CellGroupData[{

Cell[TextData[{
 "The first way is to change the permissions directly from the ",
 StyleBox["CloudDeploy",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.8249061913280134`*^9, 
  3.8249062122142496`*^9}},ExpressionUUID->"207d7ae5-26b3-4039-8f09-\
5c2b1a1edb53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"f", " ", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
   "\"\<myDeployedManipulate\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824906223095393*^9, 3.8249062275361843`*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"50903012-a5b6-442c-9b9d-e9d2dde5f3f9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate\"", 
     "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8249062366554775`*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"3297aa43-8115-4f67-9118-82ed8bbcdf99"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Permissions can be set in many different ways. The above lets anyone go to \
your file. \
\>", "Item",
 CellChangeTimes->{{3.824906239140484*^9, 3.824906255303077*^9}, {
  3.8249066076418943`*^9, 3.824906610405184*^9}, {3.8249067100724397`*^9, 
  3.824906710075395*^9}},ExpressionUUID->"804e8d1f-8129-4042-98ea-\
abf6e20db9df"],

Cell[CellGroupData[{

Cell["\<\
Alternatively, you can Set specific permissions for different people\
\>", "Item",
 CellChangeTimes->{{3.824906239140484*^9, 3.824906255303077*^9}, {
  3.8249066076418943`*^9, 3.824906610405184*^9}, {3.8249067108196583`*^9, 
  3.8249067196917763`*^9}, {3.824906921644919*^9, 3.824906925729213*^9}, {
  3.8249069844194865`*^9, 
  3.8249069922416873`*^9}},ExpressionUUID->"5ea2d8ee-1c34-4141-8b84-\
938332db864d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"myFunctionPlot", ",", "\"\<myDeployedPlot\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<dstevens@wolfram.com\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Read\>\"", ",", "\"\<Write\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8249070061998987`*^9, 3.82490703911572*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"ff642380-a2be-4849-9989-acfd22d309f8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/myDeployedPlot\"", 
     "https://www.wolframcloud.com/obj/santiagoc/myDeployedPlot"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/santiagoc/myDeployedPlot"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8249070552451415`*^9},
 CellLabel->
  "Out[334]=",ExpressionUUID->"dcf88890-a7ab-4cce-a50d-971d30f66455"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "If you want to avoid (for any reason) using permissions you can always just \
use the ",
 StyleBox["CloudPublish ",
  FontWeight->"Bold"],
 "function"
}], "Item",
 CellChangeTimes->{{3.824907100923293*^9, 3.8249071278982477`*^9}, {
  3.8249071638562737`*^9, 
  3.8249071879579477`*^9}},ExpressionUUID->"f07d90d3-3acd-4e99-9d30-\
84ccc23f3a17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudPublish", "[", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"f", " ", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
   "\"\<myDeployedManipulate\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8249072003598804`*^9, 3.824907206654078*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"717ec2cc-d730-4387-8c72-e7d3b83bf0a1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate\"", 
     "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/santiagoc/myDeployedManipulate"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.824907209663263*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"79b6aa31-bad0-41ad-a82d-198659fe3ea1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question?", "Subsubsection",
 CellChangeTimes->{{3.824907711031665*^9, 
  3.824907712977621*^9}},ExpressionUUID->"188a0a58-4ffd-43f5-9fe4-\
9bcc22091b3b"],

Cell["\<\
What is the function that can be used to store code in the cloud for later \
local retrieval?\
\>", "ItemNumbered",
 CellChangeTimes->{{3.824907715515164*^9, 
  3.8249077471241636`*^9}},ExpressionUUID->"3ea258e1-ce59-4030-844c-\
879fbd6ea84f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Databins", "Subsection",
 CellChangeTimes->{{3.8249077572996902`*^9, 
  3.824907758433442*^9}},ExpressionUUID->"1723fbce-0f71-4ccc-828a-\
67deb8fcdd5a"],

Cell[CellGroupData[{

Cell[TextData[{
 "We can create a databin with the ",
 StyleBox["CreateDatabin",
  FontWeight->"Bold"],
 " function"
}], "Item",
 CellChangeTimes->{{3.8249077669258585`*^9, 
  3.824907828370861*^9}},ExpressionUUID->"4686861a-1911-4c18-aed8-\
29dcb9cd1c50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateDatabin", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8249078317351265`*^9, 3.824907836662012*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"283ec559-3b01-45f2-9a26-76e90cf6ed5d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Databin",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, {
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]]}, 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"U3nir5QP\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, {
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]]}, 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"U3nir5QP\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/U3nir5QP\"", 
                    "https://wolfr.am/U3nir5QP"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DDf26405d5290-bb24-4dff-8636-87443c3a96cf\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/U3nir5QP\"", 
                    "https://wolfr.am/U3nir5QP"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"santiagoc@wolfram.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"santiagoc@wolfram.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Tue 16 Mar 2021 12:50:47\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Databin["U3nir5QP"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8249078416065288`*^9, 3.8249094492970467`*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"31611981-e350-4fd1-bff5-d2ce54c12ba4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Once this is done you will get an email with some information\
\>", "Item",
 CellChangeTimes->{{3.824907907902232*^9, 
  3.82490794834151*^9}},ExpressionUUID->"67d8aa4a-296e-4b54-8ff3-\
a7754fe92a84"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
fjJ0aq5i5sXEc6992L8cNJ6LS8Kmgm3rMjyT1Zlrul66/EmO8Lmw4/Myfm6J
3iki8UFxWtK/HusLsJ5oJteXuJqvspnWB8d4VnpnfvpLXtDOy8Jpe92lQqum
llv9wdtIi43+VmeuFZTKofkqzhDx2WZJhxmmLvg/7pIsjaymr5knuZwl82rm
ybB8RB0PAv2aZtSmSAnKKHXGb7G83vlufVANg53XutXPKzLu55boXelGy7cd
1Ds5keR0WlFaN9P6AqxH71pW1qB3i/npA5EeS3lZOG2su1TTXzVEays9zidw
edp0ziXvyfjY/WSOt1pM7/qrZn3O5ZLNuTUpJ7k1S3J888tv16B340GgX7M0
GhI0Hdd4zLHmPkkJt6OdGDvTul+dPMaR7NL6ef39z2Wx7KbF38aYRpeF2vza
7Xva3Fbc33T500BPnjzV5V16LrQ7LrOe77hafrbuzXKfeqpbuY9CoXk59oxd
O3axyPmgy2RWQnN/teqk+RFpb3pevfXBHe+8r6x96jTKEkuJemu2/Jz48zBH
leynv2TCcZmnlGd4th4MdZwPM9myXk5IOZ+5pnYoM6xLb/eQ5a6v1LTrKKym
9zPceOt1ev/kp1z4l+/+WvoZLl5/0obLJzdvjb2MIeXY88Jlse6fYMucIX29
M+c7LpXoCdzqPEfp8iZkRO/yfA5O8syF66/7yMz7YeoZeO/001wqY6D3019f
2pXKltT0YbaMln3rpUDksDOS+VraGK7EwbsRn3V2rj6/FmW35SMYX6ga1DoD
tbDvfK5Z9qm7E1pBLwGdbR+TtVU59ozd8KhdWztv3U4Mu3xm5nd6ppma59sb
nUCbczmW+tKz9qPNyzMkWC/9LPXOj6K/BKX1bEiEoHTe/AzbI33r/ozqR06r
6a+j0GfowdcMJ4P3M1xluqz//M2DXGhXeuse2//k71p92BzP7ywYBmEKY88L
Z73pmSa3JZ0TbMkzxO9n5uWzDlsutQzptVOeEmGu8iyZYyN6l+dzcJI7C1eS
a/Zn3gcQO0V9J2HbwVo9e+FazrBMGbNYlEFypnVdGomiIdWyA2Vkg85X88fj
eudjiF+vwacbI5dk+GpGw81Mx/lcs9VnqTX+7sIqlGMvByj1jx88khu5tz+8
o/InhT43CYI1qHdZ4/KTIGuocxK+lg576yGHMqNZ70bulzonUmlIcpzS+WkS
jpb11qOx1hPSUNP7GZ4mZ70rE96+nwvrnfbjr1y73MLmwAL7mab1eezllSW9
iaZo6OucYCNrVG4gtPz0FfKkZZeyIX/WtU6JHEVzedC7mSMq57Mzya2F6+yk
5dSsc22GyG/Rtb9hGJzXCpbfqdFw51xK0kzrPgexcmmlqXGQvz6r0Dubcxn4
zCeJpVLkrkptaiV9pZ+h5tr0zjI7uQBF7+RT1WEVepfv4p5WvQvq07Leuq3N
M1zWXF7v+n529jN1ZUttyvH2QtoO6jTvpwl2Jg+G4ryHmc+Q/hoNniH9Cv4C
b7lUDtbvs+2lRxitEBqu98H87sz1rsVceuedz9uheu83rned261Skkash4ik
Y/Gp8fibPC29K7P78smONmlZvOC2GfN+Zn4EUxaG207/4OAd93iu5XxZs+yz
HKOv6Y9bY/8hvev1+vuf6zmjZ0gp1p29svJUL89A68emuqV3fi8in4Gt/Uw7
NnXQ+dRC+1XDSCv+TJ/cCcnO23HL+XBehebeep6Q1uyVNf0VfSHtUo7oXfDT
nyrhTrh88ySv+w/Vqymt1zPOKr+zsZcLF2rqcX+JwxmS6ZyfNgn+DiFULl3q
kx+at8RuZn5XUs7n+CT3F25mzf61WY40b6fks84/s9NjPxVhIFnvBq2Xmaa/
hEfmP/vgj32m3Cm8kN73mLYfjGa9G1TVqXswqk6aNlkuL5rS8bOs2eqz3Ma3
Gw9/fuaxTyu9u/D7dpPfmS+f/4Ybzs7GVKl3X7kXdCXZ70uGtxVmyVsv/bQJ
0ecjXim02s0vv+3oXWk9G+qIdR57aT1PiD/z/YKWNcszuZylUu+yn2HXNJ8J
4bF7Xvd3nnyL22bVhuNPvEG98336LKC8ivPC5cls1WydISX989PPUqlopUt9
c/6eIU9yOUutCzZTzudck7yM3rVmvqMUoRMfA22YOska02wTrJyoaaV349Zt
QvyGoY/qI2K3PGWKOkiZEo5nphtnmbHDLsz8efETAEbY5St6l8cOALBr7HLM
3+WxAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwvLl26fOPGzVz++PGvr57+ycEq+t82
P1fK8fH9/f39vb29M/RTZkPmZONDWxFP9+gAYKVYyLU/jb0b17vByHau9U45
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
4hW6LWuWm7Hl2Dt6Z4XWnP1MAFgAjU75SUrYmAq7VfacRV8t0ADbuf22vEnq
i0p20i57mUFL5s3vxg2VNX1+51O8PPbxYZbzGQz1Q3cO794lK7fdVPm0dHtc
76y5dPjFF1/6x397p6+LTCaTcAvkR1TWzC/AtMZe6p2vmYeP3gEALEbY0/Mv
Q26DY4PvyQAAAPQJL//fePLf42+Q7VFeAAB4OvAbaNsgMbpJyAuKAAAAAAAA
AAAAAAAAO8KFK5+98/Hdjbvx8+PfXnjzo9t3788sXJHPWzIPXx3/+MzL7+29
eEUGLsMvf5JPOV6z9XmRyZQpXcOMjS/ciEtSYf+VyQ8Pf1nzeM9w5gGgRStc
lNfv6oKYXO8vXf4kR/hc2PF5GT+3RO8UkfgQ91rSvx7rC7AevRNhElcH5Wkj
ejfXZJ7JzANAiy3Ru9KNlm87qHcSgZ977cMVpXUzrS/AevRuLisrdQm9A9h+
5CJ9/f3P5Z7W9lJsa8WQa7ks1ObXbt/T5nZjrMmIVvN3y3IgX3NYKO/Sc6E0
DNa9Vx3ny5qtPiXmSKGVa0rlR2TNy7FntEP7Km0laVXlMiuhuY97Oml+RNqb
Jr9vfXDHO+8ra586jbLEUqLemi0/J17rc9TNfvrwHo6Dny1K68FQx/kwk+XY
S5dafZY7itLWro5+3ic1xRk9Scz5vHD9EaF3ACtFrkF9HhR2zAbzO2s+dSlS
iPBGS++kVc6tQqFqkB2XyWDf+Vyz7FN+MpnT+KMxysdkbVWOPWO7smrXdNxb
l7Y+0I3kdxqfTc3l1xCNdQJtzuVY6kvP2o82LzdIg/XSz1Lv/Cj6S1Baz4bu
n/xUOm9+tkzYyZNdak1IOXbVSjtbOjsArZqhw7msA8DZ4q9Nfzyud/7SttRD
ruXB5yDlTl0oDF/NaLiF7jifa7b6LLXGZ5pWoRx7OUCpf/zgkeRib394R+VP
Cn1uEgRrUO+yxvk81BIKbWjR3n8tHfbWQw5lRrPejdwvdU6k0tBfvvtr6fy0
eqCZx1661JqQcuZbaWx/RP446924dQA4W1ahd4pKzMyXCUulyF2V2tRK+ko/
Q8216Z1ldtdu3xO9k08NxavQuzKdeSr1Lr/LlMeO3gGAp6V35aVXPtnRJp1/
O2CFeT8zRLlWoXZuO1SaoPlCv7mX/Sxrln2WY/Q1/XFr7DpM38nr738ulS3K
lWLtp2VhvbN+bKpbAVZ49sK18laks59pxyYuOp+2wasHuidsrXR+fL5fWs+G
Ourgz6vW2EuXzkTv8ohaNcMyoXcAG6Sld353qFN4Ib3vMW2/tJD1blBVp+71
BnXSP2vTNwREUzp+ljVbfWbrfjvUx+Q89mmldxd+f8vdP7cq34ExP0P5oN75
f6P31gd3+uHd2wqz5K2XftqEyKdmrL5Qqt388tuOOpTWs6GOWI+MvXSp1Wc5
9uX1zp8n81rfeHAAAM+F7kP8PnP9G/MtZJmxAzMPAOeLXY48uzx2AIBdY5dj
/i6PHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDXePz411dP/+RgZuWjo6O907+Dg4OH
Dx9trZ+b4saNm5cuXV6DoePj+/v7+7IQeULsJ/mU443PyVOJrPLgJTBeEwAM
0xr9k69n0u24jsg1e3h4uIYQWqrGFuqdLEHwZxm9k4mV6fWBUbrqr3J2QGfp
rM6NEjVh5+HM8WYnV2RonSyjdwtPCMDusPHLJAfkFbG2LOnMV2TjereGexIv
qXrcH/KSejdu6Lyw8QsZYPspLxN/D2y/Sk2JDMLMTNByRh9J5HgymfjtMtsi
sz8J7OPWpfnFi28I0smtW5/KZ+62b6j0s7SenW+NfZnmIity0+79VMfEWxmm
duvv6qV85j6wlEtD/+vVq++qctlkdjKFlks6+TIoP5++svap1sWilMgaHZz+
la6GFNJkuuyzdCnX7CxQNlSOqJwl+Umq6XLMu7urTpbWy9PDrJuhXLM1IdOt
3L4A2CB+P1OvKb1G/PWul4/W1Et15GYyZCVy7PvPl7x+Hbf+9dffSIdqRWNI
zhN9LtPKknx5y3rL+cCSzW1Fcn5nY5euTKzNbX8csNRMhyndSlSXr+ab9u8t
juR3GnXVkzJDl58EDcXqs9TXNSoFIsxMmVFqny0nWzUHDZUjKmfJL8cCqbdv
EpqHQakEl2PMw+/cuKJ3AEoZ3HxGYBXm3TDJeueFwI5DtBy37oOS9FZmBP5G
fUTvWtZbzgeWbN5akTJC2p1/yCUDJnA3b34kBw8enMin3CpoYbkEg3qXNS4/
Ggtq29kXbclQ63Fb6yFjrjloKI/Ipi4M2S9HR5Ja2EkS+s+D0jO5TCEH9Q4A
PE+f3vl7cm/o6dO7kRdINKhKzevXr0vbL774UhqenHy/Cr3zeWIQuHn1zotL
6LMzS2XNQUNr0ztbu9y2/3DBLzd6B7AArftk/yjNNtDWoHfj1ku9k0huTfwO
Vcf/1n6mPx4UrCWblxMybeidHIy/y+cDrCpyuCvo7KpNh/XO+rFtzMX0Tpvb
1IU+Ww60ag4a6o/IH/vl8KupPY8siti6evVdaRjuWDqXWNih7VwOebDoIIBS
XmJ+S7BzR93C3qPwPQzq3bj1Vn7n/zWfRhWt7/e7tLD0s7Q+LlhLNrc6vofW
Ex+/pdnp89Lv76776Nd6KajcIx3UO/9v9CaTyQJ6Z6Z9/hX6bM1Sp+agof4O
rU8eW7um9qC2v75ZhsqZ94Uz1yhPSGkIAABgkM5mqYgR/wwcAACeDkq907we
sQMAgKeG8/IfFwAAAAAAAAAAAAAAwDnlwpXP3vn47jot/vz4txfe/Oj23fsz
C1fk3vqHXPLV8Y/PvPze3otXZOAy/PIn+ZTjNVufF5lMmdKNzycAQJ9W8C+D
2JlENom0L13+JEf4XNhxbxmXtkTvFJH4oDgt6V+P9QVA7wDgXLB+vSstttzY
Qb374eEvz7324YrSupnWFwC9A4BzgUSq19//fP+ViW1t2U6XIQGtLNTm127f
0+byKbFau5UD+ZrDoJSLFavWKpSGwZB3oONnWbPVp0R7KbRyTak0vQrNW8MM
aIf2VdpK0ir+lH1aEyvRSfMj0t40+X3rgzveeV9ZXdJplNWUEvXWXPVz4rU+
653NhrX1chaOg58tSuvBUMd5AIAzQcKOPiQK22iD+Z01nz6ZN7X0Tirk3CoU
qgbZcZkM9v3MNcs+5SeTOY38GnV9TNZWrWEGbFdW7Wpv909+KvtURvI71QtT
c/k1CIFOoM25HEt96Vn70eblBmmw7n2TTvSnUu/s15lLUFrPhmSWSufP6jwH
APDR2x+P6501CdlNptypC4Xhq/Ufcp+On7lmq89Sa3ymaRUGh6nNjx88klzs
7Q/vqPyp3uU+y6/lLJUa53NGzbCsoc5J+Fo67K1bNhqMZr0buTXqnDOlob98
99fS+dWd+QCwa6xT78oKobClTa2kr3Qp1Fyb3llmd+32PdE7+dTQvQq9yxkW
egcA0KGld+WbDOXjHm0SYmDezwxRrlWo/Wif+oRIPn2h39zLLpU1yz7L4fia
/rg/TN/J6+9/LpUtbgfr/rg1pYN6Z7JuU93SO+HZC9dK7ejsZ9qxCavOp23w
6oHuCVsrHaB/9FZaz4Zazm/8AgGAp4aW3vntsk5hfglEyXo3KKBT93qD+uOf
tenrDaIpHZfKmq0+s3W/HepjcmeYQTI02vvnVmWf5md4j2VQ7/y/0Xvrgzt9
yfC2wix56+V7Nea8fGrG6gul2s0vv+3oXWk9G0LvAGDL6by84Znr35hvIYPD
BACAp5UdEYIdGSYAALTYESHYkWECAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMZ5/PjX
V0//5OCs+rx06fLe3p58bnx0TxnvfHz3wpXPtr/PLeeHh7/svzLZe/HKMy+/
99Xxj3O1lfrSStq+8OZHPz/+rfxpgW4BzgtHR0d7v//1g/yNGzc3qAKl9VXo
nSK2ZnY7PnWt5st4vmTzJVnA+kxtun33fo7DS/a5WRYYUb+5ip2UT08V6rnX
PpSS5buVYynRbgGeVkREDg4OHj58NFh52/RudcicHB4eHh/f7/izv7/fqTAT
9C6A3s1sLuMV7KuMfQGRKmVUpJO0Dp5iJKSL2EngCuWaNGnaojFNorrE9j33
J9G+07NuCfqaUmJNwrE3FKyrFresW3rldTA7r1Ymk4l20jHkhyBGn3/+oCVn
2nZk6krrOvN+RDoEX+5d8jMgY281L/H3Cf7YZr6v2tmluaxPT0P03otXFNUm
25ET5EC++pJ+zVafEqtfuvzJWx/c0UITBfk1NJefpJoE/JG9O9vlm9nn6+9/
rq4uNqJgqGwuheL28YNH6rxUuHb7ntiVgXvxMhHMfipe71p+lvNZLpx0JT5I
iTgjhcHWAvM5b58AI0iUkxTGRzCJxnIsn16PymjZwTcxaSv1Tj6t0I5FREor
Leu+XOUmOy+fGtW9TrUM2Wx0NL3M/uayPp2VItmEqNhlbR3MsEq9kz4vXnxj
3tzQr9egdYlpFlrLXMwnLP1syGqWfWog1Qq20Sc/mUVrpVqpitBPD7XPkEDN
7FN+nXdEpaHcXKqJCkihmFA9uvnlt6rdMljtTSpLufxa+tnyKud35Xxm51UB
dcg6hE6eODif909+Gu8TYBDTO/2qEezk5HtVPV+oYW1E74IQdPTOp0I+TdDw
nhOuEb1Tsc7Ol2rbMhQ6aU1dzv7msj6tJCPMiY6rNfBl9E41fWQ/tnRp0Hp4
KmTiouUhoZi2nyv5mq0+c0y2yK9frYLXOFUNqekN+awtqOFIn/54ZESlobK5
fNWacqCqJ5//+//8i7p05f/+a46p2Z9IRulny6tS77LGZeetoTrW3xcdnM+/
fPfX8T4BBgnatH69kxSjFW9zQD5zvWsZGpy6vBW8vN7JT3m2V6F3imlZTh77
Lg1ab2lTK+krH1eFmivSu9L/VehdOfZBvZNqktCpA5peqQJq0vf2h3eu3b4n
SAVxaRV6l51H7+Ac4d9C1Ajm9zPDBt1IiPNN5NM/v9NQqQ/drLDfoVSYufvX
2s/0xx29y4b6T+683ZAbzms95Nd+llRPLeEt/cnNW376h7BZOv0uZbkE2aVx
67ZbJTHW0hkrtN0wrZxjbFmz7LOMz36vzI591PV7jxnp89kL10Kkndln0NOR
EZWGcnPVO1Ec/VSlM13QpE/kQwpbfioL6112vqN3emcSnlGOzOdcfQLMhX+3
JL810XoVpBMh7eUKqSwZnN881MLJZOJFwayr4qhKjlj3NfvOt54eloYG9a7s
Ydx6mHy/l6vvkMgs+WTKDHWal5hL8nnr1qf+rkP/+rccLZcGrdsbDhql/bM2
fV3krQ/u+FBsry50arb67O+/+cQkb6W2UEn171e0+iz1bnBEpaHcXLM59V/a
Sg+mtvrijc5Mx09vxZcP6l12fl5tGplP9A7OKWUyBbBBtvyfMHTo774CwGZB
72DbOL96p9mNpUWSYaF9ANsDegfbxvnVu+mT/wKu8+QRAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAGCX+f+STM9D
    "], {{0, 132.5}, {296., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{296., 132.5},
  PlotRange->{{0, 296.}, {0, 132.5}}]], "Input",ExpressionUUID->"8aaf7750-\
dc7f-43b9-909f-2b20d7f624f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "One thing we are really interested in recording is the ",
 StyleBox["ShortID. ",
  FontWeight->"Bold"],
 "Which we can use to do computations with it."
}], "Item",
 CellChangeTimes->{{3.824907959543248*^9, 3.8249079803113637`*^9}, {
  3.824908018606861*^9, 3.8249080296206574`*^9}, {3.824908080246997*^9, 
  3.824908081169983*^9}, {3.824908115323234*^9, 
  3.8249081252779384`*^9}},ExpressionUUID->"ae0509f8-5eed-469c-b251-\
1a859856f780"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bin", "=", 
   RowBox[{"Databin", "[", "\"\<U3nir5QP\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8249079948901224`*^9, 3.824908012520121*^9}, 
   3.8249094583668604`*^9},
 CellLabel->
  "In[362]:=",ExpressionUUID->"224f35a8-bf8c-41c8-b1b3-b28131ad4ecb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The first basic thing we can do is add information, you can in principle add \
any type of expression, but DaTaDrop works really well with associations.\
\>", "Item",
 CellChangeTimes->{{3.824908127732379*^9, 
  3.8249081918945417`*^9}},ExpressionUUID->"d2228147-3cec-4afb-a286-\
b46a40cbcb94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DatabinAdd", "[", 
  RowBox[{"bin", ",", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<FirstName\>\"", "\[Rule]", "\"\<Santiago\>\""}], ",", 
     RowBox[{"\"\<LastName\>\"", "\[Rule]", "\"\<Camacho\>\""}], ",", 
     RowBox[{"\"\<Age\>\"", "\[Rule]", "31"}]}], "|>"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824908141934902*^9, 3.8249081547146845`*^9}, {
  3.824908197034481*^9, 3.8249082366804094`*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"0e95258c-2b5e-4713-8cb6-58c805e17391"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Databin",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, {
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]]}, 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"U3nir5QP\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, {
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]]}, 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"U3nir5QP\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/U3nir5QP\"", 
                    "https://wolfr.am/U3nir5QP"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DDf26405d5290-bb24-4dff-8636-87443c3a96cf\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/U3nir5QP\"", 
                    "https://wolfr.am/U3nir5QP"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"santiagoc@wolfram.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"santiagoc@wolfram.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Tue 16 Mar 2021 12:50:47\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DDf26405d5290-bb24-4dff-8636-87443c3a96cf"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Databin["U3nir5QP"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.824908238808838*^9, 3.8249082515552692`*^9}, 
   3.8249094618746405`*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"7d8fa1c7-75f5-43c8-bc2b-e5edcfbc7ea9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Note that it dynamically updates the originally created interface above. Let \
us add a few more values\
\>", "Item",
 CellChangeTimes->{{3.8249082588444695`*^9, 
  3.8249082871331325`*^9}},ExpressionUUID->"da553eef-64b2-4688-be67-\
e1dc9bc04ceb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DatabinAdd", "[", 
   RowBox[{"bin", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<FirstName\>\"", "\[Rule]", "\"\<David\>\""}], ",", 
      RowBox[{"\"\<LastName\>\"", "\[Rule]", "\"\<Stevens\>\""}], ",", 
      RowBox[{"\"\<Age\>\"", "\[Rule]", "26"}]}], "|>"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8249083096769824`*^9, 3.8249083220425844`*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"ab2d3cf1-6da2-479e-a2f4-087c46e32850"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DatabinAdd", "[", 
   RowBox[{"bin", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<FirstName\>\"", "\[Rule]", "\"\<Kelvin\>\""}], ",", 
      RowBox[{"\"\<LastName\>\"", "\[Rule]", "\"\<Mischo\>\""}], ",", 
      RowBox[{"\"\<Age\>\"", "\[Rule]", "36"}]}], "|>"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8249083096769824`*^9, 3.8249083555201845`*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"12a5ce5d-31c0-4c31-b052-838534e4589b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["To get the Information in the databin we can use the Values", "Item",
 CellChangeTimes->{{3.824908368872016*^9, 
  3.824908389733013*^9}},ExpressionUUID->"7b0d0252-6951-43b3-8e60-\
6a40b405c940"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bin", "[", "\"\<Values\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.824908394084935*^9, 3.824908398039904*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"705aa9cb-6c3b-4dfd-ab59-5f03a97b956f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"FirstName\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Santiago\"\>", ",", "\<\"David\"\>", 
      ",", "\<\"Kelvin\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"LastName\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Camacho\"\>", ",", "\<\"Stevens\"\>", 
      ",", "\<\"Mischo\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"Age\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"31", ",", "26", ",", "36"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8249094677530317`*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"8046e6b1-2999-48cc-9674-64520044784a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "We see that it saves everything as an association. Great for ",
 StyleBox["Dataset",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.8249084273676567`*^9, 3.82490843591185*^9}, {
  3.8249084744333277`*^9, 
  3.8249084830573807`*^9}},ExpressionUUID->"f745737b-4f01-4c77-80b3-\
c16748599797"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{"Dataset", "[", "bin", "]"}]}]], "Input",
 CellChangeTimes->{{3.8249085321052356`*^9, 3.824908536533665*^9}, {
  3.82490857737737*^9, 3.824908579271435*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"7e46d5c3-c2f0-4de6-bdf8-78f4df2e4de5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "FirstName" -> "Santiago", "LastName" -> "Camacho", "Age" -> 31, 
        "Timestamp" -> 
        DateObject[{2021, 3, 16, 12, 51, 1.7849998474121094`}, "Instant", 
          "Gregorian", -6.]], 
       Association[
       "FirstName" -> "David", "LastName" -> "Stevens", "Age" -> 26, 
        "Timestamp" -> 
        DateObject[{2021, 3, 16, 12, 51, 4.189000129699707}, "Instant", 
          "Gregorian", -6.]], 
       Association[
       "FirstName" -> "Kelvin", "LastName" -> "Mischo", "Age" -> 36, 
        "Timestamp" -> 
        DateObject[{2021, 3, 16, 12, 51, 5.294000148773193}, "Instant", 
          "Gregorian", -6.]]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "FirstName"} -> 1, {All, "LastName"} -> 
        1, {All, "Age"} -> 1, {All, "Timestamp"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "FirstName" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], "LastName" -> 
            TypeSystem`PackageScope`AtomShape[67.20000000000002], "Age" -> 
            TypeSystem`PackageScope`AtomShape[34], "Timestamp" -> 
            TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 4, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"FirstName", "LastName", "Age", "Timestamp"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 3], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "FirstName"} -> 1, {All, "LastName"} -> 
        1, {All, "Age"} -> 1, {All, "Timestamp"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "FirstName" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], "LastName" -> 
            TypeSystem`PackageScope`AtomShape[67.20000000000002], "Age" -> 
            TypeSystem`PackageScope`AtomShape[34], "Timestamp" -> 
            TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 4, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"FirstName", "LastName", "Age", "Timestamp"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 3], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     3, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FirstName", 
                  Style[
                  "FirstName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "FirstName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "FirstName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LastName", 
                  Style[
                  "LastName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "LastName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "LastName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age", 
                  Style[
                  "Age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Age"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Timestamp", 
                  Style[
                  "Timestamp", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Timestamp"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Timestamp"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Santiago", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["FirstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Camacho", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["LastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Tue 16 Mar 2021 12:51:01\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["David", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["FirstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Stevens", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["LastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Tue 16 Mar 2021 12:51:04\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["FirstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Mischo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["LastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Tue 16 Mar 2021 12:51:05\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{394., {63., 69.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{394., {63., 69.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.824908537323224*^9, 3.8249085809176035`*^9, 
  3.8249094750407877`*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"555ed2f3-7ae6-4d18-af92-ec2431146458"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["With this we can do any type of analytics on the information", "Item",
 CellChangeTimes->{{3.824908550378788*^9, 
  3.8249085717827415`*^9}},ExpressionUUID->"621525ff-191e-42f4-b248-\
9da21f467242"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "[", 
  RowBox[{"Mean", ",", "\"\<Age\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8249085830646086`*^9, 3.824908589547839*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"880f0781-a752-401e-b7e8-3d5eae176fd1"],

Cell[BoxData["31"], "Output",
 CellChangeTimes->{3.824908590341366*^9, 3.824909478410782*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"676adf6e-d6b5-4f54-9f5f-e1ee429f08d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "[", 
  RowBox[{"Max", ",", "\"\<Age\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8249085830646086`*^9, 3.824908589547839*^9}, {
  3.824908637183457*^9, 3.8249086504506893`*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"2c2df39b-16a8-4bab-9d6f-1f6f987fef82"],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{{3.824908641629261*^9, 3.8249086510999107`*^9}, 
   3.824909480885269*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"5b13bd46-4361-4ed2-9432-d98959c47415"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "[", 
  RowBox[{"WordCloud", ",", "\"\<LastName\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.824908657432071*^9, 3.824908674780924*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"63502199-856b-4fe5-b24c-b411f5646ffd"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Camacho\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.23411371237458192`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Stevens\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.23411371237458192`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {8.5, 48.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Mischo\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.23411371237458192`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-0.5, -52.5}, 
    Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-150., 149.}, {-79., 78.}}]], "Output",
 CellChangeTimes->{3.8249086762005224`*^9, 3.824909483478428*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"b654f8d2-69db-484e-9d5f-8bd6ebe27552"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Forms", "Subsection",
 CellChangeTimes->{{3.824908700361862*^9, 
  3.8249087009517956`*^9}},ExpressionUUID->"c885c283-58b5-49a8-a3fa-\
8b0b0459afba"],

Cell[CellGroupData[{

Cell[TextData[{
 "There are two main functions we will be interested in ",
 StyleBox["FormFunction",
  FontWeight->"Bold"],
 " and ",
 StyleBox["FormPage",
  FontWeight->"Bold"],
 ". Their final effect is a bit different but their outline is the same."
}], "Item",
 CellChangeTimes->{{3.824908703067157*^9, 3.8249087259683723`*^9}, {
  3.8249087563021717`*^9, 
  3.824908793692115*^9}},ExpressionUUID->"4d7c499e-0fe3-45aa-8bce-\
70bd3a30722b"],

Cell[BoxData[
 RowBox[{"FormFunction", "[", 
  RowBox[{
   TagBox[
    FrameBox["formspec"],
    "Placeholder"], ",", 
   TagBox[
    FrameBox["func"],
    "Placeholder"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8249088131428375`*^9, 
  3.824908817530862*^9}},ExpressionUUID->"15b9d7e3-e25a-4433-9847-\
3e83d92d4a23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormFunction", "[", 
  RowBox[{
   RowBox[{"\"\<number\>\"", "\[Rule]", "Integer"}], ",", 
   RowBox[{
    RowBox[{"#number", "^", "2"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8249087989844837`*^9, 3.8249088493781767`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"889d64e2-01a2-46a7-b853-463bcb3f437a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FormFunction",
    "SummaryHead"], "[", 
   TemplateBox[{
     DynamicModuleBox[{Forms`Format`PackagePrivate`values$$}, 
      DynamicBox[
       ToBoxes[
        If[
         ValueQ[Forms`Format`PackagePrivate`values$$], 
         Column[{
           Panel[
            Style[
             (Slot["number"]^2& )[Forms`Format`PackagePrivate`values$$], 
             "Output", "StandardForm"], Background -> White], 
           Item[
            Row[{
              Spacer[0], 
              Forms`Format`PackagePrivate`formCancelButton["Back", 
               Clear[Forms`Format`PackagePrivate`values$$], 
               FormObject[
                Association[
                "number" -> Association["Interpreter" -> Integer]]][
               AppearanceRules, "FormCancelButtonStyle"]]}], Alignment -> 
            Right]}, Alignment -> Right], 
         Forms`Format`PackagePrivate`values$$; Forms`PackageScope`bindForm[
           Forms`PackageScope`changeAppearanceRule[
            FormObject[
             Association["number" -> Association["Interpreter" -> Integer]]], 
            "CancelLabel" -> None], Forms`Format`PackagePrivate`values$$]], 
        StandardForm], ImageSizeCache -> {274., {32.35, 36.85}}, 
       TrackedSymbols :> {Forms`Format`PackagePrivate`values$$}], 
      DynamicModuleValues :> {}]},
    "FormPanel"], "]"}],
  FormFunction[
   FormObject[
    Association["number" -> Association["Interpreter" -> Integer]]], 
   Slot["number"]^2& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8249088498549776`*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"36c79035-174d-411d-9511-0fccffdca2e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormPage", "[", 
  RowBox[{
   RowBox[{"\"\<number\>\"", "\[Rule]", "Integer"}], ",", 
   RowBox[{
    RowBox[{"#number", "^", "2"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8249087989844837`*^9, 3.8249088657245708`*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"e1675a27-d504-4fb5-ae57-77a1d7f9260c"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Forms`FormPage`PackagePrivate`temp$$ = Association[
   "number" -> Association["Interpreter" -> Integer, "Input" -> "4"]], 
   Forms`FormPage`PackagePrivate`vals$$ = Association["number" -> 4], 
   Forms`FormPage`PackagePrivate`valid$$ = True, 
   Forms`FormPage`PackagePrivate`form2$$ = FormObject[
    Association[
    "number" -> Association["Interpreter" -> Integer, "Input" -> "4"]], 
    Association["number" -> 4]], Forms`FormPage`PackagePrivate`valid2$$}, 
   DynamicBox[ToBoxes[
     With[{Forms`FormPage`PackagePrivate`formpane$ = Panel[
         Forms`getFormLayout[
          Forms`PackageScope`bindableForm[
          Forms`FormPage`PackagePrivate`temp$$, 
           Evaluate[Forms`FormPage`PackagePrivate`form2$$], None, None -> 
           Forms`PackageScope`completeAction[
            Forms`FormPage`PackagePrivate`form2$$, 
             Forms`FormPage`PackagePrivate`temp$$, 
             Forms`FormPage`PackagePrivate`vals$$, (
             Unset[Forms`FormPage`PackagePrivate`vals$$]; 
             Forms`FormPage`PackagePrivate`vals$$ = #; 
             Forms`FormPage`PackagePrivate`valid2$$ = Not[
                TrueQ[Forms`PackageScope`$DontComplete]])& , {}]]]], 
       Forms`FormPage`PackagePrivate`resultpane$ = Framed[
         If[
         Forms`FormPage`PackagePrivate`valid$$ = 
          And[Forms`FormPage`PackagePrivate`vals$$ =!= Association[], 
            FreeQ[
             Values[Forms`FormPage`PackagePrivate`vals$$], 
             Alternatives[
              Blank[Failure], Forms`PackageScope`fieldHidden]], 
            TrueQ[Forms`FormPage`PackagePrivate`valid2$$]], 
          Unset[Forms`FormPage`PackagePrivate`valid2$$]; Style[
            (Slot["number"]^2& )[Forms`FormPage`PackagePrivate`vals$$], 
            "Output", "StandardForm"], 
          Style["Invalid form", "Message"]], FrameStyle -> Lighter[Gray], 
         Background -> White]}, 
      Panel[
       Column[
        Forms`doLayout[
        Automatic, Forms`FormPage`PackagePrivate`valid$$, {
         Forms`FormPage`PackagePrivate`formpane$, 
          Forms`FormPage`PackagePrivate`resultpane$, 
          Panel[
           Item[
            Row[{
              Spacer[0], 
              DefaultButton[
               Forms`PackageScope`completeAction[
               Forms`FormPage`PackagePrivate`form2$$, 
                Forms`FormPage`PackagePrivate`temp$$, 
                Forms`FormPage`PackagePrivate`vals$$, (
                Unset[Forms`FormPage`PackagePrivate`vals$$]; 
                Forms`FormPage`PackagePrivate`vals$$ = #; 
                Forms`FormPage`PackagePrivate`valid2$$ = Not[
                   TrueQ[Forms`PackageScope`$DontComplete]])& , {}]]}], 
            Alignment -> Right]]}]]]], StandardForm],
    ImageSizeCache->{323.25, {80.625, 85.125}},
    TrackedSymbols:>{Forms`FormPage`PackagePrivate`vals$$}],
   DynamicModuleValues:>{}],
  FormPage[
   FormObject[
    Association["number" -> Association["Interpreter" -> Integer]], 
    Association[]], Slot["number"]^2& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.824908867760621*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"bc8b4fb4-75ea-48ac-ba62-85134c9134e8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This is of course more interesting once you deploy these forms\
\>", "Item",
 CellChangeTimes->{{3.8249089047366343`*^9, 
  3.824908922069704*^9}},ExpressionUUID->"6b864c0d-3963-4250-b944-\
ffe115b397f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"FormPage", "[", 
    RowBox[{
     RowBox[{"\"\<number\>\"", "\[Rule]", "Integer"}], ",", 
     RowBox[{
      RowBox[{"#number", "^", "2"}], "&"}]}], "]"}], ",", 
   "\"\<mySquareForm\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82490892467236*^9, 3.824908944112893*^9}, {
  3.82490897851756*^9, 3.8249089827367396`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"a88df05a-0e65-49e7-99f8-f83204afbedd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/mySquareForm\"", 
     "https://www.wolframcloud.com/obj/santiagoc/mySquareForm"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/santiagoc/mySquareForm"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8249089875712385`*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"86468809-09c3-4e68-a12f-b123bf2cdcdb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8249089899174767`*^9, 3.824908993065175*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"0168e6cb-2184-4a01-b9b2-c198d0785085"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
You can use these together with created databins to store data on them\
\>", "Item",
 CellChangeTimes->{{3.824909041881938*^9, 
  3.8249090799347253`*^9}},ExpressionUUID->"708502d8-4218-4890-b069-\
7adf56e4bf5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"FormPage", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<first\>\"", "\[Rule]", "String"}], ",", 
       RowBox[{"\"\<last\>\"", "\[Rule]", "String"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "Integer"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DatabinAdd", "[", 
         RowBox[{
          RowBox[{"Databin", "[", "\"\<U3nir5QP\>\"", "]"}], ",", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<FirstName\>\"", "\[Rule]", "#first"}], ",", 
            RowBox[{"\"\<LastName\>\"", "\[Rule]", "#last"}], ",", 
            RowBox[{"\"\<Age\>\"", "\[Rule]", "#age"}]}], "|>"}]}], "]"}], 
        ";", "\[IndentingNewLine]", "\"\<Thank you for your submission\>\""}],
        ")"}], "&"}]}], "]"}], ",", "\[IndentingNewLine]", 
   "\"\<myNameForm\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824909098900016*^9, 3.824909258906144*^9}, {
   3.8249093371593795`*^9, 3.824909349054469*^9}, {3.8249094115712347`*^9, 
   3.824909414532507*^9}, 3.824909497396558*^9, {3.8249095326589613`*^9, 
   3.8249095689654245`*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"fb712d65-96f7-47c3-b7f0-5ecf25be22cc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/myNameForm\"", 
     "https://www.wolframcloud.com/obj/santiagoc/myNameForm"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/santiagoc/myNameForm"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8249092750650883`*^9, 3.8249095016829643`*^9, 
  3.8249095757507076`*^9},
 CellLabel->
  "Out[372]=",ExpressionUUID->"bf61c130-4fc9-44e0-b74c-96c7da399bed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8249092781783447`*^9, 3.8249092812296953`*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"ee00bb9c-eab7-42fc-97f1-ed564fc0da3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "bin", "]"}]], "Input",
 CellChangeTimes->{{3.8249093535058594`*^9, 3.82490936882892*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"606107e0-2bdc-4b6e-b0d7-ec412888fc20"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "FirstName" -> "Santiago", "LastName" -> "Camacho", "Age" -> 31, 
        "Timestamp" -> 
        DateObject[{2021, 3, 16, 12, 51, 1.7849998474121094`}, "Instant", 
          "Gregorian", -6.]], 
       Association[
       "FirstName" -> "David", "LastName" -> "Stevens", "Age" -> 26, 
        "Timestamp" -> 
        DateObject[{2021, 3, 16, 12, 51, 4.189000129699707}, "Instant", 
          "Gregorian", -6.]], 
       Association[
       "FirstName" -> "Kelvin", "LastName" -> "Mischo", "Age" -> 36, 
        "Timestamp" -> 
        DateObject[{2021, 3, 16, 12, 51, 5.294000148773193}, "Instant", 
          "Gregorian", -6.]], 
       Association[
       "FirstName" -> "Jane", "LastName" -> "Doe", "Age" -> 23, "Timestamp" -> 
        DateObject[{2021, 3, 16, 12, 53, 10.698999881744385`}, "Instant", 
          "Gregorian", -6.]], 
       Association[
       "FirstName" -> "Ashley", "LastName" -> "Johnson", "Age" -> 32, 
        "Timestamp" -> 
        DateObject[{2021, 3, 16, 12, 55, 50.96600008010864}, "Instant", 
          "Gregorian", -6.]]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "FirstName"} -> 1, {All, "LastName"} -> 
        1, {All, "Age"} -> 1, {All, "Timestamp"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "FirstName" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], "LastName" -> 
            TypeSystem`PackageScope`AtomShape[67.20000000000002], "Age" -> 
            TypeSystem`PackageScope`AtomShape[34], "Timestamp" -> 
            TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 4, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"FirstName", "LastName", "Age", "Timestamp"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 5], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "FirstName"} -> 1, {All, "LastName"} -> 
        1, {All, "Age"} -> 1, {All, "Timestamp"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "FirstName" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], "LastName" -> 
            TypeSystem`PackageScope`AtomShape[67.20000000000002], "Age" -> 
            TypeSystem`PackageScope`AtomShape[34], "Timestamp" -> 
            TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 4, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"FirstName", "LastName", "Age", "Timestamp"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 5], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     5, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FirstName", 
                  Style[
                  "FirstName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "FirstName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "FirstName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LastName", 
                  Style[
                  "LastName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "LastName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "LastName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age", 
                  Style[
                  "Age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Age"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Timestamp", 
                  Style[
                  "Timestamp", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Timestamp"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Timestamp"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Santiago", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["FirstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Camacho", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["LastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Tue 16 Mar 2021 12:51:01\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["David", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["FirstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Stevens", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["LastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Tue 16 Mar 2021 12:51:04\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["FirstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Mischo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["LastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Tue 16 Mar 2021 12:51:05\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Jane", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["FirstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Doe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["LastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Tue 16 Mar 2021 12:53:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Ashley", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["FirstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Johnson", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["LastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Tue 16 Mar 2021 12:55:50\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{394., {87., 93.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{394., {87., 93.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8249095993044853`*^9, 3.824909811012944*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"2b18b099-a42c-49dd-94e7-abdd655d4991"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We can further customize the look of the forms by changing the formspec \
values to be associations.\
\>", "Item",
 CellChangeTimes->{{3.824909937432864*^9, 
  3.824909992011142*^9}},ExpressionUUID->"f13836a7-a328-45af-a919-\
d785a37f96ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormPage", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<first\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Interpreter\>\"", "\[Rule]", " ", "String"}], ",", 
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<First Name\>\""}]}], 
       "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<last\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Interpreter\>\"", "\[Rule]", " ", "String"}], ",", 
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Last Name\>\""}], ",", 
        RowBox[{"\"\<Hint\>\"", "\[Rule]", "\"\<Smith\>\""}]}], "|>"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<age\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Interpreter\>\"", "\[Rule]", "Integer"}], ",", 
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Age\>\""}], ",", 
        RowBox[{"\"\<Hint\>\"", "\[Rule]", "\"\<22\>\""}], ",", 
        RowBox[{
        "\"\<Help\>\"", "\[Rule]", 
         "\"\<This is the number of years passed since you were born\>\""}]}],
        "|>"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"DatabinAdd", "[", 
       RowBox[{
        RowBox[{"Databin", "[", "\"\<U3nir5QP\>\"", "]"}], ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<FirstName\>\"", "\[Rule]", "#first"}], ",", 
          RowBox[{"\"\<LastName\>\"", "\[Rule]", "#last"}], ",", 
          RowBox[{"\"\<Age\>\"", "\[Rule]", "#age"}]}], "|>"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\"\<Thank you for your submission\>\""}], ")"}],
     "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824909999343936*^9, 3.824910208156644*^9}, {
  3.824910351924186*^9, 3.824910386888281*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"01a3a229-7e3b-4019-a44e-96166669f01d"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Forms`FormPage`PackagePrivate`temp$$ = Association[
   "first" -> Association[
     "Interpreter" -> String, "Label" -> "First Name", "Input" -> ""], "last" -> 
    Association[
     "Interpreter" -> String, "Label" -> "Last Name", "Hint" -> "Smith", 
      "Input" -> ""], "age" -> 
    Association[
     "Interpreter" -> Integer, "Label" -> "Age", "Hint" -> "22", "Help" -> 
      "This is the number of years passed since you were born", "Input" -> 
      ""]], Forms`FormPage`PackagePrivate`vals$$ = Association[], 
   Forms`FormPage`PackagePrivate`valid$$ = False, 
   Forms`FormPage`PackagePrivate`form2$$ = FormObject[
    Association[
    "first" -> Association["Interpreter" -> String, "Label" -> "First Name"], 
     "last" -> Association[
      "Interpreter" -> String, "Label" -> "Last Name", "Hint" -> "Smith"], 
     "age" -> Association[
      "Interpreter" -> Integer, "Label" -> "Age", "Hint" -> "22", "Help" -> 
       "This is the number of years passed since you were born"]], 
    Association[]], Forms`FormPage`PackagePrivate`valid2$$}, 
   DynamicBox[ToBoxes[
     With[{Forms`FormPage`PackagePrivate`formpane$ = Panel[
         Forms`getFormLayout[
          Forms`PackageScope`bindableForm[
          Forms`FormPage`PackagePrivate`temp$$, 
           Evaluate[Forms`FormPage`PackagePrivate`form2$$], None, None -> 
           Forms`PackageScope`completeAction[
            Forms`FormPage`PackagePrivate`form2$$, 
             Forms`FormPage`PackagePrivate`temp$$, 
             Forms`FormPage`PackagePrivate`vals$$, (
             Unset[Forms`FormPage`PackagePrivate`vals$$]; 
             Forms`FormPage`PackagePrivate`vals$$ = #; 
             Forms`FormPage`PackagePrivate`valid2$$ = Not[
                TrueQ[Forms`PackageScope`$DontComplete]])& , {}]]]], 
       Forms`FormPage`PackagePrivate`resultpane$ = Framed[
         If[
         Forms`FormPage`PackagePrivate`valid$$ = 
          And[Forms`FormPage`PackagePrivate`vals$$ =!= Association[], 
            FreeQ[
             Values[Forms`FormPage`PackagePrivate`vals$$], 
             Alternatives[
              Blank[Failure], Forms`PackageScope`fieldHidden]], 
            TrueQ[Forms`FormPage`PackagePrivate`valid2$$]], 
          Unset[Forms`FormPage`PackagePrivate`valid2$$]; Style[
            ((DatabinAdd[
              Databin["U3nir5QP"], 
              Association[
              "FirstName" -> Slot["first"], "LastName" -> Slot["last"], "Age" -> 
               Slot["age"]]]; "Thank you for your submission")& )[
            Forms`FormPage`PackagePrivate`vals$$], "Output", "StandardForm"], 
          Style["Invalid form", "Message"]], FrameStyle -> Lighter[Gray], 
         Background -> White]}, 
      Panel[
       Column[
        Forms`doLayout[
        Automatic, Forms`FormPage`PackagePrivate`valid$$, {
         Forms`FormPage`PackagePrivate`formpane$, 
          Forms`FormPage`PackagePrivate`resultpane$, 
          Panel[
           Item[
            Row[{
              Spacer[0], 
              DefaultButton[
               Forms`PackageScope`completeAction[
               Forms`FormPage`PackagePrivate`form2$$, 
                Forms`FormPage`PackagePrivate`temp$$, 
                Forms`FormPage`PackagePrivate`vals$$, (
                Unset[Forms`FormPage`PackagePrivate`vals$$]; 
                Forms`FormPage`PackagePrivate`vals$$ = #; 
                Forms`FormPage`PackagePrivate`valid2$$ = Not[
                   TrueQ[Forms`PackageScope`$DontComplete]])& , {}]]}], 
            Alignment -> Right]]}]]]], StandardForm],
    ImageSizeCache->{394.5, {108., 112.5}},
    TrackedSymbols:>{Forms`FormPage`PackagePrivate`vals$$}],
   DynamicModuleValues:>{}],
  FormPage[
   FormObject[
    Association[
    "first" -> Association["Interpreter" -> String, "Label" -> "First Name"], 
     "last" -> Association[
      "Interpreter" -> String, "Label" -> "Last Name", "Hint" -> "Smith"], 
     "age" -> Association[
      "Interpreter" -> Integer, "Label" -> "Age", "Hint" -> "22", "Help" -> 
       "This is the number of years passed since you were born"]], 
    Association[]], (DatabinAdd[
     Databin["U3nir5QP"], 
     Association[
     "FirstName" -> Slot["first"], "LastName" -> Slot["last"], "Age" -> 
      Slot["age"]]]; "Thank you for your submission")& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.824910188954911*^9, 3.824910211842059*^9}, {
  3.824910354599407*^9, 3.824910387439906*^9}},
 CellLabel->
  "Out[382]=",ExpressionUUID->"aff935aa-4497-4304-85a6-c8e820272b38"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "We can also add ",
 StyleBox["AppearanceRules",
  FontWeight->"Bold"],
 " and a ",
 StyleBox["PageTheme",
  FontWeight->"Bold"],
 " to it."
}], "Item",
 CellChangeTimes->{{3.824910761414843*^9, 3.824910772719952*^9}, {
  3.824910803796627*^9, 3.824910813292248*^9}, {3.8249115168866525`*^9, 
  3.8249115266549277`*^9}},ExpressionUUID->"e114136a-ee26-4987-a195-\
7d6fca3e7c52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormPage", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<first\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Interpreter\>\"", "\[Rule]", " ", "String"}], ",", 
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<First Name\>\""}]}], 
       "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<last\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Interpreter\>\"", "\[Rule]", " ", "String"}], ",", 
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Last Name\>\""}], ",", 
        RowBox[{"\"\<Hint\>\"", "\[Rule]", "\"\<Smith\>\""}]}], "|>"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<age\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Interpreter\>\"", "\[Rule]", "Integer"}], ",", 
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Age\>\""}], ",", 
        RowBox[{"\"\<Hint\>\"", "\[Rule]", "\"\<22\>\""}], ",", 
        RowBox[{
        "\"\<Help\>\"", "\[Rule]", 
         "\"\<This is the number of years passed since you were born\>\""}]}],
        "|>"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"DatabinAdd", "[", 
       RowBox[{
        RowBox[{"Databin", "[", "\"\<U3nir5QP\>\"", "]"}], ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<FirstName\>\"", "\[Rule]", "#first"}], ",", 
          RowBox[{"\"\<LastName\>\"", "\[Rule]", "#last"}], ",", 
          RowBox[{"\"\<Age\>\"", "\[Rule]", "#age"}]}], "|>"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\"\<Thank you for your submission\>\""}], ")"}],
     "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AppearanceRules", "\[Rule]", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Title\>\"", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Identification Form\>\"", ",", "Blue", ",", "34"}], 
        "]"}]}], ",", 
      RowBox[{
      "\"\<Description\>\"", "\[Rule]", 
       "\"\<Please tell us a bit about yourself.\>\""}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PageTheme", "\[Rule]", "\"\<Black\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824909999343936*^9, 3.824910208156644*^9}, 
   3.824910339074136*^9, {3.8249107520047336`*^9, 3.8249107525585394`*^9}, {
   3.824910821440815*^9, 3.8249108940040197`*^9}, {3.8249109346525555`*^9, 
   3.824910935204127*^9}, {3.8249114562114344`*^9, 3.8249114920107627`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"0b8ce2dd-d4d5-4cc2-97e2-71812b20e4b6"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Forms`FormPage`PackagePrivate`temp$$ = Association[
   "first" -> Association[
     "Interpreter" -> String, "Label" -> "First Name", "Input" -> ""], "last" -> 
    Association[
     "Interpreter" -> String, "Label" -> "Last Name", "Hint" -> "Smith", 
      "Input" -> ""], "age" -> 
    Association[
     "Interpreter" -> Integer, "Label" -> "Age", "Hint" -> "22", "Help" -> 
      "This is the number of years passed since you were born", "Input" -> 
      ""]], Forms`FormPage`PackagePrivate`vals$$ = Association[], 
   Forms`FormPage`PackagePrivate`valid$$ = False, 
   Forms`FormPage`PackagePrivate`form2$$ = FormObject[
    Association[
    "first" -> Association["Interpreter" -> String, "Label" -> "First Name"], 
     "last" -> Association[
      "Interpreter" -> String, "Label" -> "Last Name", "Hint" -> "Smith"], 
     "age" -> Association[
      "Interpreter" -> Integer, "Label" -> "Age", "Hint" -> "22", "Help" -> 
       "This is the number of years passed since you were born"]], 
    Association[], AppearanceRules -> 
    Association["Title" -> Style["Identification Form", 
        RGBColor[0, 0, 1], 34], "Description" -> 
      "Please tell us a bit about yourself."], PageTheme -> "Black"], 
   Forms`FormPage`PackagePrivate`valid2$$}, 
   DynamicBox[ToBoxes[
     With[{Forms`FormPage`PackagePrivate`formpane$ = Panel[
         Forms`getFormLayout[
          Forms`PackageScope`bindableForm[
          Forms`FormPage`PackagePrivate`temp$$, 
           Evaluate[Forms`FormPage`PackagePrivate`form2$$], None, None -> 
           Forms`PackageScope`completeAction[
            Forms`FormPage`PackagePrivate`form2$$, 
             Forms`FormPage`PackagePrivate`temp$$, 
             Forms`FormPage`PackagePrivate`vals$$, (
             Unset[Forms`FormPage`PackagePrivate`vals$$]; 
             Forms`FormPage`PackagePrivate`vals$$ = #; 
             Forms`FormPage`PackagePrivate`valid2$$ = Not[
                TrueQ[Forms`PackageScope`$DontComplete]])& , {
             AppearanceRules -> 
              Association["Title" -> Style["Identification Form", 
                  RGBColor[0, 0, 1], 34], "Description" -> 
                "Please tell us a bit about yourself."], PageTheme -> 
              "Black"}]]]], Forms`FormPage`PackagePrivate`resultpane$ = Framed[
         If[
         Forms`FormPage`PackagePrivate`valid$$ = 
          And[Forms`FormPage`PackagePrivate`vals$$ =!= Association[], 
            FreeQ[
             Values[Forms`FormPage`PackagePrivate`vals$$], 
             Alternatives[
              Blank[Failure], Forms`PackageScope`fieldHidden]], 
            TrueQ[Forms`FormPage`PackagePrivate`valid2$$]], 
          Unset[Forms`FormPage`PackagePrivate`valid2$$]; Style[
            ((DatabinAdd[
              Databin["U3nir5QP"], 
              Association[
              "FirstName" -> Slot["first"], "LastName" -> Slot["last"], "Age" -> 
               Slot["age"]]]; "Thank you for your submission")& )[
            Forms`FormPage`PackagePrivate`vals$$], "Output", "StandardForm"], 
          Style["Invalid form", "Message"]], FrameStyle -> Lighter[Gray], 
         Background -> White]}, 
      Panel[
       Column[
        Forms`doLayout[
        Automatic, Forms`FormPage`PackagePrivate`valid$$, {
         Forms`FormPage`PackagePrivate`formpane$, 
          Forms`FormPage`PackagePrivate`resultpane$, 
          Panel[
           Item[
            Row[{
              Spacer[0], 
              DefaultButton[
               Forms`PackageScope`completeAction[
               Forms`FormPage`PackagePrivate`form2$$, 
                Forms`FormPage`PackagePrivate`temp$$, 
                Forms`FormPage`PackagePrivate`vals$$, (
                Unset[Forms`FormPage`PackagePrivate`vals$$]; 
                Forms`FormPage`PackagePrivate`vals$$ = #; 
                Forms`FormPage`PackagePrivate`valid2$$ = Not[
                   TrueQ[Forms`PackageScope`$DontComplete]])& , {
                AppearanceRules -> 
                 Association["Title" -> Style["Identification Form", 
                    RGBColor[0, 0, 1], 34], "Description" -> 
                   "Please tell us a bit about yourself."], PageTheme -> 
                 "Black"}]]}], Alignment -> Right]]}]]]], StandardForm],
    ImageSizeCache->{394.5, {154.875, 159.375}},
    TrackedSymbols:>{Forms`FormPage`PackagePrivate`vals$$}],
   DynamicModuleValues:>{}],
  FormPage[
   FormObject[
    Association[
    "first" -> Association["Interpreter" -> String, "Label" -> "First Name"], 
     "last" -> Association[
      "Interpreter" -> String, "Label" -> "Last Name", "Hint" -> "Smith"], 
     "age" -> Association[
      "Interpreter" -> Integer, "Label" -> "Age", "Hint" -> "22", "Help" -> 
       "This is the number of years passed since you were born"]], 
    Association[], AppearanceRules -> 
    Association["Title" -> Style["Identification Form", 
        RGBColor[0, 0, 1], 34], "Description" -> 
      "Please tell us a bit about yourself."], PageTheme -> "Black"], (
   DatabinAdd[
     Databin["U3nir5QP"], 
     Association[
     "FirstName" -> Slot["first"], "LastName" -> Slot["last"], "Age" -> 
      Slot["age"]]]; "Thank you for your submission")& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8249108990961823`*^9, 3.824910936536603*^9, {3.824911473339806*^9, 
   3.8249114923717875`*^9}},
 CellLabel->
  "Out[389]=",ExpressionUUID->"bf4aff5a-0332-456c-8c7f-b4cf0b0d26af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"%", ",", "\"\<myNameForm\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824910902464253*^9, 3.824910922464992*^9}, {
  3.824910964795998*^9, 3.824910975925767*^9}, {3.824911444226899*^9, 
  3.824911445292114*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"fda23b6c-5857-4e7e-ab55-172ba069a30f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/myNameForm\"", 
     "https://www.wolframcloud.com/obj/santiagoc/myNameForm"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/santiagoc/myNameForm"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.8249109235391693`*^9, 3.824910940237319*^9}, {
  3.8249114775129786`*^9, 3.824911497442218*^9}},
 CellLabel->
  "Out[390]=",ExpressionUUID->"c1228708-ff7a-481a-b3a4-8c029e57ff45"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API creation and Deployment", "Subsection",
 CellChangeTimes->{{3.8249115356229563`*^9, 3.8249115359879827`*^9}, {
  3.8249115838464813`*^9, 
  3.8249115879906282`*^9}},ExpressionUUID->"faf31f36-32c3-492d-82ca-\
2b6111e3ced4"],

Cell[CellGroupData[{

Cell[TextData[{
 "The API outline is very similar to that of forms the main difference is \
that we use the ",
 StyleBox["APIFunction",
  FontWeight->"Bold"],
 " symbol to create them."
}], "Item",
 CellChangeTimes->{{3.8249115902715893`*^9, 3.824911591879296*^9}, {
  3.824911706015109*^9, 
  3.8249117516889315`*^9}},ExpressionUUID->"cb7e568d-cffd-46c5-8b1d-\
d23e12b9a396"],

Cell[BoxData[
 RowBox[{
  RowBox[{"api", "=", 
   RowBox[{"APIFunction", "[", 
    RowBox[{
     RowBox[{"\"\<number\>\"", "->", "Integer"}], ",", 
     RowBox[{
      RowBox[{"#number", "^", "2"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8249117535916386`*^9, 3.8249118068031673`*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"a3dd51af-681a-4a7c-9be9-f42916d53833"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"api", ",", "\"\<MySquareAPI\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82491178992452*^9, 3.8249118195953865`*^9}, {
  3.824911912931083*^9, 3.8249119164627495`*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"967e256c-e106-46bd-a5c4-1b6cf5a9760f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/santiagoc/MySquareAPI\"", 
     "https://www.wolframcloud.com/obj/santiagoc/MySquareAPI"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/santiagoc/MySquareAPI"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.82491182565275*^9, 3.82491191739281*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"f825410c-89a8-4fd0-8cd5-759a3d665b9e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This really becomes useful when you are calling the API in an external \
program/webpage/language. And different environments  would execute the API \
in different ways (that is out of the scope of a Wolfram Language workshop) \
but for example to call an API using Wolfram Language we could use the ",
 StyleBox["URLExecute",
  FontWeight->"Bold"],
 " function"
}], "Item",
 CellChangeTimes->{{3.824911943398219*^9, 
  3.8249120348129587`*^9}},ExpressionUUID->"85ff5012-c5de-48de-8040-\
66098496bbd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", 
  RowBox[{
  "\"\<https://www.wolframcloud.com/obj/santiagoc/MySquareAPI\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<number\>\"", "\[Rule]", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8249118621699085`*^9, 3.8249118910862036`*^9}, {
  3.824911927179323*^9, 3.824911934755325*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"0c7545a9-e8de-4ecb-917d-6afc59cb01ab"],

Cell[BoxData["\<\"144\"\>"], "Output",
 CellChangeTimes->{3.824911935753395*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"53124ca8-10c5-4560-b292-9c6b0559c29a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{581.25, 393.75},
WindowMargins->{{Automatic, -400.5}, {Automatic, -608.25}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 7, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1e312095-9508-461e-a414-7b0dd91c810e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 66, "Section",ExpressionUUID->"b15dab90-e222-40d9-aed8-49efa0db2cc2"],
Cell[745, 27, 206043, 3383, 224, "Input",ExpressionUUID->"6d216b0a-39ec-42a2-a856-9123f87c9a65"],
Cell[CellGroupData[{
Cell[206813, 3414, 178, 3, 55, "Subsection",ExpressionUUID->"6ca32428-0175-4536-b730-6bca5b2961c5"],
Cell[CellGroupData[{
Cell[207016, 3421, 176, 3, 45, "Subsubsection",ExpressionUUID->"a1bf438b-efea-4f26-aeaa-77d928f5f8a3"],
Cell[CellGroupData[{
Cell[207217, 3428, 220, 4, 31, "Item",ExpressionUUID->"f688fa47-de56-4cdb-860c-f9864d3c08ea"],
Cell[CellGroupData[{
Cell[207462, 3436, 582, 15, 28, "Input",ExpressionUUID->"f4290cf7-072b-4e19-aa0c-5d82dfa982d4"],
Cell[208047, 3453, 24356, 419, 239, "Output",ExpressionUUID->"5381d4c5-ffc5-490c-bc19-65bd47d1a900"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232452, 3878, 282, 8, 31, "Item",ExpressionUUID->"0da9fb17-71b8-4cbd-80fb-fa257db5f3d1"],
Cell[CellGroupData[{
Cell[232759, 3890, 379, 8, 28, "Input",ExpressionUUID->"ed33ef2e-56c0-4790-8abb-556d6dd34581"],
Cell[233141, 3900, 537, 12, 35, "Output",ExpressionUUID->"99138c17-30cf-474c-80f9-bd3d75a096bb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233727, 3918, 348, 10, 51, "Item",ExpressionUUID->"58ffba03-9afe-42e4-8951-f641e465e1f4"],
Cell[CellGroupData[{
Cell[234100, 3932, 605, 14, 32, "Input",ExpressionUUID->"8e229fab-2518-4a79-b0a9-942450a11e85"],
Cell[234708, 3948, 24362, 419, 239, "Output",ExpressionUUID->"1c4fa8aa-7e02-4cc4-a442-b932eb918be7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259119, 4373, 260, 6, 51, "Item",ExpressionUUID->"c7fb1693-e2bd-4848-8b86-87a84c99cdb1"],
Cell[259382, 4381, 291, 6, 47, "Input",ExpressionUUID->"fe67e5a9-4dab-4fe5-aaa0-745ed12b14b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259734, 4394, 217, 4, 55, "Subsection",ExpressionUUID->"05afc1f2-ff51-4577-bbfc-157b613686b4"],
Cell[CellGroupData[{
Cell[259976, 4402, 360, 10, 51, "Item",ExpressionUUID->"f3dc1fe9-573d-4bfc-888a-6bf1f80323fc"],
Cell[CellGroupData[{
Cell[260361, 4416, 270, 5, 28, "Input",ExpressionUUID->"598a2002-0f9d-4b48-b5ed-a260f7372259"],
Cell[260634, 4423, 487, 11, 56, "Output",ExpressionUUID->"c93db02e-974b-4932-9444-68e70a0f5902"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261170, 4440, 266, 8, 31, "Item",ExpressionUUID->"a6011ba7-dd19-4cc1-aeb9-c1533f33aa19"],
Cell[CellGroupData[{
Cell[261461, 4452, 645, 18, 47, "Input",ExpressionUUID->"d49f027c-f7ba-43ff-9670-210a2d92b75c"],
Cell[262109, 4472, 510, 12, 56, "Output",ExpressionUUID->"742acf8f-db30-456a-abb8-5a73b4d1d157"]
}, Open  ]],
Cell[262634, 4487, 578, 13, 32, "Input",ExpressionUUID->"c89b04ca-a281-4f79-a362-047f0d69fbda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263249, 4505, 549, 14, 91, "Item",ExpressionUUID->"39f94ab4-cf08-4099-9c08-4a4a7ef9346b"],
Cell[CellGroupData[{
Cell[263823, 4523, 649, 18, 47, "Input",ExpressionUUID->"019628eb-a998-47a0-ba9e-7684b2680dcf"],
Cell[264475, 4543, 510, 12, 56, "Output",ExpressionUUID->"83af9940-9bbc-4e5f-a780-df9c6e04b62b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[265034, 4561, 164, 3, 45, "Subsubsection",ExpressionUUID->"58496daa-13c2-4b0b-8ed2-b707500154c1"],
Cell[265201, 4566, 381, 7, 91, "Item",ExpressionUUID->"5bbf0b62-4f35-41c5-a851-0991be9a4e8f"],
Cell[CellGroupData[{
Cell[265607, 4577, 270, 7, 51, "Item",ExpressionUUID->"207d7ae5-26b3-4039-8f09-5c2b1a1edb53"],
Cell[CellGroupData[{
Cell[265902, 4588, 678, 18, 47, "Input",ExpressionUUID->"50903012-a5b6-442c-9b9d-e9d2dde5f3f9"],
Cell[266583, 4608, 510, 12, 35, "Output",ExpressionUUID->"3297aa43-8115-4f67-9118-82ed8bbcdf99"]
}, Open  ]]
}, Open  ]],
Cell[267120, 4624, 337, 7, 51, "Item",ExpressionUUID->"804e8d1f-8129-4042-98ea-abf6e20db9df"],
Cell[CellGroupData[{
Cell[267482, 4635, 421, 8, 31, "Item",ExpressionUUID->"5ea2d8ee-1c34-4141-8b84-938332db864d"],
Cell[CellGroupData[{
Cell[267928, 4647, 486, 11, 47, "Input",ExpressionUUID->"ff642380-a2be-4849-9989-acfd22d309f8"],
Cell[268417, 4660, 489, 11, 56, "Output",ExpressionUUID->"dcf88890-a7ab-4cce-a50d-971d30f66455"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[268955, 4677, 361, 10, 51, "Item",ExpressionUUID->"f07d90d3-3acd-4e99-9d30-84ccc23f3a17"],
Cell[CellGroupData[{
Cell[269341, 4691, 616, 17, 47, "Input",ExpressionUUID->"717ec2cc-d730-4387-8c72-e7d3b83bf0a1"],
Cell[269960, 4710, 508, 12, 35, "Output",ExpressionUUID->"79b6aa31-bad0-41ad-a82d-198659fe3ea1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[270529, 4729, 160, 3, 45, "Subsubsection",ExpressionUUID->"188a0a58-4ffd-43f5-9fe4-9bcc22091b3b"],
Cell[270692, 4734, 253, 6, 51, "ItemNumbered",ExpressionUUID->"3ea258e1-ce59-4030-844c-879fbd6ea84f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[270994, 4746, 158, 3, 55, "Subsection",ExpressionUUID->"1723fbce-0f71-4ccc-828a-67deb8fcdd5a"],
Cell[CellGroupData[{
Cell[271177, 4753, 256, 8, 31, "Item",ExpressionUUID->"4686861a-1911-4c18-aed8-29dcb9cd1c50"],
Cell[CellGroupData[{
Cell[271458, 4765, 212, 4, 28, "Input",ExpressionUUID->"283ec559-3b01-45f2-9a26-76e90cf6ed5d"],
Cell[271673, 4771, 13469, 272, 65, "Output",ExpressionUUID->"31611981-e350-4fd1-bff5-d2ce54c12ba4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[285191, 5049, 210, 5, 31, "Item",ExpressionUUID->"67d8aa4a-296e-4b54-8ff3-a7754fe92a84"],
Cell[285404, 5056, 15988, 267, 145, "Input",ExpressionUUID->"8aaf7750-dc7f-43b9-909f-2b20d7f624f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301429, 5328, 457, 10, 51, "Item",ExpressionUUID->"ae0509f8-5eed-469c-b251-1a859856f780"],
Cell[301889, 5340, 298, 7, 28, "Input",ExpressionUUID->"224f35a8-bf8c-41c8-b1b3-b28131ad4ecb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302224, 5352, 304, 6, 71, "Item",ExpressionUUID->"d2228147-3cec-4afb-a286-b46a40cbcb94"],
Cell[CellGroupData[{
Cell[302553, 5362, 518, 11, 47, "Input",ExpressionUUID->"0e95258c-2b5e-4713-8cb6-58c805e17391"],
Cell[303074, 5375, 13497, 273, 65, "Output",ExpressionUUID->"7d8fa1c7-75f5-43c8-bc2b-e5edcfbc7ea9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[316620, 5654, 257, 6, 51, "Item",ExpressionUUID->"da553eef-64b2-4688-be67-e1dc9bc04ceb"],
Cell[316880, 5662, 493, 12, 47, "Input",ExpressionUUID->"ab2d3cf1-6da2-479e-a2f4-087c46e32850"],
Cell[317376, 5676, 493, 12, 47, "Input",ExpressionUUID->"12a5ce5d-31c0-4c31-b052-838534e4589b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317906, 5693, 201, 3, 31, "Item",ExpressionUUID->"7b0d0252-6951-43b3-8e60-6a40b405c940"],
Cell[CellGroupData[{
Cell[318132, 5700, 218, 4, 28, "Input",ExpressionUUID->"705aa9cb-6c3b-4dfd-ab59-5f03a97b956f"],
Cell[318353, 5706, 660, 17, 51, "Output",ExpressionUUID->"8046e6b1-2999-48cc-9674-64520044784a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319062, 5729, 316, 8, 31, "Item",ExpressionUUID->"f745737b-4f01-4c77-80b3-c16748599797"],
Cell[CellGroupData[{
Cell[319403, 5741, 290, 6, 28, "Input",ExpressionUUID->"7e46d5c3-c2f0-4de6-bdf8-78f4df2e4de5"],
Cell[319696, 5749, 35506, 655, 151, "Output",ExpressionUUID->"555ed2f3-7ae6-4d18-af92-ec2431146458"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355251, 6410, 204, 3, 31, "Item",ExpressionUUID->"621525ff-191e-42f4-b248-9da21f467242"],
Cell[CellGroupData[{
Cell[355480, 6417, 247, 5, 28, "Input",ExpressionUUID->"880f0781-a752-401e-b7e8-3d5eae176fd1"],
Cell[355730, 6424, 176, 3, 32, "Output",ExpressionUUID->"676adf6e-d6b5-4f54-9f5f-e1ee429f08d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355943, 6432, 297, 6, 28, "Input",ExpressionUUID->"2c2df39b-16a8-4bab-9d6f-1f6f987fef82"],
Cell[356243, 6440, 206, 4, 32, "Output",ExpressionUUID->"5b13bd46-4361-4ed2-9432-d98959c47415"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356486, 6449, 255, 5, 28, "Input",ExpressionUUID->"63502199-856b-4fe5-b24c-b411f5646ffd"],
Cell[356744, 6456, 1326, 31, 206, "Output",ExpressionUUID->"b654f8d2-69db-484e-9d5f-8bd6ebe27552"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[358131, 6494, 155, 3, 55, "Subsection",ExpressionUUID->"c885c283-58b5-49a8-a3fa-8b0b0459afba"],
Cell[CellGroupData[{
Cell[358311, 6501, 443, 12, 71, "Item",ExpressionUUID->"4d7c499e-0fe3-45aa-8bce-70bd3a30722b"],
Cell[358757, 6515, 318, 11, 32, "Input",ExpressionUUID->"15b9d7e3-e25a-4433-9847-3e83d92d4a23"],
Cell[CellGroupData[{
Cell[359100, 6530, 340, 8, 28, "Input",ExpressionUUID->"889d64e2-01a2-46a7-b853-463bcb3f437a"],
Cell[359443, 6540, 1736, 44, 151, "Output",ExpressionUUID->"36c79035-174d-411d-9511-0fccffdca2e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361216, 6589, 336, 8, 28, "Input",ExpressionUUID->"e1675a27-d504-4fb5-ae57-77a1d7f9260c"],
Cell[361555, 6599, 3285, 70, 184, "Output",ExpressionUUID->"bc8b4fb4-75ea-48ac-ba62-85134c9134e8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[364889, 6675, 214, 5, 31, "Item",ExpressionUUID->"6b864c0d-3963-4250-b944-ffe115b397f5"],
Cell[CellGroupData[{
Cell[365128, 6684, 537, 13, 47, "Input",ExpressionUUID->"a88df05a-0e65-49e7-99f8-f83204afbedd"],
Cell[365668, 6699, 483, 11, 56, "Output",ExpressionUUID->"86468809-09c3-4e68-a12f-b123bf2cdcdb"]
}, Open  ]],
Cell[366166, 6713, 214, 4, 28, "Input",ExpressionUUID->"0168e6cb-2184-4a01-b9b2-c198d0785085"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366417, 6722, 222, 5, 51, "Item",ExpressionUUID->"708502d8-4218-4890-b069-7adf56e4bf5e"],
Cell[CellGroupData[{
Cell[366664, 6731, 1325, 30, 122, "Input",ExpressionUUID->"fb712d65-96f7-47c3-b7f0-5ecf25be22cc"],
Cell[367992, 6763, 528, 12, 56, "Output",ExpressionUUID->"bf61c130-4fc9-44e0-b74c-96c7da399bed"]
}, Open  ]],
Cell[368535, 6778, 216, 4, 28, "Input",ExpressionUUID->"ee00bb9c-eab7-42fc-97f1-ed564fc0da3c"],
Cell[CellGroupData[{
Cell[368776, 6786, 212, 4, 28, "Input",ExpressionUUID->"606107e0-2bdc-4b6e-b0d7-ec412888fc20"],
Cell[368991, 6792, 40383, 758, 199, "Output",ExpressionUUID->"2b18b099-a42c-49dd-94e7-abdd655d4991"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[409423, 7556, 250, 6, 51, "Item",ExpressionUUID->"f13836a7-a328-45af-a919-d785a37f96ba"],
Cell[CellGroupData[{
Cell[409698, 7566, 1893, 44, 235, "Input",ExpressionUUID->"01a3a229-7e3b-4019-a44e-96166669f01d"],
Cell[411594, 7612, 4624, 97, 239, "Output",ExpressionUUID->"aff935aa-4497-4304-85a6-c8e820272b38"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[416267, 7715, 394, 12, 31, "Item",ExpressionUUID->"e114136a-ee26-4987-a195-7d6fca3e7c52"],
Cell[CellGroupData[{
Cell[416686, 7731, 2560, 58, 310, "Input",ExpressionUUID->"0b8ce2dd-d4d5-4cc2-97e2-71812b20e4b6"],
Cell[419249, 7791, 5534, 114, 333, "Output",ExpressionUUID->"bf4aff5a-0332-456c-8c7f-b4cf0b0d26af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424820, 7910, 414, 8, 28, "Input",ExpressionUUID->"fda23b6c-5857-4e7e-ab55-172ba069a30f"],
Cell[425237, 7920, 552, 12, 56, "Output",ExpressionUUID->"c1228708-ff7a-481a-b3a4-8c029e57ff45"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425850, 7939, 232, 4, 55, "Subsection",ExpressionUUID->"faf31f36-32c3-492d-82ca-2b6111e3ced4"],
Cell[CellGroupData[{
Cell[426107, 7947, 376, 10, 51, "Item",ExpressionUUID->"cb7e568d-cffd-46c5-8b1d-d23e12b9a396"],
Cell[426486, 7959, 386, 10, 28, "Input",ExpressionUUID->"a3dd51af-681a-4a7c-9be9-f42916d53833"],
Cell[CellGroupData[{
Cell[426897, 7973, 371, 7, 28, "Input",ExpressionUUID->"967e256c-e106-46bd-a5c4-1b6cf5a9760f"],
Cell[427271, 7982, 498, 11, 56, "Output",ExpressionUUID->"f825410c-89a8-4fd0-8cd5-759a3d665b9e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[427818, 7999, 520, 11, 111, "Item",ExpressionUUID->"85ff5012-c5de-48de-8040-66098496bbd3"],
Cell[CellGroupData[{
Cell[428363, 8014, 421, 9, 66, "Input",ExpressionUUID->"0c7545a9-e8de-4ecb-917d-6afc59cb01ab"],
Cell[428787, 8025, 163, 3, 32, "Output",ExpressionUUID->"53124ca8-10c5-4560-b292-9c6b0559c29a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

